[{
    "title": "PiDVR Record over the air TV on a Raspberry Pi 4",
    "date": "",
    "description": "",
    "body": "About the project The following project explains how I used a Raspberry Pi 4 to create a personal digital video recorder to record over-the-air tv.\nRequired Hardware This project requires the following hardware:\n Raspberry Pi 4 (with the required parts)  4GB of ram A 16GB SD card A micro HDMI cable Monitor with HDMI input A 15.3W USB-C Power Supply (3A @ 5v power supply) Raspberry Pi 4 case. Preferably a passive cooling case for noise consideration.\nI used the Argon One case.   An HDHomeRun Dual tuner from Silicondust. The oldest model will do. For this build, I used the HDHR3-US which dates back to 2012-2013. An over-the-air tv antenna for ATSC signals. For this build I use the Clearstream 4 antenna by Antennas Direct. 50ft to 100ft Coaxial Cable, 18AWG, 75 Ohm to connect the antenna to the HDHomeRun. External Solid State Drive (SSD) with about 500Gb in size. USB 3.0 to SATA Converter Adapter - Look for one that has UASP support.  Software list This section defines the list of required software for the project. Follow the instructions in the next section to know when and how to install them.\n Download Raspberry Pi OS with desktop and recommended software from https://www.raspberrypi.org/software/operating-systems/ Download the Raspberry Pi Imager to write the Raspberry Pi OS image to an SD card.  Instructions Write Raspberry Pi OS image file to your SD card  Launch the Raspberry Pi Imager for writing the Raspberry Pi OS image file to your SD card. There are plenty of online tutorial for this operation Turn on the Raspberry Pi and follow \u0026ldquo;first launch\u0026rdquo; instructions on screen.  Update the Raspberry Pi firmware The oldest Raspberry Pi 4 models that originally shipped uses an out of date firmware. Most of all, they do not support booting from an SSD drive connected through USB. Updating the firmware provides better thermals and USB boot support.\nJeff Geerling has written an excellent guide on how to upgrade the Raspberry Pi 4\u0026rsquo;s firmware.\nFollow his instructions available at:\nhttps://www.jeffgeerling.com/blog/2019/upgrade-raspberry-pi-4s-firmware-bootloader-better-thermals.\nIn summary, run the following commands in a terminal:\nsudo apt update\rsudo apt -y full-upgrade\rsudo apt install -y rpi-eeprom\rsudo rpi-eeprom-update\rsudo reboot\r Check that USB 3.0 to SATA adaptor has UASP support UASP stands for USB Attached SCSI Protocol. In very few words, it is a protocol used in USB storage devices and adapters that performs better that the traditional USB 1.1 protocol.\nJeff Geerling has written an excellent guide on how to verify if your adaptor is UASP compatible.\nFollow his instructions available at:\nhttps://www.jeffgeerling.com/blog/2020/uasp-makes-raspberry-pi-4-disk-io-50-faster.\nIn summary, connect your ssd drive and run the following commands in a terminal:\nlsusb -t\r From Jeff Geerling article:\nThis command lists all the USB devices in a tree, and for each of the hard drives, you should see a Driver listed. If it\u0026rsquo;s uas , then your drive supports UASP and you\u0026rsquo;ll get the best speed. If it\u0026rsquo;s usb-storage , then it\u0026rsquo;s using the older BOT protocol and you won\u0026rsquo;t see the full potential.\nEnable USB boot on the Raspberry Pi A USB 3.0 Flash Drive or an USB 3.0 SSD is almost always preferable to an SD Card when booting the Raspberry Pi OS. The thing about booting Operating Systems is that 4K Read/Write Speed dictate the experience more than the sequential Read/Write Speed (the usual advertised speed). SD card usually have bad performance regarding 4K Read/Write speed.\nOn the Raspberry Pi4, you can specify whether to boot from USB or network if the SD card isn\u0026rsquo;t inserted.\nThe raspi-config utility can enable USB Booting on the Raspberry Pi 4:\n Launch the application in a terminal. Enter Advanced Options section. Enter Boot Order section. Select USB Boot option.  See raspi-config.md documentation and bcm2711_bootloader_config.md documentation on https://www.raspberrypi.org/ for more details.\nMove Raspberry Pi OS from SD card to SSD drive Running the Raspberry Pi 4 on an SD card has great read and write speed. Opening an application feels good and we do not have to wait forever to get us going. However, an SD card cannot sustain the passage of time. Our build requires to run the raspberry pi 24/7. Sooner or later the SD card will get corrupted during a write operation and then our precious setup we created won\u0026rsquo;t be able to boot from the card anymore.\nOne solution is to moving the root file system of your Raspberry PI to an external USB drive bypasses this problem. This article presents instructions on moving the root file system from the SD card to an external USB drive, such that you can boot your Raspberry PI with the root file system on the USB drive.\nThe SD Card Copier application, which can be found on the Accessories menu of the Raspberry Pi Desktop, will copy Raspberry Pi OS from your SD card to your SSD drive. To use it, you will need to have the USB drive already connected before launching the application.\nFollow the following instruction for moving the Raspberry Pi OS from SD card to SSD drive:\n Connect the SSD drive to a USB 3.0 port on the Raspberry Pi. Launch the SD Card Copier application, which can be found on the Accessories menu of the Raspberry Pi Desktop. Select your SD card device in the Copy From Device dropbown. It should probably be labeled /dev/mmcblk0. Select your SSD device in the Copy To Device dropbown. It should probably be labeled /dev/sda. Click on Start button. Wait for the process to complete. Close the application.  Shrink the Operating System partition Following the copy of the Raspberry Pi OS from the SD card to the SSD, the SD Card Copier application has automatically increased the size of the last partition to the total size of the SSD. This is a problem for the following reasons:\n If we have a single huge partition, we are not able to backup the operating system on our disk. This is because a backup destination image cannot be stored on the same partition that it is backuping from. We need at least 2 partitions to backup the operating system to the same disk. To allow quick backup of the operating system, we need the partition to be reasonably small. On a 16GB card, the operating system partition is 14.58 GB of which about half is in use. This gives us plenty of additional space if we need to install other software. For our build, we want to store our tv recordings and the operating system on different partitions. TV recordings should be stored in the largest partition of the disk. In many cases, it is better to store operational data (in our case: recordings, backups, etc) on a separate partition (other than the OS). This configuration allows to restore the OS from a backup or install a fresh new operating system without having to erase the operational data. In other words, we get to keep our recordings in case of an OS corruption or a boot failure.  The following instructions explains how to reduce the size of the OS partition:\n  Open GParted.\n  Switch to the SSD device (probably /dev/sda)\n  Select the last partition. This is the partition of the Operating System.\n  Resize the partition to the original size of the SD card.\n  Create a partition for the remaining space of the SSD.\nFormat the partition as ext4. This is to make sure we get the best read and write performance.\nFor reference, the Rraspberry Pi 4 is capable of the following writing speeds:\n 85 mb/s to an external usb 3.0 SSD with an ext4 partition. 26 mb/s to an external usb 3.0 SSD with an NTFS partition.    Set the name of the partition to pidvr.\n  Boot from the SSD drive At this point, our SSD is now properly configured to be used as our boot device.\nFollow these instructions to boot from the SSD:\n Shutdown the device Disconnect the power cable. Remove the SD card from the SD card slot. Connect the power cable to the Raspberry Pi.  Uninstall nonessential software Since we installed the Raspberry Pi OS with desktop and recommended software image, there are multiple software that are shipped with the image that we do not intend to use. Most importantly, some of them uses a lot of disk space.\nUninstall the following unneeded software:\n Open Recommended Software manager, which can be found in Preferences menu. Uncheck the following software  In Education, uncheck SmartSim In Games, uncheck them all In Programming, Uncheck Mathematica, Scratch, Scratch 3, Sense HAT emulator, Sonic Pi   Click Apply button to uninstall  Install additional software To allow management of the PiDVR, we will need to install other software.\nArgon One fan script This is specific to our build since we are using the Argon One case. The instructions from http://wagnerstechtalk.com/argonone/ properly explains how to install the scripts to support the Argon One power button and fan speed.\nIn summary, run the following commands in a terminal:\ncurl https://download.argon40.com/argon1.sh | bash\r Other The following list of programs can be installed manually in the terminal:\n hdparm, to perform read and write performance tests GNOME Disks, to get information about disks and partitions GNOME Partition Editor (gparted), to resize and format partions. GSmartControl, to get SMART information about our disks. QDirStat, to calculate disk usage per directories. 7-zip, to add support for *.7z archives in Archiver software.  The following instructions can install all software mentioned above:\nsudo apt-get update\rsudo apt-get install hdparm gnome-disk-utility gparted gsmartcontrol qdirstat p7zip-full\r Create storage directories for our recordings The instructions in this section explains how to create our base storage directories.\nAs discussed above, we want tv recordings to be stored on the SSD in the pidvr partition which is automatically mounted at /media/pi/pidvr.\nIn directory /media/pi/pidvr, create the following directories:\n backup, for storing backup images of the raspberry pi os recordings, for storing our recordings, obviously shared, for creating a Windows shared directory for easily transferring files from/to the raspberry pi. See next section below.  By default, these directories will only be writable (or accessible) for the pi user on the Raspberry Pi. This is a problem for our build since tvheadend run as hts user and hts user won\u0026rsquo;t have access by default to our recordings directory. To allow anyone to have read and write access to these directories, enter the following command in a terminal:\nsudo chmod -R 7777 /media/pi.\r Note: by default, a partition permissions are inherited from its parent directory where the partition is mounted. In this case, the partition mounted at /media/pi/pidvr inherits the permissions from /media/pi directory.\nA reboot of the Raspberry Pi may be required for the new partition is show up as writable for everyone.\nInstall Samba SMB/CIFS support By default, Raspberry Pi OS does not include CIFS/Samba support, but this can easily be added. The Raspberry Pi documentation has an article available at https://www.raspberrypi.org/documentation/remote-access/samba.md that explains how to proceed.\nIn summary, run the following commands in a terminal:\nsudo apt update\rsudo apt install -y samba samba-common-bin smbclient cifs-utils\r Note: During installation, if you have other samba servers on your network, choose no which is the default option.\nTo create shared directories that can be accessed by a Windows computer, edit the configuration file /etc/samba/smb.conf with the following command:\nsudo nano /etc/samba/smb.conf\r and add the following new sections:\n# Create a read-only shared directory called 'recordings' to\r# easily export recording files outside of the raspberry pi.\r[recordings]\rcomment = DVR recordings\rpath = /media/pi/pidvr/recordings\rforce user = pi\rpublic = yes\rwritable = no\r# Create a read ans write shared directory called 'shared' to\r# easily transferring files from/to the raspberry pi.\r[shared]\rpath = /media/pi/pidvr/shared\rforce user = pi\rpublic = yes\rwritable = yes\rcreate mask = 0777\rdirectory mask = 0777\r Restart the samba daemon service for the changes to take effect:\nsudo systemctl restart smbd\r Run Raspberry Pi Configuration utility The default configuration of the pi should be properly set for most users. For our usage, we need to change some of the configuration settings.\nFor example, the default hostname for the raspberry pi is raspberrypi which is a problem if you own multiple raspberry pies because the hostname of a device on a network must be unique for every device in order to be reachable by others. It is also good practice to change the hostname to something that represent the intended usage of the pi.\nThe Raspberry Pi Configuration application, which can be found on the Preferences menu of the Raspberry Pi Desktop, will allow you to change the required settings. Please change the following settings accordingly:\n In System tab, change the hostname to pidvr. In Interfaces tab, enable SSH and VNC.  Install Tvheadend This is the main software for the build. You can find more information about tvheadend at https://tvheadend.org/.\nThere are already great guides that explains how to install and configure tvheadend. For example, thepihut and pimylifeup have great instruction guides.\nIn summary, run the following commands in a terminal to install tvheadend:\nsudo apt update\rsudo apt install -y tvheadend\r Note: During installation, you will need to provide a username and password for the tvheadend aministrator. You can use pidvr and pidvr.\nTvheadend initial configuration setup After installation, connect to the tvheadend web interface to configure the application and scan for channels. Head over to the following address:\nhttp://pidvr:9981/\nWelcome (1 of 2) \ntvheadend - welcome page (1 or 2)\nThis first screen will require you to select a language the web interface and the electronic program guide (EPG):\nEnter the following values:\n English French  Click Save \u0026amp; Next to get to the next page.\nNote: Since we actually changed the language of the web interface, the same page may be displayed when you first click Save \u0026amp; Next. Click it again.\nWelcome (2 of 2) \ntvheadend - welcome page (2 or 2)\nThe next page allows you to configure the network access.\nWe are going to allow all network access by leaving the \u0026lsquo;Allowed network\u0026rsquo; field blank.\nWe are also going to bypass any logins by entering * in each of those fields.\nClick Save \u0026amp; Next to get to the next page.\nNetwork settings \ntvheadend - network settings\nThe next screen configures the tuners.\nLeave the IPTV fields from Network 1 blank.\nAt this point, tbheadend should have already discovered both HDHomeRun ATSC-T Tuner #0 and #1 identified in \u0026ldquo;Network 2\u0026rdquo; and \u0026ldquo;Network 3\u0026rdquo; sections. Select ATSC-T Network in the Network type fields for each network.\nClick Save \u0026amp; Next to get to the next page.\nAssign predefined muxes to networks \ntvheadend - muxes\nWe now have to set the \u0026ldquo;muxes\u0026rdquo;. To save you from manually entering muxes, Tvheadend includes predefined mux lists. For best results in Montreal area, select the following muxes: United States: us-ATSC-center-frequencies-8VSB\nClick Save \u0026amp; Next to get to the next page.\nScan status \ntvheadend - scan status\nThe scan will now commence. It will search for \u0026ldquo;muxes\u0026rdquo; and \u0026ldquo;services\u0026rdquo; that are distributed via those muxes. Note, a service is a TV channel. When the scan hits 100% you\u0026rsquo;ll be able to see how many muxes and services it\u0026rsquo;s picked up.\n\ntvheadend - scan status (100% completed)\nClick Save \u0026amp; Next to get to the next page\nService mapping \ntvheadend - service mapping\nNext on the wizard is service mapping. This step maps the services that your scan discovered to channels. If you are interested in adding all channels in your area, do not tick any checkbox. Otherwise, tick the three check boxes.\nClick Save \u0026amp; Next to get to the next page.\nFinished \ntvheadend - setup finished\nThe initial setup is finished. Click Finish to complete the\nAt this stage we like to reboot the Raspberry Pi. In the terminal use the following command to restart your Raspberry Pi:\nsudo reboot now\r Tvheadend additional configuration The following list are specific configuration settings that I like to set for tvheadend:\nSet web interface level to Advanced by default  Go to Configuration, General, Base tab. Set User interface level to value Advanced. Click on Save when done.  Test for tvheadend has access to \u0026lsquo;recordings\u0026rsquo; directory tvheadend runs as user hts. To test read and write access from hts user perspective, type the following in a terminal:\nsudo su hts\rcd /media/pi/pidvr/recordings\rtouch hts_test_file\rrm hts_test_file\r The commands specified above should not output any error like the following:\ntouch: cannot touch 'hts_test_file': Permission denied\r Setup preferred recordings settings  Go to Configuration, Recording, Digital Video Recorder Profiles tab. Click on the Default profile. Set Recording system path to value /media/pi/pidvr/recordings. Set Pre-recording padding to 1 min. Set Post-recording padding to 3 min. Uncheck Skip commercials options. Check Include date in filename, Include time in filename and Use Windows-compatible filenames options. Click on Save when done.  Enable Timeshift Timeshift is disabled by default and needs to be enabled to get the maximum out of tvheadend.\n Go to Configuration, Recording, Timeshift tab. Switch to Expert mode. This is to work around a bug explained here and here. Check enabled. Set Storage path to value /media/pi/pidvr/recordings. Set Maximum size (MB) to value 4096. Check On-demand (no first rewind) and Fit to RAM (cut rewind). Click on Save when done.  Set Network Character set Montreal channels have the EPG encoding using UTF-8. The network character encoding must be specified manually.\n Go to Configuration, DVB Inputs, Networks tab. Select the default network created by the first scan (named ATSC-T Network). Click edit button. Change the name of the network (i.e. My ATSC Network) Set Character set to value UTF-8. Click on Save.     *Switch to      _Muxes_ tab.\r Select all available muxes: click on the first mux and press CTRL+A. Click edit button. Check Character set in Advanced Settings. Set Character set to value UTF-8. Click on Save.     *Switch to      _Services_ tab.\r Select all available services: click on the first service and press CTRL+A. Click edit button. Switch to Export view level. Check Character set in Advanced Settings. Set Character set to value UTF-8. Click on Save.  Map desired services as channels If you did not mapped all services as channels during first configuration, now is the time to do it.\nFor Montreal area, here is the list of French channels:\n Radio-Canada CBFT-DT TVA CFTM-DT Noovo CFJP-DT Télé-Québec CJNT   Go to Configuration, DVB Inputs, Services tab. Select all available services: click on the first service and press CTRL+A. Click edit button. Check Enabled setting in Basic Settings and uncheck the value. Click on Save. Check only the your desired channels that you want to map Click on Save. Click on Map Selected then Map selected services, a new window will open Uncheck Create type-based tags. Click on Map sercices. Wait for the mapping process to end.  Change channel identifiers to meaningful names This is for changing the name of the channels from CBFT (or something) to the actual name of the tv network that owns these channels.\n Go to Configuration, Channel / EPG, Channels tab. Double click the name of each channel that you need to rename Click on Save when done.  For example:\n Radio-Canada - CBFT-DT TVA - CFTM-DT Noovo - CFJP-DT Télé-Québec - CJNT  UTF-8 characters in Electronic Program Guide (EPG) - bug The tv guide seems to be still using non-utf8 characters. This is still an open issue and I have not yet figured out a way to solve the issue:\n Configure Kodi to connect to tvheadend The following instructions defines how to connect Kodi with tvheadend to view recordings:\nInstall tvheadend add-on  Open Kodi. Go to Settings. Select Add-ons. Select Install from repository. Select PVR Clients category. Select Tvheadend HTSP Client. Select Install and wait for the add-on to install. Select Tvheadend HTSP Client (again). Select Configure. Set tvheadend hostname to pidvr. Click on OK when done.  ",
    "ref": "/pidvr-record-over-the-air-tv-on-a-raspberry-pi-4/"
  },{
    "title": "How to setup macOS Catalina 10.15 in VirtualBox for C++ development on Github.",
    "date": "",
    "description": "",
    "body": "Introduction This post explains all the instructions required in order to get started with c++ no macOS 10.15 Catalina.\nThis article assumes that you already have access to a macOS image ISO file and that you already created a macOS virtual machine in VirtualBox.\nUpdate macOS with latest security updates and bug fixes Following macOS Catalina 10.15 installation, it is best practice to update the Operating System with the latest software \u0026amp; security update.\n Open System Preferences. Click on Software Update, a new window will open. Install all updates that are available for macOS Catalina 10.15.  At the time of this writing, the latest version of macOS Catalina is version 10.15.7.\nNote: You can install optional updates by clicking on More info\u0026hellip; and selecting updates that are related to Catalina.\n Set system preferences for developers Enable SSH and File sharing  Open System Preferences. Click on Sharing. Set a new Computer hostname:  Locate Computer Name field. Click the Edit button. Set a meaningful value for the Local Hostname. For example MACDEV01. Click the OK button.   Check File Sharing.  Click Options\u0026hellip; button. In Windows File Sharing section, check you account name and enter your account password. This will make sure that shared folders requires a username/password for write access. Click on Done button.   Check Remove Login.  Allow access for All users instead of only for Administrators. Note your computer ip address in the note To log in to this computer remotely.    Add Terminal icon in Dock By default, a Terminal icon is not already available in Dock. As most developers, you will probably require to use Terminal more than once. Do the following to add Terminal in Dock:\n Open Launchpad. Expand Other group. Drag Terminal icon to Dock.  Show address bar in Finder By default, Finder does not show the address bar (the location of the current directory).\nOpen a Terminal and enter the following command:\n",
    "ref": "/how-to-setup-macos-catalina-10-15-in-virtualbox-for-c-development-on-github/"
  },{
    "title": "How to encode command line parameters on Windows – done right",
    "date": "",
    "description": "",
    "body": "Introduction This post is a follow up on command line arguments. I recently published a C++ library (libArgvCodec) which properly handles all encoding and decoding of command line arguments. It is much safer to use the library than simply wrap each argument with double quotes.\nThis post is about the list of rules that the library implements for encoding and decoding of arguments.\nUsing libArgvCodec library The libArgvCodec library can be used for free and is released as Open Source. The code is available here. Feel free to download the library to use it in your own projects.\nEncoding and Decoding rules If you do not want to use the library, the following section shows the rules that are implemented into the library for properly handling all situations and special characters.\nFeel free to use these rules to implement your own library.\nRule #1 - Delimiters Tabs or [space] characters are argument delimiters (separators) but *only* when outside a string and outside a caret-string.\nExamples:\n   Command Line Arg #1 Arg #2 Arg #3     a b c a b c    Rule #2 - Strings Double quotes character (\u0026quot;) starts or ends a string. Strings allows one to insert a delimiter (or separators) character to an argument. The double quotes character is omitted from the argument.\nNote that strings may not always be ended (the end of the command line may be hit without the end-of-string character)\rIf a string is juxtaposed to another argument (not separated by a delimiter character), they form the same argument.\nExamples:\n   Command Line Arg #1 Arg #2 Arg #3     \u0026ldquo;a b c\u0026rdquo; a b c     a\u0026quot; b\u0026quot; c a b c    \u0026ldquo;a \u0026ldquo;b c a b c     Rule #2.1 - Plain double quotes Plain double quotes character (\u0026quot;) must be escaped with \u0026amp;lt;strong\u0026gt;\\\u0026quot;\u0026amp;lt;/strong\u0026gt; (or escaped with \u0026amp;lt;strong\u0026gt;\u0026quot;\u0026quot;\u0026amp;lt;/strong\u0026gt;) and does not end the string. (If not escaped, they act as strings markers (Rule #2).\nCharacters escaped with \u0026amp;lt;strong\u0026gt;\\\u0026quot;\u0026amp;lt;/strong\u0026gt; can be seen inside or outside strings but characters escaped with \u0026amp;lt;strong\u0026gt;\u0026quot;\u0026quot;\u0026amp;lt;/strong\u0026gt; can *only* be seen inside a string.\nExamples:\n   Command Line Arg #1 Arg #2 Arg #3     a \u0026quot;b c a \u0026ldquo;b c   \u0026ldquo;a \u0026quot;b\u0026rdquo; c a \u0026ldquo;b c    \u0026ldquo;a \u0026ldquo;\u0026ldquo;b\u0026rdquo; c a \u0026ldquo;b c    a \u0026ldquo;\u0026ldquo;b c a b c   \u0026quot;\u0026rdquo;\u0026rdquo;\u0026rdquo; \u0026quot;      Rule #2.2 - Caret-String \u0026amp;lt;strong\u0026gt;^\u0026quot;\u0026amp;lt;/strong\u0026gt; sequence starts or ends a caret-string. Caret-strings are different than normal strings. Caret-strings may be ended with an unescaped \u0026amp;lt;strong\u0026gt;\u0026quot;\u0026amp;lt;/strong\u0026gt; character. Caret-string may not be ended.\nNote that caret-strings may not always be ended (the end of the command line may be hit without the end-of-string character)\rIf a caret-string is juxtaposed to another argument (not separated by a delimiter character), they are part of the same argument.\nExamples:\n   Command Line Arg #1 Arg #2 Arg #3     ^\u0026ldquo;a b^\u0026rdquo; c a b c    ^\u0026ldquo;a b\u0026rdquo; c a b c    ^\u0026ldquo;a b^\u0026ldquo;c a bc     a^\u0026ldquo;b c^\u0026rdquo; ab c     ^\u0026ldquo;a b c^\u0026rdquo; a b c     a^\u0026rdquo; b^\u0026rdquo; c a b c    ^\u0026ldquo;a ^\u0026ldquo;b c a b c     Rule #2.3 - Plain double quotes (Caret-String) Plain double quotes character (\u0026quot;) must be escaped with \u0026amp;lt;strong\u0026gt;\\^\u0026quot;\u0026amp;lt;/strong\u0026gt; when inside a caret-string.\nNote that \u0026amp;lt;strong\u0026gt;\\^\u0026quot;\u0026amp;lt;/strong\u0026gt; characters sequence can also be visible outside a string.\rExamples:\n   Command Line Arg #1 Arg #2 Arg #3     ^\u0026ldquo;a ^\u0026rdquo; b^\u0026rdquo; c a \u0026quot; b c    ^\u0026ldquo;a \u0026quot; b^\u0026rdquo; c a \u0026quot; b^ c    a b^\u0026ldquo;c a b\u0026quot;c     Rule #3 - The \\ character Plain \u0026amp;lt;strong\u0026gt;\\\u0026amp;lt;/strong\u0026gt; character must be escaped with \u0026amp;lt;strong\u0026gt;\\\\\u0026amp;lt;/strong\u0026gt; if they precedes a \u0026amp;lt;strong\u0026gt;\u0026quot;\u0026amp;lt;/strong\u0026gt; character or \u0026amp;lt;strong\u0026gt;^\u0026quot;\u0026amp;lt;/strong\u0026gt; character sequence. (string or caret-string termination).\nExamples:\n   Command Line Arg #1 Arg #2 Arg #3     a\\b a\\b     \u0026ldquo;a\\b\u0026rdquo; a\\b     a\\\u0026ldquo;b c a\\b c     a\u0026quot;b c a\u0026quot;b c    a\\\u0026ldquo;b c\u0026rdquo; a\\b c     \u0026ldquo;a\\\u0026quot;b c\u0026rdquo; a\u0026quot;b c     a\\^\u0026ldquo;b c a\\b c     a\\^\u0026ldquo;b c\u0026rdquo; a\\b c     \u0026ldquo;a\\^\u0026ldquo;b c\u0026rdquo; a\\^b c     Rule #4 - Shell characters The following characters are special shell characters:\n\u0026amp;, \u0026lt;, \u0026gt;, (, ), |, % or !\nRule #4.1 (in string) Shell characters must be read as plain text when inside a string.\nExamples:\n   Command Line Arg #1 Arg #2 Arg #3     \u0026ldquo;a \u0026lt; b\u0026rdquo; c a \u0026lt; b c    \u0026ldquo;a ^\u0026lt; b\u0026rdquo; c a ^\u0026lt; b c     Rule #4.2 (in caret-string) Plain shell characters must be escaped with \u0026amp;lt;strong\u0026gt;^\u0026amp;lt;/strong\u0026gt; when inside a caret-string or outside a string.\nExamples:\nCommand Line\rArg #1\rArg #2\rArg #3\r\r\ra ^a\r\rb\r\r\r^\"a ^a c\r\r\r\r^\"a The system cannot find the file specified.\r\r\r^\"a \u0026 b^\" c\r'b\"' is not recognized as an internal or external command, operable program or batch file.\r\r\r^\"a \u0026whoami^\"\routputs: %USERDOMAIN%\\%USERNAME%\r\r\rRule #4.3 (Escaped non-shell characters) Non-shell characters that are escaped with \u0026amp;lt;strong\u0026gt;^\u0026amp;lt;/strong\u0026gt; when inside a caret-string or outside a string and must be read as plain characters.\nExamples:\n   Command Line Arg #1 Arg #2 Arg #3     ^a^b ^c ab c    \u0026ldquo;^a^b\u0026rdquo; ^c ^a^b      Rule #5 - Empty arguments Empty arguments must be specified with \u0026amp;lt;strong\u0026gt;\u0026quot;\u0026quot;\u0026amp;lt;/strong\u0026gt; (enclosed by two consecutive delimiters).\nNote that empty arguments can also be specified with \u0026amp;lt;strong\u0026gt;^\u0026quot;^\u0026quot;\u0026amp;lt;/strong\u0026gt; or a combination of the two.\rExamples:\n   Command Line Arg #1 Arg #2 Arg #3     a \u0026quot;\u0026rdquo; b a [empty] c   \u0026quot;\u0026rdquo; a b [empty] a b   a b \u0026quot;\u0026rdquo; a b [empty]   a ^\u0026quot;^\u0026rdquo; b a [empty] b   ^\u0026quot;^\u0026rdquo; a b [empty] a b   a b ^\u0026quot;^\u0026rdquo; a b [empty]   a ^\u0026rdquo;\u0026rdquo; b a [empty] b   ^\u0026rdquo;\u0026rdquo; a b [empty] a b   a b ^\u0026rdquo;\u0026quot; a b [empty]    Rule #6 - Juxtaposed strings Two juxtaposed strings (not separated by a delimiter character), will insert a plain double quotes character (\u0026quot;) between each other.\nThis rule applies to normal strings, caret-strings, or any combinations.\nExamples:\n   Command Line Arg #1 Arg #2 Arg #3     \u0026ldquo;a b\u0026quot;\u0026ldquo;c d\u0026rdquo; a b\u0026quot;c d\n(as with rule #2)     ^\u0026ldquo;a b^\u0026quot;^\u0026ldquo;c d^\u0026rdquo; a b\u0026quot;c d     ^\u0026ldquo;a b^\u0026ldquo;\u0026ldquo;c d\u0026rdquo; a b\u0026quot;c d     \u0026ldquo;a b\u0026rdquo;^\u0026ldquo;c d^\u0026rdquo; a b\u0026quot;c d     \u0026ldquo;a b^\u0026quot;^\u0026ldquo;c d\u0026rdquo; a b^\u0026ldquo;c d      Rule #7 - Any other characters All other characters must be read as plain text.\nExceptions: Exception #1 \u0026amp;lt;strong\u0026gt;\\\u0026quot;\u0026amp;lt;/strong\u0026gt; characters sequence inside a caret-string. This formatting is against rule #2.3 which states that double quote character \u0026quot; should be entered as \\^\u0026quot; or againt rule #3 which states that \\ characters should be entered as \\\\\u0026quot;.\nErroneous \u0026amp;lt;strong\u0026gt;\\\u0026quot;\u0026amp;lt;/strong\u0026gt; sequence in a caret-string should be read as [end caret-string] and [start string] which as of rule #6 also inserts a plain \u0026quot; character.\nExamples:\nCommand Line\rArg #1\rArg #2\rArg #3\r\r\r\r^\"test\\\"\rtest\"\r\r\r\r^\"ab cd \\\" ef^\"\rab cd \" ef^\r\r\r\r\r^\"ab cd \\^\" ef^\"\rab cd \" ef\r\r\r\r\r^\"ab cd \\\\\" ef^\"\rab cd \\\ref^\r\r\r\rSamples Using the list of rules above, one can encode the following arguments into a fully qualified command line.\nDecoding samples The following table shows multiple examples of command lines which decodes into multiple arguments.\nNote that some command lines are malformed or incomplete. The libArgvCodec library properly handle both cases.\rAlso note that some command line contains shell command (whoami and echo) which are used to demonstrate that libArgvCodec is secure and protects againts command line injection attacks.\rFor the list of all verification tests executed with libArgvCodec, please see the source code of the libargvcodectest project.\n   Command Line Arg #1 Arg #2 Arg #3     aaa\u0026rdquo; aaa     aaa\u0026quot; aaa\u0026rdquo;     aaa\\\u0026rdquo; aaa\\     aaa\\\u0026quot; aaa\u0026quot;     \u0026ldquo;aaa\u0026quot; aaa\u0026rdquo;     \u0026ldquo;aaa\\\u0026rdquo; aaa\\     \u0026ldquo;aaa\\\u0026quot; aaa\u0026quot;     a\u0026quot;bc abc     a\u0026quot;bc\\ abc\\     a\u0026quot;bc\\ abc\\     a\u0026quot;bc\\\\ abc\\\\     a\u0026quot;bc\u0026quot;d abc\u0026quot;d     a\u0026quot;bc\\ ddd\u0026rdquo; e abc\\ ddd e    a\u0026quot;bc\u0026quot;\\ ddd\u0026rdquo; e abc\u0026rdquo;\\ ddd e    ab\\c d ab\\c d    ab\\ c ab\\ c    \\ab c \\ab c    a \u0026ldquo;\u0026ldquo;bc\u0026quot;o\u0026rdquo; e\u0026rdquo; a bc\u0026quot;o e    a \u0026ldquo;bc\u0026quot;o\u0026rdquo; e\u0026rdquo; a bc\u0026quot;o e   \u0026ldquo;a\u0026quot;\u0026ldquo;\u0026ldquo;b a\u0026quot;b     \u0026ldquo;a\u0026quot;\u0026ldquo;\u0026ldquo;b\u0026rdquo; a\u0026quot;b     \u0026ldquo;a\u0026quot;b\u0026rdquo; a\u0026quot;b     \u0026ldquo;a\u0026rdquo;\u0026rdquo;\u0026rdquo; b\u0026rdquo; a\u0026rdquo; b    \u0026quot;\u0026rdquo;\u0026quot; \u0026quot;     \u0026quot;\u0026quot;\u0026quot;\u0026quot; \u0026quot;     \u0026quot;\u0026quot;\u0026quot;\u0026quot;\u0026quot; \u0026quot;\u0026quot;     \u0026quot;\u0026quot;\u0026quot;\u0026quot;\u0026quot;\u0026quot; \u0026quot;\u0026quot;     ^\u0026ldquo;ab cd^\u0026quot;^\u0026amp;echo foo^\u0026rdquo; ab cd\u0026quot;\u0026amp;echo foo     \u0026ldquo;ab cd^\u0026quot;^\u0026amp;echo foo^\u0026rdquo; ab cd^\u0026amp;echo foo    ^\u0026ldquo;ab cd^\u0026rdquo; ee\u0026quot; ab cd\u0026quot; ee     \u0026ldquo;ab cd\u0026quot; ee\u0026rdquo; ab cd\u0026quot; ee     \u0026ldquo;ab cd^\u0026rdquo; ee\u0026quot; ab cd^ ee    \u0026ldquo;a^b\u0026rdquo; c a^b c    ^\u0026ldquo;a^b\u0026rdquo; c ab c    ^\u0026ldquo;ab^\u0026rdquo; c ab c    ^\u0026ldquo;ab^\u0026rdquo;\u0026quot; c ab\u0026quot; c     a \\bb c a \\bb c   a \u0026quot;bb c\u0026quot; d a \u0026ldquo;bb c d   a ^\u0026ldquo;bb^\u0026rdquo; c\u0026rdquo; d a bb c d   a \u0026quot;b c a \u0026ldquo;b c   a\u0026quot;\u0026ldquo;b c ab c    a\u0026quot;b c a\u0026quot;b c    \u0026ldquo;a\u0026quot;\u0026ldquo;b\u0026rdquo; c a\u0026quot;b c    \u0026ldquo;a\u0026quot;b\u0026rdquo; c a\u0026quot;b c    a ^\u0026rdquo;\u0026rdquo; b a  b   a ^\u0026quot;^\u0026rdquo; b a  b   ^\u0026quot;\u0026quot; a  a    ^\u0026quot;^\u0026quot; a  a    ^\u0026ldquo;test^\u0026quot;^\u0026amp;whoami^\u0026rdquo; test\u0026quot;\u0026amp;whoami     ^\u0026ldquo;test\\^\u0026quot;^\u0026amp;whoami^\u0026rdquo; test\u0026amp;whoami     ^\u0026ldquo;test\u0026quot;^\u0026amp;whoami^\u0026rdquo; test\u0026quot;^\u0026amp;whoami^     a\\\\\u0026ldquo;b a\\b     ^\u0026ldquo;a\\\\\u0026ldquo;b\u0026rdquo; a\\b     ^\u0026ldquo;a^^\\\u0026ldquo;b\u0026rdquo; a\\b     ^\u0026ldquo;a^\\^\u0026quot;b\u0026rdquo; a\\b     ^\u0026ldquo;a^\\^\u0026ldquo;b\u0026rdquo; a\\b     ",
    "ref": "/how-to-encode-command-line-parameters-on-windows-done-right/"
  },{
    "title": "libArgvCodec – A c++ library which properly encode and decode command line arguments",
    "date": "",
    "description": "",
    "body": "Introduction This post is about a decade old problem: how to properly encode command line arguments. Properly encoding string arguments into a long command line should not be a complicated issue. However, I have seen multiple situations where people wrongfully assume that wrapping each argument with double quotes is \u0026lsquo;safe enough\u0026rsquo; for most situations. That is simply not true.\nThis article is about the C++ library libArgvCodec which properly encodes and decodes command line parameters.\nSkip to the download section for quick download.\nPurpose The purpose of the library is not to handle Argument Parsing and Argument Validation : there are already multiple libraries that can do that and most of them does it pretty well.\nHowever, few of them are actually developed to help a user passing arguments from one application to another. The libArgvCodec library includes arguments and command line encoder and decoder (codecs) that are designed for this particular purpose.\nTransferring local variable values to another application through command line arguments is not something that occurs pretty often but if you ever have to deal with this situation, the libArgvCodec library can help you avoid typical encoding pitfalls.\nLibrary features Here is a list of all library features:\n Supports int argc, char* argv[] argument parsing. Supports case sensitive and case insensitive searches within lists of arguments. Quickly identify unknown arguments. Supports any type of argument prefixes like: slashes, single dash, double dash, etc. Encodes multiple single arguments into a full command line. Decodes a command line into individual arguments. Supports both Windows shell (command prompt) and Windows CreateProcess() encoding/decoding.  Bulletproof application againts command line injection attacks.    Usage Arguments validation Parsing the list of arguments for validation is easy with the libArgvCodec. Create an instance of the ArgumentList class which encapsulates a list of argument values. Call the init() method using the application\u0026rsquo;s argc and argv parameters which initialize the instance with a copy of all the parameters.\nBrowse through the list of arguments using the getArgument() method or search for a specific parameter using the findIndex() or contains() methods.\nSearching for options (argument of the type /p or -help or start) is easily done with the class using the findOption() method.\nSearch for arguments with values for patterns likes /name=foo or -count=5) using the findValue() method.\nSearch for name and value pairs (arguments whose value is following as another argument) for patterns like /product foo or -repeat 5 using the findNextValue() method.\nTo quickly identify unknown arguments, the class supports extract methods (one for each find method). Extract method removes the argument from the ArgumentList. Once all know arguments are removed from the list, the remaining ones are considered unknown.\nManipulating an argument list The ArgumentList class is used as a container for arguments. It supports all CRUD operations:\n Create (add) with the insert() method. Read (view) with the getArgument() method. Update with the replace() method. Delete with the remove() method.  Encoding arguments and decoding command line The encoding and decoding of command line arguments is with \u0026amp;lt;span style=\u0026quot;font-size: medium;\u0026quot;\u0026gt;IArgumentEncoder\u0026amp;lt;/span\u0026gt; and \u0026amp;lt;span style=\u0026quot;font-size: medium;\u0026quot;\u0026gt;IArgumentDecoder\u0026amp;lt;/span\u0026gt; interfaces. To interact with the interfaces, the ArgumentList class is used as input data or output data.\nThe library provides the following classes which implements both interfaces:\n CmdPromptArgumentCodec handles encoding/decoding for the Windows command prompt (shell) CreateProcessArgumentCodec handles encoding/decoding for the Windows CreateProcess() api.  Using these classes, one can fill up an ArgumentList instance and call the encodeCommandLine() method to encode all the arguments in the list into a single command line.\nUsing the same codec classes, one can \u0026lsquo;split\u0026rsquo; a command line into multiple arguments using the decodeCommandLine() method which returns a valid ArgumentList with the result.\nLicense This library is free software; you can redistribute it and/or modify it under the terms of the GNU Lesser General Public License as published by the Free Software Foundation; either version 3.0 of the License, or (at your option) any later version.\nThis library is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License (LGPL-3.0) for more details.\nYou should have received a copy of the GNU Lesser General Public License along with this library; if not, write to the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA\nDISCLAIMER:\nThis software is furnished \u0026ldquo;as is\u0026rdquo;, without technical support, and with no warranty, express or implied, as to its usefulness for any purpose.\nDownload You can download the libArgvCodec library by clicking on the following link:\n [ Download \u0026quot;libArgvCodec v1.0.104 (source code)\u0026quot; libArgvCodec-x86-v1.0.104-src.zip - Downloaded 526 times - 99 KB ](http://www.end2endzone.com/download/2480/)\r[ Download \u0026quot;libArgvCodec v1.0.104 binaries (vs2008, x86, portable)\u0026quot; libArgvCodec-x86-v1.0.104-portable.zip - Downloaded 518 times - 204 KB ](http://www.end2endzone.com/download/2482/)\r",
    "ref": "/libargvcodec-a-c-library-which-properly-encode-and-decode-command-line-arguments/"
  },{
    "title": "libVariant – A c++ library which encapsulate any value of variant types",
    "date": "",
    "description": "",
    "body": "Introduction The following article is about my new c++ library: libVariant. The library allows one to easily store/encapsulate a value of any c++ type into an instance of type Variant. The library is useful for declaring objects, interfaces, APIs or plugins to be type-independent.\nSkip to the download section for quick download.\nPurpose The libVariant library allows one to create an instance of Variant class. The class is a type safe and value safe union between all known basic c++ types. An instance of a Variant class encapsulates a single value of any c++ type: signed and unsigned integers, floating points \u0026amp; strings.\nThe class can easily convert between any type of data when required and automatically handles all conversion combinations and minimizes lost of data.\nThe library is useful for declaring objects, interfaces, plugins or APIs to be type-independent.\nThe need for a Variant type is mostly required in designs where one does not want to implement conversion of c++ types using templates in every situation. Programmers can use the same procedures and functions to process variables with different internal representations (integers, strings, \u0026hellip;) without converting any data. Without the Variant class, a copy of the same procedures and functions would have to be implemented, each with their different types of data.\nUsage scenarios Typical usage of the Variant class involves the following:\nImplement a query language Each column of a \u0026ldquo;ResultSet\u0026rdquo; may be of different type. Storing values in a Variant type is a perfect candidate for type abstraction.\nProvide GUI-editable properties in a generic manner The Variant class can be used to implement a similar fashion of C# properties where property editors (property sheet) can edit any type of property. An application that display a property sheet UI, must only implement Variant values editing instead of having to implement each specific type of variable.\nImplementing change-independent plugins By defining plugin APIs with Variant class, the plugin author or the application can change their data-type requirements without affecting each other. Plugin developers can change how they process variables with different internal representations (integers, strings, \u0026hellip;) and reuse the same API without doing any changes to the application which uses the plugin.\nThe same applies to users of the plugin which feeds the plugin with data to process.\nParsing values from text file Parsing an *.ini files always used to return string values. Parsing something like numChild=3 would return a const char* with the value \u0026quot;3\u0026quot; instead of int value = 3;. Text parsers can be designed to always return a Variant when querying for a named variable in a file. In the example above, the method allows the application to read numChild value as a string or directly as an integer.\nImplementing reflection-like APIs on classes If each classes of a system provides a list of Variant which encapsulates their attributes, one can modify the attributes of a class using the Variant\u0026rsquo;s internal value.\nFunctionalities / Features Possible use are:\n Compatible with the C++ 1998/2003 standard. Type-safe, value-safe unions between all c++ basic types, including strings. Holds any numeric values up to 64 bits. Converts between any type of data as required. No data loss on mathematical operations. The class supports automatic internal type promotion to prevent overflows. Implements all c++ operators with all known native c++ types to prevent any unwanted implicit conversions to Variant. This make sure that no manipulation errors occurs while handling Variant instances. Matches the same behavior as Visual Basic\u0026rsquo;s Variant type.  Limitations Signed to Unsigned value clamping The class is designed to prevent erroneous conversion issues which could lead to incorrect memory access or out of bounds issues.\nThis method is considered safer on multiple scenarios. It is also different from static casting which would keep all bits identical to the originals resulting in value 65533.\rFor instance, if a Variant class with an internal type set to SINT16 with a value of -3, is then retrieved as an UINT16 the class will \u0026ldquo;clamp\u0026rdquo; the returned value to 0 since -3 cannot be represented as an UINT16.\nVariant var;\nvar.setSInt16(-3);\nvar.getUInt16() ⇒ clamped to minimum value of uint16 (0)\nThe same is also true for the other way around: if a Variant is set to value 65500 (UINT16) and is retrieved as a SINT16, then the returned value would be 32767 which is the maximum value of a SINT16.\nVariant var;\nvar.setUInt16(65500);\nvar.getSInt16() ⇒ clamped to maximum value of sint16 (32767 )\nTo prevent any data loss and conversion clamping, it is suggested to retrieve the internal value of a Variant using the same type as its internal type.\nKeep in mind that for most other scenarios, keeping the internal value of a Variant to be restricted to positive signed integers is largely enough for most scenarios allowing values ranging from 0 to +2147483647.\nOut of range value clamping The Variant class is also build to automatically prevent loss of data when applying mathematical operations.\nFor instance, if a Variant class with an internal type set to SINT16 and a value of 32000 is multiplied by 10 (SINT16) then the internal type of the class will automatically be promoted to SINT32 to be able to hold a value of 320000.\nHowever, if the user still requests the internal value as SINT16, then the returned value will be clamped to 32767 which is the maximum value of a SINT16.\nVariant var;\nvar.setSInt16(32000);\nvar = var * 10;\nvar ⇒ sint32 with a value of 320000\nUnsigned to signed automatic conversions If the internal value of a Variant is set to any unsigned value and a mathematical operator is applied to the Variant using a signed value then the internal type of the Variant will change from unsigned to signed.\nNote that the expected value from the mathematical operation is always preserved. The only change that may be unnoticed is the internal type changing from unsigned to signed.\rFor example, having a Variant set to value 16 (UINT16) is multiplied by value 2 (SINT16), then the internal type will automatically change to SINT16 with a value of 32.\nVariant var;\nvar.setUInt16(16);\nvar = var * 2;\nvar ⇒ internal type is now sint16\nAutomatic conversions to floating point The class can also do automatic conversions of the internal type to floating point in order to minimize the loss of data.\nIf a Variant class with an internal type set to SINT16 and a value of 5 is divided by 2 (SINT16) then the internal value of the class will automatically convert to FLOAT64 to be able to hold a value of 2.5. However, if the user still requests the internal value as SINT16, then the returned value will be rounded down to 2 which is the same result as if the division would have been processed using the native c++ type SINT16.\nVariant var;\nvar.setSInt16(5);\nvar = var / 2;\nvar.getFloat64() ⇒ returns 2.5\nvar.getSInt16() ⇒ returns 2\nHandling value overflows The class is protected against unintentional overflows. Here is the process of computing intentional overflows:\nVariant::uint8 value = 250;\nVariant::sint8 addition = 10;\nVariant var;\nvar.set(value);\nvar += addition; // promotes to value 260 instead of overflow value 4.\nVariant::uint8 overflowValue = var.getUInt64(); // results in value 4\nRequirements The library has some compilation requirements and library dependencies which are:\n Only Visual Studio 2008 projects files are available. Files can be manually moved to other platforms or IDE as required. Supporting other compilers is not currently planned. The Google Test v1.6 library is required for running test cases.  License libVariant\nCopyright (C) 2016 Antoine Beauchamp\nThe code \u0026amp; updates for the library can be found on http://end2endzone.com\nAUTHOR/LICENSE:\nThis library is free software; you can redistribute it and/or modify it under the terms of the GNU Lesser General Public License as published by the Free Software Foundation; either version 3.0 of the License, or (at your option) any later version.\nThis library is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License (LGPL-3.0) for more details.\nYou should have received a copy of the GNU Lesser General Public\nLicense along with this library; if not, write to the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA\nDISCLAIMER:\nThis software is furnished \u0026ldquo;as is\u0026rdquo;, without technical support, and with no warranty, express or implied, as to its usefulness for any purpose.\nDownload You can download the libVariant library by clicking on the following link:\n [ Download \u0026quot;libVariant-v2.0.114.zip\u0026quot; libVariant-v2.0.114.zip - Downloaded 526 times - 99 KB ](http://www.end2endzone.com/download/2328/)\r",
    "ref": "/libvariant-a-c-library-which-encapsulate-any-value-of-variant-types/"
  },{
    "title": "Déballage et assemblage du Radian Pro – Un planeur hors pair",
    "date": "",
    "description": "",
    "body": "Voici un autre modèle d\u0026rsquo;avion que j\u0026rsquo;ai assemblé: le planeur Radian Pro de ParkZone.\nC\u0026rsquo;est un excellent appareil. Je le recommande fortement. Lorsque je le pilote, je dois m\u0026rsquo;apporter une chaise afin de m’asseoir parce qu\u0026rsquo;une fois que cet oiseau est dans les airs, il ne veut juste plus redescendre au sol. Il faut s\u0026rsquo;armer de patience.\nLe tout présenté en time lapse.\nDescription Le Radian Pro est un planeur de 78.5 pouces d\u0026rsquo;envergure. Le fuselage mesure 45 pouces. Il est motorisé ce qui veut dire qu\u0026rsquo;il n\u0026rsquo;a pas besoin d\u0026rsquo;être remorqué pour prendre son envol et qu\u0026rsquo;il peut par lui même reprendre de l\u0026rsquo;altitude lorsque nécessaire.\nLa fiche technique peut être retrouvée à cette adresse: http://www.parkzone.com/Products/Default.aspx?ProdID=PKZ5480\nIl possède aussi un frère disponible ici mais il est beaucoup plus vieux et donc il possède moins de fonctionnalités.\nConsulter ces autres articles pour d\u0026rsquo;autres vidéos time lapse.\nTutoriels sur comment faire ces propres vidéos time lapse avec des logiciels gratuit disponible à l\u0026rsquo;adresse:\nhttp://www.end2endzone.com/how-to-make-a-time-lapse-video-with-free-tools-and-a-dslr-camera/.\nTime Lapse Capture: 5 août 2016\nTemps d\u0026rsquo;assemblage: 2h09m\n1538 photos affichées à 30 images par seconde.\nMusique Auteur: Disfigure\nTitre: Summer Tune\nLabel: NoCopyrightSounds\nReférence: https://www.youtube.com/watch?v=Yw9-WYvv4y8\nVidéo",
    "ref": "/assemblage-du-planeur-radian-pro/"
  },{
    "title": "Assemblage du quadrirotor F450 – Mon premier drone",
    "date": "",
    "description": "",
    "body": "J\u0026rsquo;ai fait l’acquisition de mon premier quadrirotor. Puisque je préfère de loin les options DIY, j\u0026rsquo;ai décidé de ne pas acheter un modèle RTF (ready-to-fly) et de plutôt opter pour un modèle livré à la maison en pièce détachée.\nTous comme avec mon Avistar Elite, j\u0026rsquo;ai capturé le déballage et l\u0026rsquo;assemblage de l\u0026rsquo;engin sur photos afin de réaliser un vidéo time lapse.\nPour le plaisir de vos yeux, voici le vidéo démontrant le déballage et l\u0026rsquo;assemblage de mon premier quadrirotor.\nDescription Il s\u0026rsquo;agit d\u0026rsquo;une version clone du F450 de DJI. Je l\u0026rsquo;utilise depuis plus de 2 ans et je dois dire que j\u0026rsquo;ai beaucoup de plaisir à le voler.\nL\u0026rsquo;assemblage du quadrirotor s\u0026rsquo;effectue sur 2 jours. Comme dans tous les projets, on n\u0026rsquo;est jamais suffisamment préparé. Forcément, lors de ma première journée\u0026hellip;\n\u0026ldquo;Il me manque des connecteurs pour les moteurs.\nOn remballe le tout!\nC\u0026rsquo;est terminé pour aujourd\u0026rsquo;hui\u0026hellip;\u0026rdquo;\nÀ titre d\u0026rsquo;information, il s\u0026rsquo;agit du quadrirotor sur lequel j\u0026rsquo;ai ajouté un LED ultra-puissant et une alarme afin de pouvoir le retrouver en cas de crash inattendu.\nConsulter ces autres articles pour d\u0026rsquo;autres vidéos time lapse.\nTutoriels sur comment faire ces propres vidéos time lapse avec des logiciels gratuit disponible à l\u0026rsquo;adresse:\nhttp://www.end2endzone.com/how-to-make-a-time-lapse-video-with-free-tools-and-a-dslr-camera/.\nTime Lapse 29 juin 2015\nTemps d\u0026rsquo;assemblage: 3h31m\n2196 photos (52.8GB) affichées à 30 images par seconde.\n6 juillet 2015\nTemps d\u0026rsquo;assemblage: 4h55m\n2968 photos (58.8GB) affichées à 30 images par seconde.\nMusique Auteur: Ash O\u0026rsquo;Connor\nTitre: Vibe\nLabel: NoCopyrightSounds\nReférence: https://www.youtube.com/watch?v=B2p-jLTmFJ0\nVidéo",
    "ref": "/assemblage-du-quadrirotor-f450-mon-premier-drone/"
  },{
    "title": "How to convert arduino code to actual RTTTL melodies using libRtttl and AnyRtttl",
    "date": "",
    "description": "",
    "body": "Introduction The following article is written in order to demonstrate how my arduino libraries libRtttl \u0026amp; AnyRtttl can be used to convert arduino code (tone() and delay() functions calls) into actual RTTTL melodies.\nThis article shows how to convert \u0026lsquo;Game of Throne theme\u0026rsquo;, \u0026lsquo;Star Wars - The imperial March\u0026rsquo; and most Super Mario Bros. sound themes (Main theme, 1-up life sound, Flagpole fanfare, Death and Game Over sounds) into actual playable RTTTL melodies.\nMethodology The basic idea is to convert the code to their lowest common denominator which is tone frequencies and duration (delays). The libRtttl gui program has build-it functionnality to extract the frequencies and delays from arduino code. Using the application, one can convert any melody to RTTTL.\nHandling structured or logical code Some programs are written in an optimized fashion where reapeated sections of a melody are extracted into a function. ie: playRefrain(). The function is then called multiple times to play the whole melody. This method is an effective way to reduce code size but libRtttl gui is unable to parse this code.\nOther programs could also use tone() or delay() calls using Constants. A typical usage of this method is to use predefined note names for frequencies which makes the code easier to read. However, constants are also hard to extract by libRtttl gui which does not yet support this feature.\nThe following code shows the usage of note names as arguments to the tone() function:\n1tone(8,LA4,Q); 2delay(1+Q); 3tone(8,LA3,E+S); 4delay(1+E+S); To hande these kind of program, the following code can be added at the beginning of the program. This code will output all calls to the tone() and delay() functions to the serial port.\n1//silence all analogWrite calls 2#define analogWrite dummyAnalogWrite 3void dummyAnalogWrite(int pin, int value) 4{ 5} 6 7//output function calls to serial port 8void serialTone(byte pin, uint16_t frequency, uint32_t duration) { 9 Serial.print(\u0026#34;tone(\u0026#34;); 10 Serial.print(pin); 11 Serial.print(\u0026#34;,\u0026#34;); 12 Serial.print(frequency); 13 Serial.print(\u0026#34;,\u0026#34;); 14 Serial.print(duration); 15 Serial.println(\u0026#34;);\u0026#34;); 16} 17 18void serialNoTone(byte pin) { 19 Serial.print(\u0026#34;noTone(\u0026#34;); 20 Serial.print(pin); 21 Serial.println(\u0026#34;);\u0026#34;); 22} 23 24void serialDelay(uint32_t duration) { 25 Serial.print(\u0026#34;delay(\u0026#34;); 26 Serial.print(duration); 27 Serial.println(\u0026#34;);\u0026#34;); 28} 29 30#define tone serialTone 31#define delay serialDelay 32#define noTone serialNoTone  \r\rNote that the code above is later refered to as \u0026ldquo;Arduino tone and delay functions overrides\u0026rdquo;.\rSamples The following section shows example of using libRtttl gui to convert arduino code (tone() and delay() functions calls) into actual RTTTL melodies.\nGame of Throne Source code:\n Youtube: http://www.youtube.com/watch?v=vrzQU_QbQ5U Code from pastebin: http://pastebin.com/q76D0asp Cache version here: FULL Game of Thrones Theme Song on Arduino  Modify the code by adding the \u0026ldquo;Arduino tone and delay functions overrides\u0026rdquo; to the code. Once done, the code should be looking like this:\n////////////////////////////////////////////////////////////////////////\r//\r// GAME OF THRONES THEME SONG\r// PERFORMED ON PIEZO SENSOR AND 3 LEDS\r// WRITTEN BY // KALEB HILL\r// 5/28/15\r//\r////////////////////////////////////////////////////////////////////////\r//https://www.youtube.com/watch?v=vrzQU_QbQ5U\rint ledred = 9; // the pin that the LED is attached to\rint ledblue = 10;\rint ledgreen = 5;\rint brightness = 255; // how bright the LED is\rint fadeAmount = 5; // how many points to fade the LED by\r//project\u0026#39;s contants\r#define BUZZER_OUT_PIN 8\r//silence all analogWrite calls\r#define analogWrite dummyAnalogWrite\rvoid dummyAnalogWrite(int pin, int value)\r{\r}\r//output function calls to serial port\rvoid serialTone(byte pin, uint16_t frequency, uint32_t duration) {\rSerial.print(\u0026#34;tone(\u0026#34;);\rSerial.print(pin);\rSerial.print(\u0026#34;,\u0026#34;);\rSerial.print(frequency);\rSerial.print(\u0026#34;,\u0026#34;);\rSerial.print(duration);\rSerial.println(\u0026#34;);\u0026#34;);\r}\rvoid serialNoTone(byte pin) {\rSerial.print(\u0026#34;noTone(\u0026#34;);\rSerial.print(pin);\rSerial.println(\u0026#34;);\u0026#34;);\r}\rvoid serialDelay(uint32_t duration) {\rSerial.print(\u0026#34;delay(\u0026#34;);\rSerial.print(duration);\rSerial.println(\u0026#34;);\u0026#34;);\r}\r#define tone serialTone\r#define delay serialDelay\r#define noTone serialNoTone\r// the setup routine runs once when you press reset:\rvoid setup() {\r// declare pin 9 to be an output:\r//pinMode(ledred, OUTPUT);\r//pinMode(ledblue, OUTPUT);\r//pinMode(ledgreen, OUTPUT);\rpinMode(BUZZER_OUT_PIN, OUTPUT);\rSerial.begin(115200);\r}\r// the loop routine runs over and over again forever:\rvoid loop (){\rSerial.println(\u0026#34;START\u0026#34;);\r//G3\ranalogWrite(ledred, 255);\ranalogWrite(ledblue, 255);\ranalogWrite(ledgreen, 255);\rtone(BUZZER_OUT_PIN, 196, 375);\rdelay(400);\r////////////////////////////////ONE\r//C3\ranalogWrite(ledred, LOW); analogWrite(ledblue, LOW); analogWrite(ledgreen, LOW); tone(BUZZER_OUT_PIN, 131, 375);\rdelay(400);\r//DS3\ranalogWrite(ledblue, 255);\rtone(BUZZER_OUT_PIN, 156, 175);\rdelay(200); //F3\ranalogWrite(ledred, 255);\rtone(BUZZER_OUT_PIN, 175, 175);\rdelay(200);\r//G3\ranalogWrite(ledgreen, 255);\rtone(BUZZER_OUT_PIN, 196, 375);\rdelay(400);\r////////////////////////////////TWO\r//C3\ranalogWrite(ledred, LOW); analogWrite(ledblue, LOW); analogWrite(ledgreen, LOW); tone(BUZZER_OUT_PIN, 131, 375);\rdelay(400);\r//DS3\ranalogWrite(ledblue, 255);\rtone(BUZZER_OUT_PIN, 156, 175);\rdelay(200); //F3\ranalogWrite(ledred, 255);\rtone(BUZZER_OUT_PIN, 175, 175);\rdelay(200);\r//G3\ranalogWrite(ledgreen, 255);\rtone(BUZZER_OUT_PIN, 196, 375);\rdelay(400);\r//////////////////////////////THREE\r//C3\ranalogWrite(ledred, LOW); analogWrite(ledblue, LOW); analogWrite(ledgreen, LOW); tone(BUZZER_OUT_PIN, 131, 375);\rdelay(400);\r//DS3\ranalogWrite(ledblue, 255);\rtone(BUZZER_OUT_PIN, 156, 175);\rdelay(200); //F3\ranalogWrite(ledred, 255);\rtone(BUZZER_OUT_PIN, 175, 175);\rdelay(200);\r//G3\ranalogWrite(ledgreen, 255);\rtone(BUZZER_OUT_PIN, 196, 375);\rdelay(400);\r///////////////////////////////FOUR\r//C3\ranalogWrite(ledred, LOW); analogWrite(ledblue, LOW); analogWrite(ledgreen, LOW); tone(BUZZER_OUT_PIN, 131, 375);\rdelay(400);\r//DS3\ranalogWrite(ledblue, 255);\rtone(BUZZER_OUT_PIN, 156, 175);\rdelay(200); //F3\ranalogWrite(ledred, 255);\rtone(BUZZER_OUT_PIN, 175, 175);\rdelay(200);\r//G3\ranalogWrite(ledgreen, 255);\rtone(BUZZER_OUT_PIN, 196, 375);\rdelay(400);\r///////////////////////////////FIVE\r//C3\ranalogWrite(ledred, LOW); analogWrite(ledblue, LOW); analogWrite(ledgreen, LOW);\rtone(BUZZER_OUT_PIN, 131, 375);\rdelay(400);\r//E3\ranalogWrite(ledblue, 255);\rtone(BUZZER_OUT_PIN, 165, 175);\rdelay(200); //F3\ranalogWrite(ledred, 255);\rtone(BUZZER_OUT_PIN, 175, 175);\rdelay(200);\r//G3\ranalogWrite(ledgreen, 255);\rtone(BUZZER_OUT_PIN, 196, 375);\rdelay(400);\r///////////////////////////////SIX\r//C3\ranalogWrite(ledred, LOW); analogWrite(ledblue, LOW); analogWrite(ledgreen, LOW); tone(BUZZER_OUT_PIN, 131, 375);\rdelay(400);\r//DS3\ranalogWrite(ledblue, 255);\rtone(BUZZER_OUT_PIN, 156, 175);\rdelay(200); //F3\ranalogWrite(ledred, 255);\rtone(BUZZER_OUT_PIN, 175, 175);\rdelay(200);\r//G3\ranalogWrite(ledgreen, 255);\rtone(BUZZER_OUT_PIN, 196, 375);\rdelay(400);\r//////////////////////////////SEVEN\r//C3\ranalogWrite(ledred, LOW); analogWrite(ledblue, LOW); analogWrite(ledgreen, LOW); tone(BUZZER_OUT_PIN, 131, 375);\rdelay(400);\r//E3\ranalogWrite(ledblue, 255);\rtone(BUZZER_OUT_PIN, 165, 175);\rdelay(200);\ranalogWrite(ledblue, LOW); //F3\ranalogWrite(ledred, 255);\rtone(BUZZER_OUT_PIN, 175, 175);\rdelay(200);\ranalogWrite(ledred, LOW);\r//G3\ranalogWrite(ledgreen, 255);\rtone(BUZZER_OUT_PIN, 196, 375);\rdelay(400);\r//////////////////////////////EIGHT\r//C3\ranalogWrite(ledred, LOW); analogWrite(ledblue, LOW); analogWrite(ledgreen, LOW); tone(BUZZER_OUT_PIN, 131, 375);\rdelay(400);\r//DS3\ranalogWrite(ledblue, 255);\rtone(BUZZER_OUT_PIN, 156, 175);\rdelay(200); //F3\ranalogWrite(ledred, 255);\rtone(BUZZER_OUT_PIN, 175, 175);\rdelay(200);\r/////////////////////////////////////////////////CHORUS1////////////////////////////////////////////\r//G4 analogWrite(ledred, 255);\rtone(BUZZER_OUT_PIN, 392, 1175);\rdelay(1200);\ranalogWrite(ledred, LOW);\r//C4\ranalogWrite(ledblue, 255);\rtone(BUZZER_OUT_PIN, 262, 1175);\rdelay(1200);\ranalogWrite(ledblue, LOW);\r//DS4\ranalogWrite(ledred, 255);\rtone(BUZZER_OUT_PIN, 311, 175);\rdelay(200);\r//F4\ranalogWrite(ledblue, 255);\rtone(BUZZER_OUT_PIN, 349, 175);\rdelay(200);\r//G4\ranalogWrite(ledgreen, 255);\rtone(BUZZER_OUT_PIN, 392, 775);\rdelay(800);\r//C4\ranalogWrite(ledred, LOW);\ranalogWrite(ledgreen, LOW);\ranalogWrite(ledblue, LOW);\rtone(BUZZER_OUT_PIN, 262, 775);\rdelay(800);\r//DS4\ranalogWrite(ledred, 255);\rtone(BUZZER_OUT_PIN, 311, 175);\rdelay(200);\r//F4\ranalogWrite(ledblue, 255);\rtone(BUZZER_OUT_PIN, 349, 175);\rdelay(200);\r//////////////////////////////\r//C3\ranalogWrite(ledred, LOW); analogWrite(ledblue, LOW); analogWrite(ledgreen, LOW); tone(BUZZER_OUT_PIN, 131, 375);\rdelay(400);\r//DS3\ranalogWrite(ledblue, 255);\rtone(BUZZER_OUT_PIN, 156, 175);\rdelay(200); //F3\ranalogWrite(ledred, 255);\rtone(BUZZER_OUT_PIN, 175, 175);\rdelay(200);\r//G3\ranalogWrite(ledgreen, 255);\rtone(BUZZER_OUT_PIN, 196, 375);\rdelay(400);\r///////////////////////////////\r//C3\ranalogWrite(ledred, LOW); analogWrite(ledblue, LOW); analogWrite(ledgreen, LOW); tone(BUZZER_OUT_PIN, 131, 375);\rdelay(400);\r//DS3\ranalogWrite(ledblue, 255);\rtone(BUZZER_OUT_PIN, 156, 175);\rdelay(200); //F3\ranalogWrite(ledred, 255);\rtone(BUZZER_OUT_PIN, 175, 175);\rdelay(200);\r//G3\ranalogWrite(ledgreen, 255);\rtone(BUZZER_OUT_PIN, 196, 375);\rdelay(400);\r/////////////////////////////\r//C3\ranalogWrite(ledred, LOW); analogWrite(ledblue, LOW); analogWrite(ledgreen, LOW); tone(BUZZER_OUT_PIN, 131, 375);\rdelay(400);\r//DS3\ranalogWrite(ledblue, 255);\rtone(BUZZER_OUT_PIN, 156, 175);\rdelay(200); //F3\ranalogWrite(ledred, 255);\rtone(BUZZER_OUT_PIN, 175, 175);\rdelay(200);\r//G3\ranalogWrite(ledgreen, 255);\rtone(BUZZER_OUT_PIN, 196, 375);\rdelay(400);\r/////////////////////////////\r//C3\ranalogWrite(ledred, LOW); analogWrite(ledblue, LOW); analogWrite(ledgreen, LOW); tone(BUZZER_OUT_PIN, 131, 375);\rdelay(400);\r//DS3\ranalogWrite(ledblue, 255);\rtone(BUZZER_OUT_PIN, 156, 175);\rdelay(200); //F3\ranalogWrite(ledred, 255);\rtone(BUZZER_OUT_PIN, 175, 175);\rdelay(200);\r//G3\ranalogWrite(ledgreen, 255);\rtone(BUZZER_OUT_PIN, 196, 375);\rdelay(400);\rwhile(brightness \u0026gt; 0)\r{\ranalogWrite(ledred, brightness);\ranalogWrite(ledblue, brightness);\ranalogWrite(ledgreen, brightness);\rbrightness = brightness - fadeAmount;\rif (brightness == 0 || brightness == 255) {\rfadeAmount = -fadeAmount ;\r}\r}\ranalogWrite(ledred, LOW);\ranalogWrite(ledgreen, LOW);\ranalogWrite(ledblue, LOW);\rbrightness = 255;\rfadeAmount = 5;\r//F4\ranalogWrite(ledred, 255);\rtone(BUZZER_OUT_PIN, 349, 1175);\rdelay(1200);\ranalogWrite(ledred, LOW);\r//AS4\ranalogWrite(ledblue, 255);\rtone(BUZZER_OUT_PIN, 233, 1175);\rdelay(1200);\ranalogWrite(ledblue, LOW);\r//D4\ranalogWrite(ledred, 255);\rtone(BUZZER_OUT_PIN, 294, 175);\rdelay(200);\r//DS4\ranalogWrite(ledblue, 255);\rtone(BUZZER_OUT_PIN, 311, 175);\rdelay(200);\r//F4\ranalogWrite(ledgreen, 255);\rtone(BUZZER_OUT_PIN, 349, 775);\rdelay(800);\r//AS3\ranalogWrite(ledred, LOW);\ranalogWrite(ledgreen, LOW);\ranalogWrite(ledblue, LOW);\rtone(BUZZER_OUT_PIN, 233, 775);\rdelay(800);\r//DS4\ranalogWrite(ledred, 255);\rtone(BUZZER_OUT_PIN, 311, 175);\rdelay(200);\r//D4\ranalogWrite(ledblue, 255);\rtone(BUZZER_OUT_PIN, 294, 175);\rdelay(200);\r//////////////////////////////\r//C3\ranalogWrite(ledred, LOW); analogWrite(ledblue, LOW); analogWrite(ledgreen, LOW); tone(BUZZER_OUT_PIN, 131, 375);\rdelay(400);\r//DS3\ranalogWrite(ledblue, 255);\rtone(BUZZER_OUT_PIN, 156, 175);\rdelay(200); //F3\ranalogWrite(ledred, 255);\rtone(BUZZER_OUT_PIN, 175, 175);\rdelay(200);\r//G3\ranalogWrite(ledgreen, 255);\rtone(BUZZER_OUT_PIN, 196, 375);\rdelay(400);\r///////////////////////////////\r//C3\ranalogWrite(ledred, LOW); analogWrite(ledblue, LOW); analogWrite(ledgreen, LOW); tone(BUZZER_OUT_PIN, 131, 375);\rdelay(400);\r//DS3\ranalogWrite(ledblue, 255);\rtone(BUZZER_OUT_PIN, 156, 175);\rdelay(200); //F3\ranalogWrite(ledred, 255);\rtone(BUZZER_OUT_PIN, 175, 175);\rdelay(200);\r//G3\ranalogWrite(ledgreen, 255);\rtone(BUZZER_OUT_PIN, 196, 375);\rdelay(400);\r/////////////////////////////\r//C3\ranalogWrite(ledred, LOW); analogWrite(ledblue, LOW); analogWrite(ledgreen, LOW); tone(BUZZER_OUT_PIN, 131, 375);\rdelay(400);\r//DS3\ranalogWrite(ledblue, 255);\rtone(BUZZER_OUT_PIN, 156, 175);\rdelay(200); //F3\ranalogWrite(ledred, 255);\rtone(BUZZER_OUT_PIN, 175, 175);\rdelay(200);\r//G3\ranalogWrite(ledgreen, 255);\rtone(BUZZER_OUT_PIN, 196, 375);\rdelay(400);\r/////////////////////////////\r//C3\ranalogWrite(ledred, LOW); analogWrite(ledblue, LOW); analogWrite(ledgreen, LOW); tone(BUZZER_OUT_PIN, 131, 375);\rdelay(400);\r//DS3\ranalogWrite(ledblue, 255);\rtone(BUZZER_OUT_PIN, 156, 175);\rdelay(200); //F3\ranalogWrite(ledred, 255);\rtone(BUZZER_OUT_PIN, 175, 175);\rdelay(200);\r//G3\ranalogWrite(ledgreen, 255);\rtone(BUZZER_OUT_PIN, 196, 375);\rdelay(400);\r/////////////////////////////////////////////////CHORUS2////////////////////////////////////////////\r//G5 analogWrite(ledred, 255);\rtone(BUZZER_OUT_PIN, 392, 1175);\rdelay(1200);\ranalogWrite(ledred, LOW);\r//C4\ranalogWrite(ledblue, 255);\rtone(BUZZER_OUT_PIN, 262, 1175);\rdelay(1200);\ranalogWrite(ledblue, LOW);\r//DS4\ranalogWrite(ledred, 255);\rtone(BUZZER_OUT_PIN, 311, 175);\rdelay(200);\r//F4\ranalogWrite(ledblue, 255);\rtone(BUZZER_OUT_PIN, 349, 175);\rdelay(200);\r//G4\ranalogWrite(ledgreen, 255);\rtone(BUZZER_OUT_PIN, 392, 775);\rdelay(800);\r//C4\ranalogWrite(ledred, LOW);\ranalogWrite(ledgreen, LOW);\ranalogWrite(ledblue, LOW);\rtone(BUZZER_OUT_PIN, 262, 775);\rdelay(800);\r//DS4\ranalogWrite(ledred, 255);\rtone(BUZZER_OUT_PIN, 311, 175);\rdelay(200);\r//F4\ranalogWrite(ledblue, 255);\rtone(BUZZER_OUT_PIN, 349, 175);\rdelay(200);\r//////////////////////////////\r//C3\ranalogWrite(ledred, LOW); analogWrite(ledblue, LOW); analogWrite(ledgreen, LOW); tone(BUZZER_OUT_PIN, 131, 375);\rdelay(400);\r//DS3\ranalogWrite(ledblue, 255);\rtone(BUZZER_OUT_PIN, 156, 175);\rdelay(200); //F3\ranalogWrite(ledred, 255);\rtone(BUZZER_OUT_PIN, 175, 175);\rdelay(200);\r//G3\ranalogWrite(ledgreen, 255);\rtone(BUZZER_OUT_PIN, 196, 375);\rdelay(400);\r///////////////////////////////\r//C3\ranalogWrite(ledred, LOW); analogWrite(ledblue, LOW); analogWrite(ledgreen, LOW); tone(BUZZER_OUT_PIN, 131, 375);\rdelay(400);\r//DS3\ranalogWrite(ledblue, 255);\rtone(BUZZER_OUT_PIN, 156, 175);\rdelay(200); //F3\ranalogWrite(ledred, 255);\rtone(BUZZER_OUT_PIN, 175, 175);\rdelay(200);\r//G3\ranalogWrite(ledgreen, 255);\rtone(BUZZER_OUT_PIN, 196, 375);\rdelay(400);\r/////////////////////////////\r//C3\ranalogWrite(ledred, LOW); analogWrite(ledblue, LOW); analogWrite(ledgreen, LOW); tone(BUZZER_OUT_PIN, 131, 375);\rdelay(400);\r//DS3\ranalogWrite(ledblue, 255);\rtone(BUZZER_OUT_PIN, 156, 175);\rdelay(200); //F3\ranalogWrite(ledred, 255);\rtone(BUZZER_OUT_PIN, 175, 175);\rdelay(200);\r//G3\ranalogWrite(ledgreen, 255);\rtone(BUZZER_OUT_PIN, 196, 375);\rdelay(400);\r/////////////////////////////\r//C3\ranalogWrite(ledred, LOW); analogWrite(ledblue, LOW); analogWrite(ledgreen, LOW); tone(BUZZER_OUT_PIN, 131, 375);\rdelay(400);\r//DS3\ranalogWrite(ledblue, 255);\rtone(BUZZER_OUT_PIN, 156, 175);\rdelay(200); //F3\ranalogWrite(ledred, 255);\rtone(BUZZER_OUT_PIN, 175, 175);\rdelay(200);\r//G3\ranalogWrite(ledgreen, 255);\rtone(BUZZER_OUT_PIN, 196, 375);\rdelay(400);\rwhile(brightness \u0026gt; 0)\r{\ranalogWrite(ledred, brightness);\ranalogWrite(ledblue, brightness);\ranalogWrite(ledgreen, brightness);\rbrightness = brightness - fadeAmount;\rif (brightness == 0 || brightness == 255) {\rfadeAmount = -fadeAmount ;\r}\r}\ranalogWrite(ledred, LOW);\ranalogWrite(ledgreen, LOW);\ranalogWrite(ledblue, LOW);\rbrightness = 255;\rfadeAmount = 5;\r//////////////////////////////////////////\r//F4\ranalogWrite(ledred, 255);\rtone(BUZZER_OUT_PIN, 349, 1175);\rdelay(1200);\ranalogWrite(ledred, LOW);\r//AS4\ranalogWrite(ledblue, 255);\rtone(BUZZER_OUT_PIN, 233, 1175);\rdelay(1200);\ranalogWrite(ledblue, LOW);\r//D4\ranalogWrite(ledred, 255);\rtone(BUZZER_OUT_PIN, 294, 175);\rdelay(200);\r//DS4\ranalogWrite(ledblue, 255);\rtone(BUZZER_OUT_PIN, 311, 175);\rdelay(200);\r//F4\ranalogWrite(ledgreen, 255);\rtone(BUZZER_OUT_PIN, 349, 775);\rdelay(800);\r//AS3\ranalogWrite(ledred, LOW);\ranalogWrite(ledgreen, LOW);\ranalogWrite(ledblue, LOW);\rtone(BUZZER_OUT_PIN, 233, 775);\rdelay(800);\r//DS4\ranalogWrite(ledred, 255);\rtone(BUZZER_OUT_PIN, 311, 175);\rdelay(200);\r//D4\ranalogWrite(ledblue, 255);\rtone(BUZZER_OUT_PIN, 294, 175);\rdelay(200);\r//////////////////////////////\r//C3\ranalogWrite(ledred, LOW); analogWrite(ledblue, LOW); analogWrite(ledgreen, LOW); tone(BUZZER_OUT_PIN, 131, 375);\rdelay(400);\r//DS3\ranalogWrite(ledblue, 255);\rtone(BUZZER_OUT_PIN, 156, 175);\rdelay(200); //F3\ranalogWrite(ledred, 255);\rtone(BUZZER_OUT_PIN, 175, 175);\rdelay(200);\r//G3\ranalogWrite(ledgreen, 255);\rtone(BUZZER_OUT_PIN, 196, 375);\rdelay(400);\r///////////////////////////////\r//C3\ranalogWrite(ledred, LOW); analogWrite(ledblue, LOW); analogWrite(ledgreen, LOW); tone(BUZZER_OUT_PIN, 131, 375);\rdelay(400);\r//DS3\ranalogWrite(ledblue, 255);\rtone(BUZZER_OUT_PIN, 156, 175);\rdelay(200); //F3\ranalogWrite(ledred, 255);\rtone(BUZZER_OUT_PIN, 175, 175);\rdelay(200);\r//G3\ranalogWrite(ledgreen, 255);\rtone(BUZZER_OUT_PIN, 196, 375);\rdelay(400);\r/////////////////////////////\r//C3\ranalogWrite(ledred, LOW); analogWrite(ledblue, LOW); analogWrite(ledgreen, LOW); tone(BUZZER_OUT_PIN, 131, 375);\rdelay(400);\r//DS3\ranalogWrite(ledblue, 255);\rtone(BUZZER_OUT_PIN, 156, 175);\rdelay(200); //F3\ranalogWrite(ledred, 255);\rtone(BUZZER_OUT_PIN, 175, 175);\rdelay(200);\r//G3\ranalogWrite(ledgreen, 255);\rtone(BUZZER_OUT_PIN, 196, 375);\rdelay(400);\r/////////////////////////////\r//C3\ranalogWrite(ledred, LOW); analogWrite(ledblue, LOW); analogWrite(ledgreen, LOW); tone(BUZZER_OUT_PIN, 131, 375);\rdelay(400);\r//DS3\ranalogWrite(ledblue, 255);\rtone(BUZZER_OUT_PIN, 156, 175);\rdelay(200); //F3\ranalogWrite(ledred, 255);\rtone(BUZZER_OUT_PIN, 175, 175);\rdelay(200);\r//G3\ranalogWrite(ledgreen, 255);\rtone(BUZZER_OUT_PIN, 196, 375);\rdelay(400);\r/////////////////////////////////////////////////CHORUS3////////////////////////////////////////////\r//G5 analogWrite(ledred, 255);\rtone(BUZZER_OUT_PIN, 784, 1175);\rdelay(1200);\ranalogWrite(ledred, LOW);\r//C5\ranalogWrite(ledblue, 255);\rtone(BUZZER_OUT_PIN, 523, 1175);\rdelay(1200);\ranalogWrite(ledblue, LOW);\r//DS5\ranalogWrite(ledred, 255);\rtone(BUZZER_OUT_PIN, 622, 175);\rdelay(200);\r//F5\ranalogWrite(ledblue, 255);\rtone(BUZZER_OUT_PIN, 698, 175);\rdelay(200);\r//G5\ranalogWrite(ledgreen, 255);\rtone(BUZZER_OUT_PIN, 784, 775);\rdelay(800);\r//C5\ranalogWrite(ledred, LOW);\ranalogWrite(ledgreen, LOW);\ranalogWrite(ledblue, LOW);\rtone(BUZZER_OUT_PIN, 523, 775);\rdelay(800);\r//DS5\ranalogWrite(ledred, 255);\rtone(BUZZER_OUT_PIN, 622, 175);\rdelay(200);\r//F5\ranalogWrite(ledblue, 255);\rtone(BUZZER_OUT_PIN, 698, 175);\rdelay(200);\r//////////////////////////////\r//C3\ranalogWrite(ledred, LOW); analogWrite(ledblue, LOW); analogWrite(ledgreen, LOW); tone(BUZZER_OUT_PIN, 131, 375);\rdelay(400);\r//DS3\ranalogWrite(ledblue, 255);\rtone(BUZZER_OUT_PIN, 156, 175);\rdelay(200); //F3\ranalogWrite(ledred, 255);\rtone(BUZZER_OUT_PIN, 175, 175);\rdelay(200);\r//G3\ranalogWrite(ledgreen, 255);\rtone(BUZZER_OUT_PIN, 196, 375);\rdelay(400);\r///////////////////////////////\r//C3\ranalogWrite(ledred, LOW); analogWrite(ledblue, LOW); analogWrite(ledgreen, LOW); tone(BUZZER_OUT_PIN, 131, 375);\rdelay(400);\r//DS3\ranalogWrite(ledblue, 255);\rtone(BUZZER_OUT_PIN, 156, 175);\rdelay(200); //F3\ranalogWrite(ledred, 255);\rtone(BUZZER_OUT_PIN, 175, 175);\rdelay(200);\r//G3\ranalogWrite(ledgreen, 255);\rtone(BUZZER_OUT_PIN, 196, 375);\rdelay(400);\r/////////////////////////////\r//C3\ranalogWrite(ledred, LOW); analogWrite(ledblue, LOW); analogWrite(ledgreen, LOW); tone(BUZZER_OUT_PIN, 131, 375);\rdelay(400);\r//DS3\ranalogWrite(ledblue, 255);\rtone(BUZZER_OUT_PIN, 156, 175);\rdelay(200); //F3\ranalogWrite(ledred, 255);\rtone(BUZZER_OUT_PIN, 175, 175);\rdelay(200);\r//G3\ranalogWrite(ledgreen, 255);\rtone(BUZZER_OUT_PIN, 196, 375);\rdelay(400);\r/////////////////////////////\r//C3\ranalogWrite(ledred, LOW); analogWrite(ledblue, LOW); analogWrite(ledgreen, LOW); tone(BUZZER_OUT_PIN, 131, 375);\rdelay(400);\r//DS3\ranalogWrite(ledblue, 255);\rtone(BUZZER_OUT_PIN, 156, 175);\rdelay(200); //F3\ranalogWrite(ledred, 255);\rtone(BUZZER_OUT_PIN, 175, 175);\rdelay(200);\r//G3\ranalogWrite(ledgreen, 255);\rtone(BUZZER_OUT_PIN, 196, 375);\rdelay(400);\rwhile(brightness \u0026gt; 0)\r{\ranalogWrite(ledred, brightness);\ranalogWrite(ledblue, brightness);\ranalogWrite(ledgreen, brightness);\rbrightness = brightness - fadeAmount;\rif (brightness == 0 || brightness == 255) {\rfadeAmount = -fadeAmount ;\r}\r}\ranalogWrite(ledred, LOW);\ranalogWrite(ledgreen, LOW);\ranalogWrite(ledblue, LOW);\rbrightness = 255;\rfadeAmount = 5;\r////////////////////////////////\r//F5\ranalogWrite(ledred, 255);\rtone(BUZZER_OUT_PIN, 698, 1175);\rdelay(1200);\ranalogWrite(ledred, LOW);\r//AS4\ranalogWrite(ledblue, 255);\rtone(BUZZER_OUT_PIN, 466, 1175);\rdelay(1200);\ranalogWrite(ledblue, LOW);\r//D5\ranalogWrite(ledred, 255);\rtone(BUZZER_OUT_PIN, 587, 575);\rdelay(600);\r//DS5\ranalogWrite(ledblue, 255);\rtone(BUZZER_OUT_PIN, 622, 575);\rdelay(600);\r//D5\ranalogWrite(ledgreen, 255);\rtone(BUZZER_OUT_PIN, 587, 575);\rdelay(600);\r//AS4\rtone(BUZZER_OUT_PIN, 466, 575);\rdelay(600);\r///////////////////////////////\r//C3\ranalogWrite(ledred, LOW); analogWrite(ledblue, LOW); analogWrite(ledgreen, LOW); tone(BUZZER_OUT_PIN, 131, 375);\rdelay(400);\r//DS3\ranalogWrite(ledblue, 255);\rtone(BUZZER_OUT_PIN, 156, 175);\rdelay(200); //F3\ranalogWrite(ledred, 255);\rtone(BUZZER_OUT_PIN, 175, 175);\rdelay(200);\r//G3\ranalogWrite(ledgreen, 255);\rtone(BUZZER_OUT_PIN, 196, 375);\rdelay(400);\r///////////////////////////////\r//C3\ranalogWrite(ledred, LOW); analogWrite(ledblue, LOW); analogWrite(ledgreen, LOW); tone(BUZZER_OUT_PIN, 131, 375);\rdelay(400);\r//DS3\ranalogWrite(ledblue, 255);\rtone(BUZZER_OUT_PIN, 156, 175);\rdelay(200); //F3\ranalogWrite(ledred, 255);\rtone(BUZZER_OUT_PIN, 175, 175);\rdelay(200);\r//G3\ranalogWrite(ledgreen, 255);\rtone(BUZZER_OUT_PIN, 196, 375);\rdelay(400);\r/////////////////////////////\r//C3\ranalogWrite(ledred, LOW); analogWrite(ledblue, LOW); analogWrite(ledgreen, LOW); tone(BUZZER_OUT_PIN, 131, 375);\rdelay(400);\r//DS3\ranalogWrite(ledblue, 255);\rtone(BUZZER_OUT_PIN, 156, 175);\rdelay(200); //F3\ranalogWrite(ledred, 255);\rtone(BUZZER_OUT_PIN, 175, 175);\rdelay(200);\r//G3\ranalogWrite(ledgreen, 255);\rtone(BUZZER_OUT_PIN, 196, 375);\rdelay(400);\r/////////////////////////////\r//C3\ranalogWrite(ledred, LOW); analogWrite(ledblue, LOW); analogWrite(ledgreen, LOW); tone(BUZZER_OUT_PIN, 131, 375);\rdelay(400);\r//DS3\ranalogWrite(ledblue, 255);\rtone(BUZZER_OUT_PIN, 156, 175);\rdelay(200); //F3\ranalogWrite(ledred, 255);\rtone(BUZZER_OUT_PIN, 175, 175);\rdelay(200);\r//G3\ranalogWrite(ledgreen, 255);\rtone(BUZZER_OUT_PIN, 196, 375);\rdelay(400);\rwhile(brightness \u0026gt; 0)\r{\ranalogWrite(ledred, brightness);\ranalogWrite(ledblue, brightness);\ranalogWrite(ledgreen, brightness);\rbrightness = brightness - fadeAmount;\rif (brightness == 0 || brightness == 255) {\rfadeAmount = -fadeAmount ;\r}\r}\ranalogWrite(ledred, LOW);\ranalogWrite(ledgreen, LOW);\ranalogWrite(ledblue, LOW);\rbrightness = 255;\rfadeAmount = 5;\r//////////////////////////////////////////////////////////////////////////////////////////\r//C5\ranalogWrite(ledred, LOW);\ranalogWrite(ledgreen, LOW);\ranalogWrite(ledblue, LOW);\rtone(BUZZER_OUT_PIN, 523, 375);\rdelay(400);\r//DS3\ranalogWrite(ledblue, 255);\rtone(BUZZER_OUT_PIN, 156, 175);\rdelay(200); //F3\ranalogWrite(ledred, 255);\rtone(BUZZER_OUT_PIN, 175, 175);\rdelay(200);\r//G3\ranalogWrite(ledgreen, 255);\rtone(BUZZER_OUT_PIN, 196, 375);\rdelay(400);\r///////////\r//C5\ranalogWrite(ledred, LOW);\ranalogWrite(ledgreen, LOW);\ranalogWrite(ledblue, LOW);\rtone(BUZZER_OUT_PIN, 523, 375);\rdelay(400);\r//DS3\ranalogWrite(ledblue, 255);\rtone(BUZZER_OUT_PIN, 156, 175);\rdelay(200); //F3\ranalogWrite(ledred, 255);\rtone(BUZZER_OUT_PIN, 175, 175);\rdelay(200);\r//G3\ranalogWrite(ledgreen, 255);\rtone(BUZZER_OUT_PIN, 196, 375);\rdelay(400);\r///////////////////////////////////////////\r//AS4\ranalogWrite(ledred, LOW);\ranalogWrite(ledgreen, LOW);\ranalogWrite(ledblue, LOW);\rtone(BUZZER_OUT_PIN, 466, 375);\rdelay(400);\r//D3\ranalogWrite(ledred, 255);\rtone(BUZZER_OUT_PIN, 147, 175);\rdelay(200);\r//DS3\ranalogWrite(ledblue, 255);\rtone(BUZZER_OUT_PIN, 156, 175);\rdelay(200);\r//F3\ranalogWrite(ledgreen, 255);\rtone(BUZZER_OUT_PIN, 175, 375);\rdelay(400);\r/////////\r//AS4\ranalogWrite(ledred, LOW);\ranalogWrite(ledgreen, LOW);\ranalogWrite(ledblue, LOW);\rtone(BUZZER_OUT_PIN, 466, 375);\rdelay(400);\r//D3\ranalogWrite(ledred, 255);\rtone(BUZZER_OUT_PIN, 147, 175);\rdelay(200);\r//DS3\ranalogWrite(ledblue, 255);\rtone(BUZZER_OUT_PIN, 156, 175);\rdelay(200);\r//F3\ranalogWrite(ledgreen, 255);\rtone(BUZZER_OUT_PIN, 175, 375);\rdelay(400);\r//////////////////////////////////////////\r//GS4\ranalogWrite(ledred, LOW);\ranalogWrite(ledgreen, LOW);\ranalogWrite(ledblue, LOW);\rtone(BUZZER_OUT_PIN, 415, 375);\rdelay(400);\r//C3\ranalogWrite(ledred, 255);\rtone(BUZZER_OUT_PIN, 131, 175);\rdelay(200);\r//D3\ranalogWrite(ledblue, 255);\rtone(BUZZER_OUT_PIN, 147, 175);\rdelay(200);\r//DS3\ranalogWrite(ledgreen, 255);\rtone(BUZZER_OUT_PIN, 156, 375);\rdelay(400);\r//////////\r//GS4\ranalogWrite(ledred, LOW);\ranalogWrite(ledgreen, LOW);\ranalogWrite(ledblue, LOW);\rtone(BUZZER_OUT_PIN, 415, 375);\rdelay(400);\r//C3\ranalogWrite(ledred, 255);\rtone(BUZZER_OUT_PIN, 131, 175);\rdelay(200);\r//D3\ranalogWrite(ledblue, 255);\rtone(BUZZER_OUT_PIN, 147, 175);\rdelay(200);\r//DS3\ranalogWrite(ledgreen, 255);\rtone(BUZZER_OUT_PIN, 156, 375);\rdelay(400);\r/////////////////////////////////////////\r//G4\ranalogWrite(ledred, LOW);\ranalogWrite(ledgreen, LOW);\ranalogWrite(ledblue, LOW);\rtone(BUZZER_OUT_PIN, 392, 375);\rdelay(400);\r//AS2\ranalogWrite(ledred, 255);\rtone(BUZZER_OUT_PIN, 117, 175);\rdelay(200);\r//C3\ranalogWrite(ledblue, 255);\rtone(BUZZER_OUT_PIN, 131, 175);\rdelay(200);\r//D3\ranalogWrite(ledgreen, 255);\rtone(BUZZER_OUT_PIN, 147, 375);\rdelay(400);\r///////////\r//G4\ranalogWrite(ledred, LOW);\ranalogWrite(ledgreen, LOW);\ranalogWrite(ledblue, LOW);\rtone(BUZZER_OUT_PIN, 392, 375);\rdelay(400);\r//AS2\ranalogWrite(ledred, 255);\rtone(BUZZER_OUT_PIN, 117, 175);\rdelay(200);\r//C3\ranalogWrite(ledblue, 255);\rtone(BUZZER_OUT_PIN, 131, 175);\rdelay(200);\r//D3\ranalogWrite(ledgreen, 255);\rtone(BUZZER_OUT_PIN, 147, 375);\rdelay(400);\r/////////////////////////////////////////\r//DS4\ranalogWrite(ledred, LOW);\ranalogWrite(ledgreen, LOW);\ranalogWrite(ledblue, LOW);\rtone(BUZZER_OUT_PIN, 311, 375);\rdelay(400);\r//G2\ranalogWrite(ledblue, 255);\rtone(BUZZER_OUT_PIN, 98, 175);\rdelay(200);\r//GS2\ranalogWrite(ledgreen, 255);\rtone(BUZZER_OUT_PIN, 104, 175);\rdelay(200);\r//AS2\ranalogWrite(ledred, 255);\rtone(BUZZER_OUT_PIN, 117, 375);\rdelay(400);\r///////////\r//DS4\ranalogWrite(ledred, LOW);\ranalogWrite(ledgreen, LOW);\ranalogWrite(ledblue, LOW);\rtone(BUZZER_OUT_PIN, 311, 375);\rdelay(400);\r//G2\ranalogWrite(ledblue, 255);\rtone(BUZZER_OUT_PIN, 98, 175);\rdelay(200);\r//GS2\ranalogWrite(ledgreen, 255);\rtone(BUZZER_OUT_PIN, 104, 175);\rdelay(200);\r//AS2\ranalogWrite(ledred, 255);\rtone(BUZZER_OUT_PIN, 117, 375);\rdelay(400);\r//////////////////////////////////////////\r//DS4\ranalogWrite(ledred, LOW);\ranalogWrite(ledgreen, LOW);\ranalogWrite(ledblue, LOW);\rtone(BUZZER_OUT_PIN, 311, 375);\rdelay(400);\r//G2\ranalogWrite(ledblue, 255);\rtone(BUZZER_OUT_PIN, 98, 175);\rdelay(200);\r//G2\ranalogWrite(ledred, 255);\rtone(BUZZER_OUT_PIN, 98, 175);\rdelay(200);\r//DS4\ranalogWrite(ledgreen, 255);\rtone(BUZZER_OUT_PIN, 311, 375);\rdelay(400);\r//F4\ranalogWrite(ledred, LOW);\ranalogWrite(ledgreen, LOW);\ranalogWrite(ledblue, LOW);\rtone(BUZZER_OUT_PIN, 349, 775);\rdelay(400);\r//GS2\ranalogWrite(ledblue, 255);\rtone(BUZZER_OUT_PIN, 104, 175);\rdelay(200);\r//GS2\ranalogWrite(ledgreen, 255);\rtone(BUZZER_OUT_PIN, 104, 175);\rdelay(200);\r//F4\ranalogWrite(ledred, 255);\rtone(BUZZER_OUT_PIN, 349, 375);\rdelay(400);\r//////////////////////////////////////////\r//C4\ranalogWrite(ledred, LOW);\ranalogWrite(ledgreen, LOW);\ranalogWrite(ledblue, LOW);\rtone(BUZZER_OUT_PIN, 262, 375);\rdelay(400);\r//DS3\ranalogWrite(ledblue, 255);\rtone(BUZZER_OUT_PIN, 156, 175);\rdelay(200); //F3\ranalogWrite(ledred, 255);\rtone(BUZZER_OUT_PIN, 175, 175);\rdelay(200);\r//G3\ranalogWrite(ledgreen, 255);\rtone(BUZZER_OUT_PIN, 196, 375);\rdelay(400);\r///////////\r//C3\ranalogWrite(ledred, LOW);\ranalogWrite(ledgreen, LOW);\ranalogWrite(ledblue, LOW);\rtone(BUZZER_OUT_PIN, 131, 375);\rdelay(400);\r//DS3\ranalogWrite(ledblue, 255);\rtone(BUZZER_OUT_PIN, 156, 175);\rdelay(200); //F3\ranalogWrite(ledred, 255);\rtone(BUZZER_OUT_PIN, 175, 175);\rdelay(200);\r//G3\ranalogWrite(ledgreen, 255);\rtone(BUZZER_OUT_PIN, 196, 375);\rdelay(400);\r//C3\ranalogWrite(ledred, LOW);\ranalogWrite(ledgreen, LOW);\ranalogWrite(ledblue, LOW);\rtone(BUZZER_OUT_PIN, 131, 375);\rdelay(400);\r//DS3\ranalogWrite(ledblue, 255);\rtone(BUZZER_OUT_PIN, 156, 175);\rdelay(200); //F3\ranalogWrite(ledred, 255);\rtone(BUZZER_OUT_PIN, 175, 175);\rdelay(200);\r//G3\ranalogWrite(ledgreen, 255);\rtone(BUZZER_OUT_PIN, 196, 375);\rdelay(400);\r//C3\ranalogWrite(ledred, LOW);\ranalogWrite(ledgreen, LOW);\ranalogWrite(ledblue, LOW);\rtone(BUZZER_OUT_PIN, 131, 375);\rdelay(400);\r//DS3\ranalogWrite(ledblue, 255);\rtone(BUZZER_OUT_PIN, 156, 175);\rdelay(200); //F3\ranalogWrite(ledred, 255);\rtone(BUZZER_OUT_PIN, 175, 175);\rdelay(200);\r//G3\ranalogWrite(ledgreen, 255);\rtone(BUZZER_OUT_PIN, 196, 375);\rdelay(400);\r////////////////////////////////////////////////////////////////////////////////////////\r////////////////////////////////////////////////////////////////////////////////////////\r//C5\ranalogWrite(ledred, LOW);\ranalogWrite(ledgreen, LOW);\ranalogWrite(ledblue, LOW);\rtone(BUZZER_OUT_PIN, 523, 375);\rdelay(400);\r//DS3\ranalogWrite(ledblue, 255);\rtone(BUZZER_OUT_PIN, 156, 175);\rdelay(200); //F3\ranalogWrite(ledred, 255);\rtone(BUZZER_OUT_PIN, 175, 175);\rdelay(200);\r//G3\ranalogWrite(ledgreen, 255);\rtone(BUZZER_OUT_PIN, 196, 375);\rdelay(400);\r///////////\r//C5\ranalogWrite(ledred, LOW);\ranalogWrite(ledgreen, LOW);\ranalogWrite(ledblue, LOW);\ranalogWrite(ledblue, 255);\rtone(BUZZER_OUT_PIN, 523, 375);\rdelay(400);\r//DS3\ranalogWrite(ledblue, 255);\rtone(BUZZER_OUT_PIN, 156, 175);\rdelay(200); //F3\ranalogWrite(ledred, 255);\rtone(BUZZER_OUT_PIN, 175, 175);\rdelay(200);\r//G3\ranalogWrite(ledgreen, 255);\rtone(BUZZER_OUT_PIN, 196, 375);\rdelay(400);\r///////////////////////////////////////////\r//AS4\ranalogWrite(ledred, LOW);\ranalogWrite(ledgreen, LOW);\ranalogWrite(ledblue, LOW);\rtone(BUZZER_OUT_PIN, 466, 375);\rdelay(400);\r//D3\ranalogWrite(ledred, 255);\rtone(BUZZER_OUT_PIN, 147, 175);\rdelay(200);\r//DS3\ranalogWrite(ledblue, 255);\rtone(BUZZER_OUT_PIN, 156, 175);\rdelay(200);\r//F3\ranalogWrite(ledgreen, 255);\rtone(BUZZER_OUT_PIN, 175, 375);\rdelay(400);\r/////////\r//AS4\ranalogWrite(ledred, LOW);\ranalogWrite(ledgreen, LOW);\ranalogWrite(ledblue, LOW);\rtone(BUZZER_OUT_PIN, 466, 375);\rdelay(400);\r//D3\ranalogWrite(ledred, 255);\rtone(BUZZER_OUT_PIN, 147, 175);\rdelay(200);\r//DS3\ranalogWrite(ledblue, 255);\rtone(BUZZER_OUT_PIN, 156, 175);\rdelay(200);\r//F3\ranalogWrite(ledgreen, 255);\rtone(BUZZER_OUT_PIN, 175, 375);\rdelay(400);\r//////////////////////////////////////////\r//GS4\ranalogWrite(ledred, LOW);\ranalogWrite(ledgreen, LOW);\ranalogWrite(ledblue, LOW);\rtone(BUZZER_OUT_PIN, 415, 375);\rdelay(400);\r//C3\ranalogWrite(ledred, 255);\rtone(BUZZER_OUT_PIN, 131, 175);\rdelay(200);\r//D3\ranalogWrite(ledblue, 255);\rtone(BUZZER_OUT_PIN, 147, 175);\rdelay(200);\r//DS3\ranalogWrite(ledgreen, 255);\rtone(BUZZER_OUT_PIN, 156, 375);\rdelay(400);\r//////////\r//GS4\ranalogWrite(ledred, LOW);\ranalogWrite(ledgreen, LOW);\ranalogWrite(ledblue, LOW);\rtone(BUZZER_OUT_PIN, 415, 375);\rdelay(400);\r//C3\ranalogWrite(ledred, 255);\rtone(BUZZER_OUT_PIN, 131, 175);\rdelay(200);\r//D3\ranalogWrite(ledblue, 255);\rtone(BUZZER_OUT_PIN, 147, 175);\rdelay(200);\r//DS3\ranalogWrite(ledgreen, 255);\rtone(BUZZER_OUT_PIN, 156, 375);\rdelay(400);\r/////////////////////////////////////////\r//G4\ranalogWrite(ledred, LOW);\ranalogWrite(ledgreen, LOW);\ranalogWrite(ledblue, LOW);\rtone(BUZZER_OUT_PIN, 392, 375);\rdelay(400);\r//AS2\ranalogWrite(ledred, 255);\rtone(BUZZER_OUT_PIN, 117, 175);\rdelay(200);\r//C3\ranalogWrite(ledblue, 255);\rtone(BUZZER_OUT_PIN, 131, 175);\rdelay(200);\r//D3\ranalogWrite(ledgreen, 255);\rtone(BUZZER_OUT_PIN, 147, 375);\rdelay(400);\r///////////\r//G4\ranalogWrite(ledred, LOW);\ranalogWrite(ledgreen, LOW);\ranalogWrite(ledblue, LOW);\rtone(BUZZER_OUT_PIN, 392, 375);\rdelay(400);\r//AS2\ranalogWrite(ledred, 255);\rtone(BUZZER_OUT_PIN, 117, 175);\rdelay(200);\r//C3\ranalogWrite(ledblue, 255);\rtone(BUZZER_OUT_PIN, 131, 175);\rdelay(200);\r//D3\ranalogWrite(ledgreen, 255);\rtone(BUZZER_OUT_PIN, 147, 375);\rdelay(400);\r/////////////////////////////////////////\r//DS4\ranalogWrite(ledred, LOW);\ranalogWrite(ledgreen, LOW);\ranalogWrite(ledblue, LOW);\rtone(BUZZER_OUT_PIN, 311, 375);\rdelay(400);\r//G2\ranalogWrite(ledred, 255);\rtone(BUZZER_OUT_PIN, 98, 175);\rdelay(200);\r//GS2\ranalogWrite(ledblue, 255);\rtone(BUZZER_OUT_PIN, 104, 175);\rdelay(200);\r//AS2\ranalogWrite(ledgreen, 255);\rtone(BUZZER_OUT_PIN, 117, 375);\rdelay(400);\r///////////\r//DS4\ranalogWrite(ledred, LOW);\ranalogWrite(ledgreen, LOW);\ranalogWrite(ledblue, LOW);\rtone(BUZZER_OUT_PIN, 311, 375);\rdelay(400);\r//G2\ranalogWrite(ledred, 255);\rtone(BUZZER_OUT_PIN, 98, 175);\rdelay(200);\r//GS2\ranalogWrite(ledblue, 255);\rtone(BUZZER_OUT_PIN, 104, 175);\rdelay(200);\r//AS2\ranalogWrite(ledgreen, 255);\rtone(BUZZER_OUT_PIN, 117, 375);\rdelay(400);\r//////////////////////////////////////////\r//DS4\ranalogWrite(ledred, LOW);\ranalogWrite(ledgreen, LOW);\ranalogWrite(ledblue, LOW);\rtone(BUZZER_OUT_PIN, 311, 775);\rdelay(800);\r//DS4\ranalogWrite(ledred, 255);\rtone(BUZZER_OUT_PIN, 311, 375);\rdelay(400);\r//D4\ranalogWrite(ledred, LOW);\rtone(BUZZER_OUT_PIN, 294, 775);\rdelay(800);\r//D4\ranalogWrite(ledblue, 255);\rtone(BUZZER_OUT_PIN, 294, 375);\rdelay(400);\r//////////////////////////////////////////\r//C4\ranalogWrite(ledred, LOW);\ranalogWrite(ledgreen, LOW);\ranalogWrite(ledblue, LOW);\rtone(BUZZER_OUT_PIN, 262, 375);\rdelay(400);\r//DS3\ranalogWrite(ledblue, 255);\rtone(BUZZER_OUT_PIN, 156, 175);\rdelay(200); //F3\ranalogWrite(ledred, 255);\rtone(BUZZER_OUT_PIN, 175, 175);\rdelay(200);\r//G3\ranalogWrite(ledgreen, 255);\rtone(BUZZER_OUT_PIN, 196, 375);\rdelay(400);\r///////////\r//C3\ranalogWrite(ledred, LOW);\ranalogWrite(ledgreen, LOW);\ranalogWrite(ledblue, LOW);\rtone(BUZZER_OUT_PIN, 131, 375);\rdelay(400);\r//DS3\ranalogWrite(ledblue, 255);\rtone(BUZZER_OUT_PIN, 156, 175);\rdelay(200); //F3\ranalogWrite(ledred, 255);\rtone(BUZZER_OUT_PIN, 175, 175);\rdelay(200);\r//G3\ranalogWrite(ledgreen, 255);\rtone(BUZZER_OUT_PIN, 196, 375);\rdelay(400);\r/////////////\r//C3\ranalogWrite(ledred, LOW);\ranalogWrite(ledgreen, LOW);\ranalogWrite(ledblue, LOW);\rtone(BUZZER_OUT_PIN, 131, 375);\rdelay(400);\r//DS3\ranalogWrite(ledblue, 255);\rtone(BUZZER_OUT_PIN, 156, 175);\rdelay(200); //F3\ranalogWrite(ledred, 255);\rtone(BUZZER_OUT_PIN, 175, 175);\rdelay(200);\r//G3\ranalogWrite(ledgreen, 255);\rtone(BUZZER_OUT_PIN, 196, 375);\rdelay(400);\r////////////\r//C3\ranalogWrite(ledred, LOW);\ranalogWrite(ledgreen, LOW);\ranalogWrite(ledblue, LOW);\rtone(BUZZER_OUT_PIN, 131, 375);\rdelay(400);\r//DS3\ranalogWrite(ledblue, 255);\rtone(BUZZER_OUT_PIN, 156, 175);\rdelay(200); //F3\ranalogWrite(ledred, 255);\rtone(BUZZER_OUT_PIN, 175, 175);\rdelay(200);\r//G3\ranalogWrite(ledgreen, 255);\rtone(BUZZER_OUT_PIN, 196, 375);\rdelay(400);\r///////////////\r//C3\ranalogWrite(ledred, LOW);\ranalogWrite(ledgreen, LOW);\ranalogWrite(ledblue, LOW);\rtone(BUZZER_OUT_PIN, 131, 375);\rdelay(400);\r//DS3\ranalogWrite(ledblue, 255);\rtone(BUZZER_OUT_PIN, 156, 175);\rdelay(200); //F3\ranalogWrite(ledred, 255);\rtone(BUZZER_OUT_PIN, 175, 175);\rdelay(200);\r//G3\ranalogWrite(ledgreen, 255);\rtone(BUZZER_OUT_PIN, 196, 375);\rdelay(400);\r////////////////////////////////////////////////\r//C3\ranalogWrite(ledred, LOW);\ranalogWrite(ledgreen, LOW);\ranalogWrite(ledblue, LOW);\rtone(BUZZER_OUT_PIN, 131, 375);\rdelay(400);\r//DS5\ranalogWrite(ledblue, 255);\rtone(BUZZER_OUT_PIN, 622, 175);\rdelay(200); //F5\ranalogWrite(ledred, 255);\rtone(BUZZER_OUT_PIN, 698, 175);\rdelay(200);\r//G5\ranalogWrite(ledgreen, 255);\rtone(BUZZER_OUT_PIN, 784, 375);\rdelay(400);\r/////////////////////////////////////////////////\r//C5\ranalogWrite(ledgreen, 255);\rtone(BUZZER_OUT_PIN, 523, 375);\rdelay(400);\r//DS5\ranalogWrite(ledred, LOW);\rtone(BUZZER_OUT_PIN, 622, 175);\rdelay(200); //F5\ranalogWrite(ledgreen, LOW);\rtone(BUZZER_OUT_PIN, 698, 175);\rdelay(200);\r//G5\ranalogWrite(ledblue, LOW);\rtone(BUZZER_OUT_PIN, 784, 375);\rdelay(400);\r/////////////////////////////////////////////////\r//C5\ranalogWrite(ledgreen, 255);\rtone(BUZZER_OUT_PIN, 523, 375);\rdelay(400);\r//DS5\ranalogWrite(ledblue, 255);\rtone(BUZZER_OUT_PIN, 622, 175);\rdelay(200); //F5\ranalogWrite(ledred, 255);\rtone(BUZZER_OUT_PIN, 698, 175);\rdelay(200);\r//G5\ranalogWrite(ledgreen, 255);\rtone(BUZZER_OUT_PIN, 784, 375);\rdelay(400);\rwhile(brightness \u0026gt; 0)\r{\ranalogWrite(ledred, brightness);\ranalogWrite(ledblue, brightness);\ranalogWrite(ledgreen, brightness);\rbrightness = brightness - fadeAmount;\rif (brightness == 0 || brightness == 255) {\rfadeAmount = -fadeAmount ;\r}\r}\ranalogWrite(ledred, LOW);\ranalogWrite(ledgreen, LOW);\ranalogWrite(ledblue, LOW);\rbrightness = 255;\rfadeAmount = 5;\rSerial.println(\u0026#34;END\u0026#34;);\rdelay(3000);\rwhile(true) {\r}\r}\r which result in the following data outputted on the serial port when executed:\ntone(8,196,375);\rdelay(400);\rtone(8,131,375);\rdelay(400);\rtone(8,156,175);\rdelay(200);\rtone(8,175,175);\rdelay(200);\rtone(8,196,375);\rdelay(400);\rtone(8,131,375);\rdelay(400);\rtone(8,156,175);\rdelay(200);\rtone(8,175,175);\rdelay(200);\rtone(8,196,375);\rdelay(400);\rtone(8,131,375);\rdelay(400);\rtone(8,156,175);\rdelay(200);\rtone(8,175,175);\rdelay(200);\rtone(8,196,375);\rdelay(400);\rtone(8,131,375);\rdelay(400);\rtone(8,156,175);\rdelay(200);\rtone(8,175,175);\rdelay(200);\rtone(8,196,375);\rdelay(400);\rtone(8,131,375);\rdelay(400);\rtone(8,165,175);\rdelay(200);\rtone(8,175,175);\rdelay(200);\rtone(8,196,375);\rdelay(400);\rtone(8,131,375);\rdelay(400);\rtone(8,156,175);\rdelay(200);\rtone(8,175,175);\rdelay(200);\rtone(8,196,375);\rdelay(400);\rtone(8,131,375);\rdelay(400);\rtone(8,165,175);\rdelay(200);\rtone(8,175,175);\rdelay(200);\rtone(8,196,375);\rdelay(400);\rtone(8,131,375);\rdelay(400);\rtone(8,156,175);\rdelay(200);\rtone(8,175,175);\rdelay(200);\rtone(8,392,1175);\rdelay(1200);\rtone(8,262,1175);\rdelay(1200);\rtone(8,311,175);\rdelay(200);\rtone(8,349,175);\rdelay(200);\rtone(8,392,775);\rdelay(800);\rtone(8,262,775);\rdelay(800);\rtone(8,311,175);\rdelay(200);\rtone(8,349,175);\rdelay(200);\rtone(8,131,375);\rdelay(400);\rtone(8,156,175);\rdelay(200);\rtone(8,175,175);\rdelay(200);\rtone(8,196,375);\rdelay(400);\rtone(8,131,375);\rdelay(400);\rtone(8,156,175);\rdelay(200);\rtone(8,175,175);\rdelay(200);\rtone(8,196,375);\rdelay(400);\rtone(8,131,375);\rdelay(400);\rtone(8,156,175);\rdelay(200);\rtone(8,175,175);\rdelay(200);\rtone(8,196,375);\rdelay(400);\rtone(8,131,375);\rdelay(400);\rtone(8,156,175);\rdelay(200);\rtone(8,175,175);\rdelay(200);\rtone(8,196,375);\rdelay(400);\rtone(8,349,1175);\rdelay(1200);\rtone(8,233,1175);\rdelay(1200);\rtone(8,294,175);\rdelay(200);\rtone(8,311,175);\rdelay(200);\rtone(8,349,775);\rdelay(800);\rtone(8,233,775);\rdelay(800);\rtone(8,311,175);\rdelay(200);\rtone(8,294,175);\rdelay(200);\rtone(8,131,375);\rdelay(400);\rtone(8,156,175);\rdelay(200);\rtone(8,175,175);\rdelay(200);\rtone(8,196,375);\rdelay(400);\rtone(8,131,375);\rdelay(400);\rtone(8,156,175);\rdelay(200);\rtone(8,175,175);\rdelay(200);\rtone(8,196,375);\rdelay(400);\rtone(8,131,375);\rdelay(400);\rtone(8,156,175);\rdelay(200);\rtone(8,175,175);\rdelay(200);\rtone(8,196,375);\rdelay(400);\rtone(8,131,375);\rdelay(400);\rtone(8,156,175);\rdelay(200);\rtone(8,175,175);\rdelay(200);\rtone(8,196,375);\rdelay(400);\rtone(8,392,1175);\rdelay(1200);\rtone(8,262,1175);\rdelay(1200);\rtone(8,311,175);\rdelay(200);\rtone(8,349,175);\rdelay(200);\rtone(8,392,775);\rdelay(800);\rtone(8,262,775);\rdelay(800);\rtone(8,311,175);\rdelay(200);\rtone(8,349,175);\rdelay(200);\rtone(8,131,375);\rdelay(400);\rtone(8,156,175);\rdelay(200);\rtone(8,175,175);\rdelay(200);\rtone(8,196,375);\rdelay(400);\rtone(8,131,375);\rdelay(400);\rtone(8,156,175);\rdelay(200);\rtone(8,175,175);\rdelay(200);\rtone(8,196,375);\rdelay(400);\rtone(8,131,375);\rdelay(400);\rtone(8,156,175);\rdelay(200);\rtone(8,175,175);\rdelay(200);\rtone(8,196,375);\rdelay(400);\rtone(8,131,375);\rdelay(400);\rtone(8,156,175);\rdelay(200);\rtone(8,175,175);\rdelay(200);\rtone(8,196,375);\rdelay(400);\rtone(8,349,1175);\rdelay(1200);\rtone(8,233,1175);\rdelay(1200);\rtone(8,294,175);\rdelay(200);\rtone(8,311,175);\rdelay(200);\rtone(8,349,775);\rdelay(800);\rtone(8,233,775);\rdelay(800);\rtone(8,311,175);\rdelay(200);\rtone(8,294,175);\rdelay(200);\rtone(8,131,375);\rdelay(400);\rtone(8,156,175);\rdelay(200);\rtone(8,175,175);\rdelay(200);\rtone(8,196,375);\rdelay(400);\rtone(8,131,375);\rdelay(400);\rtone(8,156,175);\rdelay(200);\rtone(8,175,175);\rdelay(200);\rtone(8,196,375);\rdelay(400);\rtone(8,131,375);\rdelay(400);\rtone(8,156,175);\rdelay(200);\rtone(8,175,175);\rdelay(200);\rtone(8,196,375);\rdelay(400);\rtone(8,131,375);\rdelay(400);\rtone(8,156,175);\rdelay(200);\rtone(8,175,175);\rdelay(200);\rtone(8,196,375);\rdelay(400);\rtone(8,784,1175);\rdelay(1200);\rtone(8,523,1175);\rdelay(1200);\rtone(8,622,175);\rdelay(200);\rtone(8,698,175);\rdelay(200);\rtone(8,784,775);\rdelay(800);\rtone(8,523,775);\rdelay(800);\rtone(8,622,175);\rdelay(200);\rtone(8,698,175);\rdelay(200);\rtone(8,131,375);\rdelay(400);\rtone(8,156,175);\rdelay(200);\rtone(8,175,175);\rdelay(200);\rtone(8,196,375);\rdelay(400);\rtone(8,131,375);\rdelay(400);\rtone(8,156,175);\rdelay(200);\rtone(8,175,175);\rdelay(200);\rtone(8,196,375);\rdelay(400);\rtone(8,131,375);\rdelay(400);\rtone(8,156,175);\rdelay(200);\rtone(8,175,175);\rdelay(200);\rtone(8,196,375);\rdelay(400);\rtone(8,131,375);\rdelay(400);\rtone(8,156,175);\rdelay(200);\rtone(8,175,175);\rdelay(200);\rtone(8,196,375);\rdelay(400);\rtone(8,698,1175);\rdelay(1200);\rtone(8,466,1175);\rdelay(1200);\rtone(8,587,575);\rdelay(600);\rtone(8,622,575);\rdelay(600);\rtone(8,587,575);\rdelay(600);\rtone(8,466,575);\rdelay(600);\rtone(8,131,375);\rdelay(400);\rtone(8,156,175);\rdelay(200);\rtone(8,175,175);\rdelay(200);\rtone(8,196,375);\rdelay(400);\rtone(8,131,375);\rdelay(400);\rtone(8,156,175);\rdelay(200);\rtone(8,175,175);\rdelay(200);\rtone(8,196,375);\rdelay(400);\rtone(8,131,375);\rdelay(400);\rtone(8,156,175);\rdelay(200);\rtone(8,175,175);\rdelay(200);\rtone(8,196,375);\rdelay(400);\rtone(8,131,375);\rdelay(400);\rtone(8,156,175);\rdelay(200);\rtone(8,175,175);\rdelay(200);\rtone(8,196,375);\rdelay(400);\rtone(8,523,375);\rdelay(400);\rtone(8,156,175);\rdelay(200);\rtone(8,175,175);\rdelay(200);\rtone(8,196,375);\rdelay(400);\rtone(8,523,375);\rdelay(400);\rtone(8,156,175);\rdelay(200);\rtone(8,175,175);\rdelay(200);\rtone(8,196,375);\rdelay(400);\rtone(8,466,375);\rdelay(400);\rtone(8,147,175);\rdelay(200);\rtone(8,156,175);\rdelay(200);\rtone(8,175,375);\rdelay(400);\rtone(8,466,375);\rdelay(400);\rtone(8,147,175);\rdelay(200);\rtone(8,156,175);\rdelay(200);\rtone(8,175,375);\rdelay(400);\rtone(8,415,375);\rdelay(400);\rtone(8,131,175);\rdelay(200);\rtone(8,147,175);\rdelay(200);\rtone(8,156,375);\rdelay(400);\rtone(8,415,375);\rdelay(400);\rtone(8,131,175);\rdelay(200);\rtone(8,147,175);\rdelay(200);\rtone(8,156,375);\rdelay(400);\rtone(8,392,375);\rdelay(400);\rtone(8,117,175);\rdelay(200);\rtone(8,131,175);\rdelay(200);\rtone(8,147,375);\rdelay(400);\rtone(8,392,375);\rdelay(400);\rtone(8,117,175);\rdelay(200);\rtone(8,131,175);\rdelay(200);\rtone(8,147,375);\rdelay(400);\rtone(8,311,375);\rdelay(400);\rtone(8,98,175);\rdelay(200);\rtone(8,104,175);\rdelay(200);\rtone(8,117,375);\rdelay(400);\rtone(8,311,375);\rdelay(400);\rtone(8,98,175);\rdelay(200);\rtone(8,104,175);\rdelay(200);\rtone(8,117,375);\rdelay(400);\rtone(8,311,375);\rdelay(400);\rtone(8,98,175);\rdelay(200);\rtone(8,98,175);\rdelay(200);\rtone(8,311,375);\rdelay(400);\rtone(8,349,775);\rdelay(400);\rtone(8,104,175);\rdelay(200);\rtone(8,104,175);\rdelay(200);\rtone(8,349,375);\rdelay(400);\rtone(8,262,375);\rdelay(400);\rtone(8,156,175);\rdelay(200);\rtone(8,175,175);\rdelay(200);\rtone(8,196,375);\rdelay(400);\rtone(8,131,375);\rdelay(400);\rtone(8,156,175);\rdelay(200);\rtone(8,175,175);\rdelay(200);\rtone(8,196,375);\rdelay(400);\rtone(8,131,375);\rdelay(400);\rtone(8,156,175);\rdelay(200);\rtone(8,175,175);\rdelay(200);\rtone(8,196,375);\rdelay(400);\rtone(8,131,375);\rdelay(400);\rtone(8,156,175);\rdelay(200);\rtone(8,175,175);\rdelay(200);\rtone(8,196,375);\rdelay(400);\rtone(8,523,375);\rdelay(400);\rtone(8,156,175);\rdelay(200);\rtone(8,175,175);\rdelay(200);\rtone(8,196,375);\rdelay(400);\rtone(8,523,375);\rdelay(400);\rtone(8,156,175);\rdelay(200);\rtone(8,175,175);\rdelay(200);\rtone(8,196,375);\rdelay(400);\rtone(8,466,375);\rdelay(400);\rtone(8,147,175);\rdelay(200);\rtone(8,156,175);\rdelay(200);\rtone(8,175,375);\rdelay(400);\rtone(8,466,375);\rdelay(400);\rtone(8,147,175);\rdelay(200);\rtone(8,156,175);\rdelay(200);\rtone(8,175,375);\rdelay(400);\rtone(8,415,375);\rdelay(400);\rtone(8,131,175);\rdelay(200);\rtone(8,147,175);\rdelay(200);\rtone(8,156,375);\rdelay(400);\rtone(8,415,375);\rdelay(400);\rtone(8,131,175);\rdelay(200);\rtone(8,147,175);\rdelay(200);\rtone(8,156,375);\rdelay(400);\rtone(8,392,375);\rdelay(400);\rtone(8,117,175);\rdelay(200);\rtone(8,131,175);\rdelay(200);\rtone(8,147,375);\rdelay(400);\rtone(8,392,375);\rdelay(400);\rtone(8,117,175);\rdelay(200);\rtone(8,131,175);\rdelay(200);\rtone(8,147,375);\rdelay(400);\rtone(8,311,375);\rdelay(400);\rtone(8,98,175);\rdelay(200);\rtone(8,104,175);\rdelay(200);\rtone(8,117,375);\rdelay(400);\rtone(8,311,375);\rdelay(400);\rtone(8,98,175);\rdelay(200);\rtone(8,104,175);\rdelay(200);\rtone(8,117,375);\rdelay(400);\rtone(8,311,775);\rdelay(800);\rtone(8,311,375);\rdelay(400);\rtone(8,294,775);\rdelay(800);\rtone(8,294,375);\rdelay(400);\rtone(8,262,375);\rdelay(400);\rtone(8,156,175);\rdelay(200);\rtone(8,175,175);\rdelay(200);\rtone(8,196,375);\rdelay(400);\rtone(8,131,375);\rdelay(400);\rtone(8,156,175);\rdelay(200);\rtone(8,175,175);\rdelay(200);\rtone(8,196,375);\rdelay(400);\rtone(8,131,375);\rdelay(400);\rtone(8,156,175);\rdelay(200);\rtone(8,175,175);\rdelay(200);\rtone(8,196,375);\rdelay(400);\rtone(8,131,375);\rdelay(400);\rtone(8,156,175);\rdelay(200);\rtone(8,175,175);\rdelay(200);\rtone(8,196,375);\rdelay(400);\rtone(8,131,375);\rdelay(400);\rtone(8,156,175);\rdelay(200);\rtone(8,175,175);\rdelay(200);\rtone(8,196,375);\rdelay(400);\rtone(8,131,375);\rdelay(400);\rtone(8,622,175);\rdelay(200);\rtone(8,698,175);\rdelay(200);\rtone(8,784,375);\rdelay(400);\rtone(8,523,375);\rdelay(400);\rtone(8,622,175);\rdelay(200);\rtone(8,698,175);\rdelay(200);\rtone(8,784,375);\rdelay(400);\rtone(8,523,375);\rdelay(400);\rtone(8,622,175);\rdelay(200);\rtone(8,698,175);\rdelay(200);\rtone(8,784,375);\rdelay(400); Using libRtttl gui, the above code can be converted to the following RTTTL melody:\nSettings: force default, enable tone() octave offsetting.\rGame of Throne RTTTL:\nGOT:d=32,o=4,b=320:2g5,p,2c5,p,4d#5,p,4f5,p,2g5,p,2c5,p,4d#5,p,4f5,p,2g5,p,2c5,p,4d#5,p,4f5,p,2g5,p,2c5,p,4d#5,p,4f5,p,2g5,p,2c5,p,4e5,p,4f5,p,2g5,p,2c5,p,4d#5,p,4f5,p,2g5,p,2c5,p,4e5,p,4f5,p,2g5,p,2c5,p,4d#5,p,4f5,p,1g.6,p,1c.6,p,4d#6,p,4f6,p,1g6,p,1c6,p,4d#6,p,4f6,p,2c5,p,4d#5,p,4f5,p,2g5,p,2c5,p,4d#5,p,4f5,p,2g5,p,2c5,p,4d#5,p,4f5,p,2g5,p,2c5,p,4d#5,p,4f5,p,2g5,p,1f.6,p,1a#.5,p,4d6,p,4d#6,p,1f6,p,1a#5,p,4d#6,p,4d6,p,2c5,p,4d#5,p,4f5,p,2g5,p,2c5,p,4d#5,p,4f5,p,2g5,p,2c5,p,4d#5,p,4f5,p,2g5,p,2c5,p,4d#5,p,4f5,p,2g5,p,1g.6,p,1c.6,p,4d#6,p,4f6,p,1g6,p,1c6,p,4d#6,p,4f6,p,2c5,p,4d#5,p,4f5,p,2g5,p,2c5,p,4d#5,p,4f5,p,2g5,p,2c5,p,4d#5,p,4f5,p,2g5,p,2c5,p,4d#5,p,4f5,p,2g5,p,1f.6,p,1a#.5,p,4d6,p,4d#6,p,1f6,p,1a#5,p,4d#6,p,4d6,p,2c5,p,4d#5,p,4f5,p,2g5,p,2c5,p,4d#5,p,4f5,p,2g5,p,2c5,p,4d#5,p,4f5,p,2g5,p,2c5,p,4d#5,p,4f5,p,2g5,p,1g.7,p,1c.7,p,4d#7,p,4f7,p,1g7,p,1c7,p,4d#7,p,4f7,p,2c5,p,4d#5,p,4f5,p,2g5,p,2c5,p,4d#5,p,4f5,p,2g5,p,2c5,p,4d#5,p,4f5,p,2g5,p,2c5,p,4d#5,p,4f5,p,2g5,p,1f.7,p,1a#.6,p,1d7,p,1d#7,p,1d7,p,1a#6,p,2c5,p,4d#5,p,4f5,p,2g5,p,2c5,p,4d#5,p,4f5,p,2g5,p,2c5,p,4d#5,p,4f5,p,2g5,p,2c5,p,4d#5,p,4f5,p,2g5,p,2c7,p,4d#5,p,4f5,p,2g5,p,2c7,p,4d#5,p,4f5,p,2g5,p,2a#6,p,4d5,p,4d#5,p,2f5,p,2a#6,p,4d5,p,4d#5,p,2f5,p,2g#6,p,4c5,p,4d5,p,2d#5,p,2g#6,p,4c5,p,4d5,p,2d#5,p,2g6,p,4a#,p,4c5,p,2d5,p,2g6,p,4a#,p,4c5,p,2d5,p,2d#6,p,4f#,p,4g#,p,2a#,p,2d#6,p,4f#,p,4g#,p,2a#,p,2d#6,p,4f#,p,4f#,p,2d#6,p,1f6,2p,4g#,p,4g#,p,2f6,p,2c6,p,4d#5,p,4f5,p,2g5,p,2c5,p,4d#5,p,4f5,p,2g5,p,2c5,p,4d#5,p,4f5,p,2g5,p,2c5,p,4d#5,p,4f5,p,2g5,p,2c7,p,4d#5,p,4f5,p,2g5,p,2c7,p,4d#5,p,4f5,p,2g5,p,2a#6,p,4d5,p,4d#5,p,2f5,p,2a#6,p,4d5,p,4d#5,p,2f5,p,2g#6,p,4c5,p,4d5,p,2d#5,p,2g#6,p,4c5,p,4d5,p,2d#5,p,2g6,p,4a#,p,4c5,p,2d5,p,2g6,p,4a#,p,4c5,p,2d5,p,2d#6,p,4f#,p,4g#,p,2a#,p,2d#6,p,4f#,p,4g#,p,2a#,p,1d#6,p,2d#6,p,1d6,p,2d6,p,2c6,p,4d#5,p,4f5,p,2g5,p,2c5,p,4d#5,p,4f5,p,2g5,p,2c5,p,4d#5,p,4f5,p,2g5,p,2c5,p,4d#5,p,4f5,p,2g5,p,2c5,p,4d#5,p,4f5,p,2g5,p,2c5,p,4d#7,p,4f7,p,2g7,p,2c7,p,4d#7,p,4f7,p,2g7,p,2c7,p,4d#7,p,4f7,p,2g7,p\nor the following (by enabling unofficial BPM values) which help have accurate delays between notes:\nGOTv2:d=32,o=4,b=336:2g5,p,2c5,p,4d#5,p,4f5,p,2g5,p,2c5,p,4d#5,p,4f5,p,2g5,p,2c5,p,4d#5,p,4f5,p,2g5,p,2c5,p,4d#5,p,4f5,p,2g5,p,2c5,p,4e5,p,4f5,p,2g5,p,2c5,p,4d#5,p,4f5,p,2g5,p,2c5,p,4e5,p,4f5,p,2g5,p,2c5,p,4d#5,p,4f5,p,1g.6,p,1c.6,p,4d#6,p,4f6,p,1g6,p,1c6,p,4d#6,p,4f6,p,2c5,p,4d#5,p,4f5,p,2g5,p,2c5,p,4d#5,p,4f5,p,2g5,p,2c5,p,4d#5,p,4f5,p,2g5,p,2c5,p,4d#5,p,4f5,p,2g5,p,1f.6,p,1a#.5,p,4d6,p,4d#6,p,1f6,p,1a#5,p,4d#6,p,4d6,p,2c5,p,4d#5,p,4f5,p,2g5,p,2c5,p,4d#5,p,4f5,p,2g5,p,2c5,p,4d#5,p,4f5,p,2g5,p,2c5,p,4d#5,p,4f5,p,2g5,p,1g.6,p,1c.6,p,4d#6,p,4f6,p,1g6,p,1c6,p,4d#6,p,4f6,p,2c5,p,4d#5,p,4f5,p,2g5,p,2c5,p,4d#5,p,4f5,p,2g5,p,2c5,p,4d#5,p,4f5,p,2g5,p,2c5,p,4d#5,p,4f5,p,2g5,p,1f.6,p,1a#.5,p,4d6,p,4d#6,p,1f6,p,1a#5,p,4d#6,p,4d6,p,2c5,p,4d#5,p,4f5,p,2g5,p,2c5,p,4d#5,p,4f5,p,2g5,p,2c5,p,4d#5,p,4f5,p,2g5,p,2c5,p,4d#5,p,4f5,p,2g5,p,1g.7,p,1c.7,p,4d#7,p,4f7,p,1g7,p,1c7,p,4d#7,p,4f7,p,2c5,p,4d#5,p,4f5,p,2g5,p,2c5,p,4d#5,p,4f5,p,2g5,p,2c5,p,4d#5,p,4f5,p,2g5,p,2c5,p,4d#5,p,4f5,p,2g5,p,1f.7,p,1a#.6,p,1d7,p,1d#7,p,1d7,p,1a#6,p,2c5,p,4d#5,p,4f5,p,2g5,p,2c5,p,4d#5,p,4f5,p,2g5,p,2c5,p,4d#5,p,4f5,p,2g5,p,2c5,p,4d#5,p,4f5,p,2g5,p,2c7,p,4d#5,p,4f5,p,2g5,p,2c7,p,4d#5,p,4f5,p,2g5,p,2a#6,p,4d5,p,4d#5,p,2f5,p,2a#6,p,4d5,p,4d#5,p,2f5,p,2g#6,p,4c5,p,4d5,p,2d#5,p,2g#6,p,4c5,p,4d5,p,2d#5,p,2g6,p,4a#,p,4c5,p,2d5,p,2g6,p,4a#,p,4c5,p,2d5,p,2d#6,p,4f#,p,4g#,p,2a#,p,2d#6,p,4f#,p,4g#,p,2a#,p,2d#6,p,4f#,p,4f#,p,2d#6,p,1f6,2p,4g#,p,4g#,p,2f6,p,2c6,p,4d#5,p,4f5,p,2g5,p,2c5,p,4d#5,p,4f5,p,2g5,p,2c5,p,4d#5,p,4f5,p,2g5,p,2c5,p,4d#5,p,4f5,p,2g5,p,2c7,p,4d#5,p,4f5,p,2g5,p,2c7,p,4d#5,p,4f5,p,2g5,p,2a#6,p,4d5,p,4d#5,p,2f5,p,2a#6,p,4d5,p,4d#5,p,2f5,p,2g#6,p,4c5,p,4d5,p,2d#5,p,2g#6,p,4c5,p,4d5,p,2d#5,p,2g6,p,4a#,p,4c5,p,2d5,p,2g6,p,4a#,p,4c5,p,2d5,p,2d#6,p,4f#,p,4g#,p,2a#,p,2d#6,p,4f#,p,4g#,p,2a#,p,1d#6,p,2d#6,p,1d6,p,2d6,p,2c6,p,4d#5,p,4f5,p,2g5,p,2c5,p,4d#5,p,4f5,p,2g5,p,2c5,p,4d#5,p,4f5,p,2g5,p,2c5,p,4d#5,p,4f5,p,2g5,p,2c5,p,4d#5,p,4f5,p,2g5,p,2c5,p,4d#7,p,4f7,p,2g7,p,2c7,p,4d#7,p,4f7,p,2g7,p,2c7,p,4d#7,p,4f7,p,2g7,p\nStar Wars - The imperial March Source code:\n Instructables: http://www.instructables.com/id/How-to-easily-play-music-with-buzzer-on-arduino-Th/ Code from pasted: http://pasted.co/e525c1b2 Cache version here: Star_Wars_-_The_imperial_March  Modify the code by adding the \u0026ldquo;Arduino tone and delay functions overrides\u0026rdquo; to the code. Once done, the code should be looking like this:\n1// NB: ALL NOTES DEFINED WITH STANDARD ENGLISH NAMES, EXCEPT FROM \u0026#34;A\u0026#34; 2//THAT IS CALLED WITH THE ITALIAN NAME \u0026#34;LA\u0026#34; BECAUSE A0,A1...ARE THE ANALOG PINS ON ARDUINO. 3// (Ab IS CALLED Ab AND NOT LAb) 4#define\tC0 16.35 5#define\tDb0\t17.32 6#define\tD0\t18.35 7#define\tEb0\t19.45 8#define\tE0\t20.60 9#define\tF0\t21.83 10#define\tGb0\t23.12 11#define\tG0\t24.50 12#define\tAb0\t25.96 13#define\tLA0\t27.50 14#define\tBb0\t29.14 15#define\tB0\t30.87 16#define\tC1\t32.70 17#define\tDb1\t34.65 18#define\tD1\t36.71 19#define\tEb1\t38.89 20#define\tE1\t41.20 21#define\tF1\t43.65 22#define\tGb1\t46.25 23#define\tG1\t49.00 24#define\tAb1\t51.91 25#define\tLA1\t55.00 26#define\tBb1\t58.27 27#define\tB1\t61.74 28#define\tC2\t65.41 29#define\tDb2\t69.30 30#define\tD2\t73.42 31#define\tEb2\t77.78 32#define\tE2\t82.41 33#define\tF2\t87.31 34#define\tGb2\t92.50 35#define\tG2\t98.00 36#define\tAb2\t103.83 37#define\tLA2\t110.00 38#define\tBb2\t116.54 39#define\tB2\t123.47 40#define\tC3\t130.81 41#define\tDb3\t138.59 42#define\tD3\t146.83 43#define\tEb3\t155.56 44#define\tE3\t164.81 45#define\tF3\t174.61 46#define\tGb3\t185.00 47#define\tG3\t196.00 48#define\tAb3\t207.65 49#define\tLA3\t220.00 50#define\tBb3\t233.08 51#define\tB3\t246.94 52#define\tC4\t261.63 53#define\tDb4\t277.18 54#define\tD4\t293.66 55#define\tEb4\t311.13 56#define\tE4\t329.63 57#define\tF4\t349.23 58#define\tGb4\t369.99 59#define\tG4\t392.00 60#define\tAb4\t415.30 61#define\tLA4\t440.00 62#define\tBb4\t466.16 63#define\tB4\t493.88 64#define\tC5\t523.25 65#define\tDb5\t554.37 66#define\tD5\t587.33 67#define\tEb5\t622.25 68#define\tE5\t659.26 69#define\tF5\t698.46 70#define\tGb5\t739.99 71#define\tG5\t783.99 72#define\tAb5\t830.61 73#define\tLA5\t880.00 74#define\tBb5\t932.33 75#define\tB5\t987.77 76#define\tC6\t1046.50 77#define\tDb6\t1108.73 78#define\tD6\t1174.66 79#define\tEb6\t1244.51 80#define\tE6\t1318.51 81#define\tF6\t1396.91 82#define\tGb6\t1479.98 83#define\tG6\t1567.98 84#define\tAb6\t1661.22 85#define\tLA6\t1760.00 86#define\tBb6\t1864.66 87#define\tB6\t1975.53 88#define\tC7\t2093.00 89#define\tDb7\t2217.46 90#define\tD7\t2349.32 91#define\tEb7\t2489.02 92#define\tE7\t2637.02 93#define\tF7\t2793.83 94#define\tGb7\t2959.96 95#define\tG7\t3135.96 96#define\tAb7\t3322.44 97#define\tLA7\t3520.01 98#define\tBb7\t3729.31 99#define\tB7\t3951.07 100#define\tC8\t4186.01 101#define\tDb8\t4434.92 102#define\tD8\t4698.64 103#define\tEb8\t4978.03 104// DURATION OF THE NOTES 105#define BPM 120 // you can change this value changing all the others 106#define H 2*Q //half 2/4 107#define Q 60000/BPM //quarter 1/4 108#define E Q/2 //eighth 1/8 109#define S Q/4 // sixteenth 1/16 110#define W 4*Q // whole 4/4 111 112//silence all analogWrite calls 113#define analogWrite dummyAnalogWrite 114void dummyAnalogWrite(int pin, int value) 115{ 116} 117 118//output function calls to serial port 119void serialTone(byte pin, uint16_t frequency, uint32_t duration) { 120 Serial.print(\u0026#34;tone(\u0026#34;); 121 Serial.print(pin); 122 Serial.print(\u0026#34;,\u0026#34;); 123 Serial.print(frequency); 124 Serial.print(\u0026#34;,\u0026#34;); 125 Serial.print(duration); 126 Serial.println(\u0026#34;);\u0026#34;); 127} 128 129void serialNoTone(byte pin) { 130 Serial.print(\u0026#34;noTone(\u0026#34;); 131 Serial.print(pin); 132 Serial.println(\u0026#34;);\u0026#34;); 133} 134 135void serialDelay(uint32_t duration) { 136 Serial.print(\u0026#34;delay(\u0026#34;); 137 Serial.print(duration); 138 Serial.println(\u0026#34;);\u0026#34;); 139} 140 141#define tone serialTone 142#define delay serialDelay 143#define noTone serialNoTone 144 145void setup() { 146pinMode(8, OUTPUT); 147pinMode(9, OUTPUT); 148digitalWrite(9,LOW); 149 150Serial.begin(115200); 151 152Serial.println(\u0026#34;START\u0026#34;); 153} 154 155// the loop routine runs over and over again forever: 156void loop() { 157 //tone(pin, note, duration) 158 tone(8,LA3,Q); 159 delay(1+Q); //delay duration should always be 1 ms more than the note in order to separate them. 160 tone(8,LA3,Q); 161 delay(1+Q); 162 tone(8,LA3,Q); 163 delay(1+Q); 164 tone(8,F3,E+S); 165 delay(1+E+S); 166 tone(8,C4,S); 167 delay(1+S); 168 169 tone(8,LA3,Q); 170 delay(1+Q); 171 tone(8,F3,E+S); 172 delay(1+E+S); 173 tone(8,C4,S); 174 delay(1+S); 175 tone(8,LA3,H); 176 delay(1+H); 177 178 tone(8,E4,Q); 179 delay(1+Q); 180 tone(8,E4,Q); 181 delay(1+Q); 182 tone(8,E4,Q); 183 delay(1+Q); 184 tone(8,F4,E+S); 185 delay(1+E+S); 186 tone(8,C4,S); 187 delay(1+S); 188 189 tone(8,Ab3,Q); 190 delay(1+Q); 191 tone(8,F3,E+S); 192 delay(1+E+S); 193 tone(8,C4,S); 194 delay(1+S); 195 tone(8,LA3,H); 196 delay(1+H); 197 198 tone(8,LA4,Q); 199 delay(1+Q); 200 tone(8,LA3,E+S); 201 delay(1+E+S); 202 tone(8,LA3,S); 203 delay(1+S); 204 tone(8,LA4,Q); 205 delay(1+Q); 206 tone(8,Ab4,E+S); 207 delay(1+E+S); 208 tone(8,G4,S); 209 delay(1+S); 210 211 tone(8,Gb4,S); 212 delay(1+S); 213 tone(8,E4,S); 214 delay(1+S); 215 tone(8,F4,E); 216 delay(1+E); 217 delay(1+E);//PAUSE 218 tone(8,Bb3,E); 219 delay(1+E); 220 tone(8,Eb4,Q); 221 delay(1+Q); 222 tone(8,D4,E+S); 223 delay(1+E+S); 224 tone(8,Db4,S); 225 delay(1+S); 226 227 tone(8,C4,S); 228 delay(1+S); 229 tone(8,B3,S); 230 delay(1+S); 231 tone(8,C4,E); 232 delay(1+E); 233 delay(1+E);//PAUSE QUASI FINE RIGA 234 tone(8,F3,E); 235 delay(1+E); 236 tone(8,Ab3,Q); 237 delay(1+Q); 238 tone(8,F3,E+S); 239 delay(1+E+S); 240 tone(8,LA3,S); 241 delay(1+S); 242 243 tone(8,C4,Q); 244 delay(1+Q); 245 tone(8,LA3,E+S); 246 delay(1+E+S); 247 tone(8,C4,S); 248 delay(1+S); 249 tone(8,E4,H); 250 delay(1+H); 251 252 tone(8,LA4,Q); 253 delay(1+Q); 254 tone(8,LA3,E+S); 255 delay(1+E+S); 256 tone(8,LA3,S); 257 delay(1+S); 258 tone(8,LA4,Q); 259 delay(1+Q); 260 tone(8,Ab4,E+S); 261 delay(1+E+S); 262 tone(8,G4,S); 263 delay(1+S); 264 265 tone(8,Gb4,S); 266 delay(1+S); 267 tone(8,E4,S); 268 delay(1+S); 269 tone(8,F4,E); 270 delay(1+E); 271 delay(1+E);//PAUSE 272 tone(8,Bb3,E); 273 delay(1+E); 274 tone(8,Eb4,Q); 275 delay(1+Q); 276 tone(8,D4,E+S); 277 delay(1+E+S); 278 tone(8,Db4,S); 279 delay(1+S); 280 281 tone(8,C4,S); 282 delay(1+S); 283 tone(8,B3,S); 284 delay(1+S); 285 tone(8,C4,E); 286 delay(1+E); 287 delay(1+E);//PAUSE QUASI FINE RIGA 288 tone(8,F3,E); 289 delay(1+E); 290 tone(8,Ab3,Q); 291 delay(1+Q); 292 tone(8,F3,E+S); 293 delay(1+E+S); 294 tone(8,C4,S); 295 delay(1+S); 296 297 tone(8,LA3,Q); 298 delay(1+Q); 299 tone(8,F3,E+S); 300 delay(1+E+S); 301 tone(8,C4,S); 302 delay(1+S); 303 tone(8,LA3,H); 304 delay(1+H); 305 306 delay(2*H); 307 308 Serial.println(\u0026#34;END\u0026#34;); 309 310 while(true) { 311 } 312 313}  which result in the following data outputted on the serial port:\n1tone(8,220,500); 2delay(501); 3tone(8,220,500); 4delay(501); 5tone(8,220,500); 6delay(501); 7tone(8,174,375); 8delay(376); 9tone(8,261,125); 10delay(126); 11tone(8,220,500); 12delay(501); 13tone(8,174,375); 14delay(376); 15tone(8,261,125); 16delay(126); 17tone(8,220,1000); 18delay(1001); 19tone(8,329,500); 20delay(501); 21tone(8,329,500); 22delay(501); 23tone(8,329,500); 24delay(501); 25tone(8,349,375); 26delay(376); 27tone(8,261,125); 28delay(126); 29tone(8,207,500); 30delay(501); 31tone(8,174,375); 32delay(376); 33tone(8,261,125); 34delay(126); 35tone(8,220,1000); 36delay(1001); 37tone(8,440,500); 38delay(501); 39tone(8,220,375); 40delay(376); 41tone(8,220,125); 42delay(126); 43tone(8,440,500); 44delay(501); 45tone(8,415,375); 46delay(376); 47tone(8,392,125); 48delay(126); 49tone(8,369,125); 50delay(126); 51tone(8,329,125); 52delay(126); 53tone(8,349,250); 54delay(251); 55delay(251); 56tone(8,233,250); 57delay(251); 58tone(8,311,500); 59delay(501); 60tone(8,293,375); 61delay(376); 62tone(8,277,125); 63delay(126); 64tone(8,261,125); 65delay(126); 66tone(8,246,125); 67delay(126); 68tone(8,261,250); 69delay(251); 70delay(251); 71tone(8,174,250); 72delay(251); 73tone(8,207,500); 74delay(501); 75tone(8,174,375); 76delay(376); 77tone(8,220,125); 78delay(126); 79tone(8,261,500); 80delay(501); 81tone(8,220,375); 82delay(376); 83tone(8,261,125); 84delay(126); 85tone(8,329,1000); 86delay(1001); 87tone(8,440,500); 88delay(501); 89tone(8,220,375); 90delay(376); 91tone(8,220,125); 92delay(126); 93tone(8,440,500); 94delay(501); 95tone(8,415,375); 96delay(376); 97tone(8,392,125); 98delay(126); 99tone(8,369,125); 100delay(126); 101tone(8,329,125); 102delay(126); 103tone(8,349,250); 104delay(251); 105delay(251); 106tone(8,233,250); 107delay(251); 108tone(8,311,500); 109delay(501); 110tone(8,293,375); 111delay(376); 112tone(8,277,125); 113delay(126); 114tone(8,261,125); 115delay(126); 116tone(8,246,125); 117delay(126); 118tone(8,261,250); 119delay(251); 120delay(251); 121tone(8,174,250); 122delay(251); 123tone(8,207,500); 124delay(501); 125tone(8,174,375); 126delay(376); 127tone(8,261,125); 128delay(126); 129tone(8,220,500); 130delay(501); 131tone(8,174,375); 132delay(376); 133tone(8,261,125); 134delay(126); 135tone(8,220,1000); 136delay(1001);  Using libRtttl gui, the above code can be converted to the following RTTTL melody:\nSettings: force default, enable tone() octave offsetting\rStar Wars - The imperial March RTTTL:\nunknown:d=4,o=5,b=180:a.4,a.4,a.4,f4,16c.,a.4,f4,16c.,2a.4,e.,e.,e.,f,16c.,g#.4,f4,16c.,2a.4,a.,a4,16a.4,a.,g#,16g.,16f#.,16e.,8f.,8p.,8a#.4,d#.,d,16c#.,16c.,16b.4,8c.,8p.,8f.4,g#.4,f4,16a.4,c.,a4,16c.,2e.,a.,a4,16a.4,a.,g#,16g.,16f#.,16e.,8f.,8p.,8a#.4,d#.,d,16c#.,16c.,16b.4,8c.,8p.,8f.4,g#.4,f4,16c.,a.4,f4,16c.,2a.4\nor the following (by enabling unofficial BPM values) which help have accurate delays between notes:\nunknown:d=8,o=5,b=120:4a4,4a4,4a4,f.4,16c,4a4,f.4,16c,2a4,4e,4e,4e,f.,16c,4g#4,f.4,16c,2a4,4a,a.4,16a4,4a,g#.,16g,16f#,16e,f,p,a#4,4d#,d.,16c#,16c,16b4,c,p,f4,4g#4,f.4,16a4,4c,a.4,16c,2e,4a,a.4,16a4,4a,g#.,16g,16f#,16e,f,p,a#4,4d#,d.,16c#,16c,16b4,c,p,f4,4g#4,f.4,16c,4a4,f.4,16c,2a4\nSuper Mario Bros. themes Source code:\n GitHub: https://github.com/tsukisan/Arduino/blob/master/WiiClassicSoundboard/WiiClassicSoundboard.ino Code from GitHub: https://raw.githubusercontent.com/tsukisan/Arduino/master/WiiClassicSoundboard/WiiClassicSoundboard.ino Cache version here: WiiClassicSoundboard - Super Mario Bros. themes  Modify the code by adding the \u0026ldquo;Arduino tone and delay functions overrides\u0026rdquo; to the code. Once done, the code should be looking like this:\n1#include \u0026#34;Notes.h\u0026#34; 2#include \u0026#34;Wire.h\u0026#34;3#include \u0026#34;WiiClassic.h\u0026#34;4 5WiiClassic wiiClassy = WiiClassic(); 6 7//silence all analogWrite calls 8#define analogWrite dummyAnalogWrite 9void dummyAnalogWrite(int pin, int value) 10{ 11} 12 13//output function calls to serial port 14void serialTone(byte pin, uint16_t frequency, uint32_t duration) { 15 Serial.print(\u0026#34;tone(\u0026#34;); 16 Serial.print(pin); 17 Serial.print(\u0026#34;,\u0026#34;); 18 Serial.print(frequency); 19 Serial.print(\u0026#34;,\u0026#34;); 20 Serial.print(duration); 21 Serial.println(\u0026#34;);\u0026#34;); 22} 23 24void serialNoTone(byte pin) { 25 Serial.print(\u0026#34;noTone(\u0026#34;); 26 Serial.print(pin); 27 Serial.println(\u0026#34;);\u0026#34;); 28} 29 30void serialDelay(uint32_t duration) { 31 Serial.print(\u0026#34;delay(\u0026#34;); 32 Serial.print(duration); 33 Serial.println(\u0026#34;);\u0026#34;); 34} 35 36#define tone serialTone 37#define delay serialDelay 38#define noTone serialNoTone 39 40 41const int speakerPin = 12; // Define the pin used for the speaker 42 // Format for array: {number of notes, note to play, durration, note to play, durration, ... 43const int theme[] = {11, // Array for Theme song 44 NOTE_E4, 8, NOTE_E4, 8, NOTE_H, 8, NOTE_E4, 8, NOTE_H, 8, NOTE_C4, 8, NOTE_E4, 8, NOTE_H, 8, NOTE_G4, 8, NOTE_H, 3, NOTE_G3, 8}; 45const int life[] = {6, // Array for 1-up sound effect 46 NOTE_E5, 10, NOTE_G5, 10, NOTE_E6, 10, NOTE_C6, 10, NOTE_D6, 10, NOTE_G6, 10}; 47const int flagpole[] = {27, // Array for Flag pole sound effect \u0026amp; song 48 NOTE_G2, 10, NOTE_C3, 10, NOTE_E3, 10, NOTE_G3, 10, NOTE_C4, 10, NOTE_E4, 10, NOTE_G4, 3, NOTE_E4, 3, NOTE_GS2, 10, NOTE_C3, 10, 49 NOTE_DS3, 10, NOTE_GS3, 10, NOTE_C4, 10, NOTE_DS4, 10, NOTE_GS4, 3, NOTE_DS4, 3, NOTE_AS2, 10, NOTE_D3, 10, NOTE_F3, 10, 50 NOTE_AS3, 10, NOTE_D4, 10, NOTE_F4, 10, NOTE_AS4, 3, NOTE_B4, 10, NOTE_B4, 10, NOTE_B4, 10, NOTE_C5, 2}; 51const int death[] = {17, // Array for Death sound effect \u0026amp; song 52 NOTE_C4, 32, NOTE_CS4, 32, NOTE_D4, 16, NOTE_H, 4, NOTE_H, 2, NOTE_B3, 8, NOTE_F4, 8, NOTE_H, 8, NOTE_F4, 8, NOTE_F4, 6, 53 NOTE_E4, 6, NOTE_D4, 6, NOTE_C4, 8, NOTE_E3, 8, NOTE_H, 8, NOTE_E3, 8, NOTE_C3, 8}; 54const int gameover[] = {15, // Array for Game over song 55 NOTE_C4, 8, NOTE_H, 8, NOTE_H, 8, NOTE_G3, 8, NOTE_H, 4, NOTE_E3, 4, NOTE_A3, 6, NOTE_B3, 6, NOTE_A3, 6, NOTE_GS3, 6, NOTE_AS3, 6, 56 NOTE_GS3, 6, NOTE_G3, 8, NOTE_F3, 8, NOTE_G3, 4}; 57 58void setup() { 59 Wire.begin(); // Begin wire connection 60 Serial.begin(9600); // Begin Serial on 9600 baud 61 wiiClassy.begin(); // Initialize the Wii Classic controller 62 wiiClassy.update(); // Gather data from the controller for the first time as this isually bogus 63 Serial.println(\u0026#34;Mario Wii Classic Soundboard initializtion complete\u0026#34;); // Print basic button mapping for reference 64 Serial.println(\u0026#34;---------------------------------------------------\u0026#34;); 65 Serial.println(\u0026#34;Button Mapping:\u0026#34;); 66 Serial.println(\u0026#34;Start: Theme song\u0026#34;); 67 Serial.println(\u0026#34;A: 1-up sound effect\u0026#34;); 68 Serial.println(\u0026#34;B: Flag pole sound effect \u0026amp; song\u0026#34;); 69 Serial.println(\u0026#34;X: Death sound effect \u0026amp; song\u0026#34;); 70 Serial.println(\u0026#34;Y: Game over song\u0026#34;); 71 Serial.println(\u0026#34;Home: Re-display this menu\u0026#34;); 72 Serial.println(\u0026#34;---------------------------------------------------\u0026#34;); 73} 74 75void loop() { 76 wiiClassy.update(); // Poke the controller for status 77 if (wiiClassy.leftShoulderPressed()) { // If the Left shoulder button is fully depressed: 78 79 } else if (wiiClassy.rightShoulderPressed()) { // If the Right shoulder button is fully depressed: 80 81 } else if (wiiClassy.lzPressed()) { // If the LZ button is pressed 82 83 } else if (wiiClassy.rzPressed()) { // If the RZ button is pressed 84 85 } else if (wiiClassy.selectPressed()) { // If the Select button is pressed 86 87 } else if (wiiClassy.homePressed()) { // If the Home button is pressed 88 Serial.println(\u0026#34;Button Mapping:\u0026#34;); // Print basic button mapping for reference 89 Serial.println(\u0026#34;Start: Theme song\u0026#34;); 90 Serial.println(\u0026#34;A: 1-up sound effect\u0026#34;); 91 Serial.println(\u0026#34;B: Flag pole sound effect \u0026amp; song\u0026#34;); 92 Serial.println(\u0026#34;X: Death sound effect \u0026amp; song\u0026#34;); 93 Serial.println(\u0026#34;Y: Game over song\u0026#34;); 94 Serial.println(\u0026#34;Home: Re-display this menu\u0026#34;); 95 delay(500); // Wait .5 sec to prevent repeat of printing 96 Serial.println(\u0026#34;---------------------------------------------------\u0026#34;); 97 } else if (wiiClassy.startPressed()) { // If the Start button is pressed 98 Serial.println(\u0026#34;Start button pressed\u0026#34;); // Print button pressed 99 Serial.println(\u0026#34;Begin playing Theme song\u0026#34;); // Print begin of melody 100 for (int thisNote = 1; thisNote \u0026lt; (theme[0] * 2 + 1); thisNote = thisNote + 2) { // Run through the notes one at a time 101 tone(speakerPin, theme[thisNote], (1000 / theme[thisNote + 1)); // Play the single note 102 delay((1000 / theme[thisNote + 1) * 1.30); // Delay for the specified time 103 noTone(speakerPin); // Silence the note that was playing 104 } 105 Serial.println(\u0026#34;Theme song complete\u0026#34;); // Print that the song is complete 106 Serial.println(\u0026#34;---------------------------------------------------\u0026#34;); 107 } else if (wiiClassy.aPressed()) { // If the A button is pressed 108 Serial.println(\u0026#34;A button pressed\u0026#34;); // Print button pressed 109 Serial.println(\u0026#34;Begin playing 1-up sound effect\u0026#34;); // Print begin of melody 110 for (int thisNote = 1; thisNote \u0026lt; (life[0] * 2 + 1); thisNote = thisNote + 2) { // Run through the notes one at a time 111 tone(speakerPin, life[thisNote], (1000/life[thisNote + 1])); // Play the single note 112 delay((1000/life[thisNote + 1]) * 1.30); // Delay for the specified time 113 noTone(speakerPin); // Silence the note that was playing 114 } 115 Serial.println(\u0026#34;1-up sound effect complete\u0026#34;); // Print that the song is complete 116 Serial.println(\u0026#34;---------------------------------------------------\u0026#34;); 117 } else if (wiiClassy.bPressed()) { // If the B button is pressed 118 Serial.println(\u0026#34;B button pressed\u0026#34;); // Print button pressed 119 Serial.println(\u0026#34;Begin playing Flag pole sound effect \u0026amp; song\u0026#34;); // Print begin of melody 120 for (int thisNote = 1; thisNote \u0026lt; (flagpole[0] * 2 + 1); thisNote = thisNote + 2) { // Run through the notes one at a time 121 tone(speakerPin, flagpole[thisNote], (1000/flagpole[thisNote + 1]));// Play the single note 122 delay((1000/flagpole[thisNote + 1]) * 1.30); // Delay for the specified time 123 noTone(speakerPin); // Silence the note that was playing 124 } 125 Serial.println(\u0026#34;Flag pole sound effect \u0026amp; song complete\u0026#34;); // Print that the song is complete 126 Serial.println(\u0026#34;---------------------------------------------------\u0026#34;); 127 } else if (wiiClassy.xPressed()) { // If the X button is pressed 128 Serial.println(\u0026#34;X button pressed\u0026#34;); // Print button pressed 129 Serial.println(\u0026#34;Begin playing Death sound effect \u0026amp; song\u0026#34;); // Print begin of melody 130 for (int thisNote = 1; thisNote \u0026lt; (death[0] * 2 + 1); thisNote = thisNote + 2) { // Run through the notes one at a time 131 tone(speakerPin, death[thisNote], (1000/death[thisNote + 1])); // Play the single note 132 delay((1000/death[thisNote + 1]) * 1.30); // Delay for the specified time 133 noTone(speakerPin); // Silence the note that was playing 134 } 135 Serial.println(\u0026#34;Death sound effect \u0026amp; song complete\u0026#34;); // Print that the song is complete 136 Serial.println(\u0026#34;---------------------------------------------------\u0026#34;); 137 } else if (wiiClassy.yPressed()) { // If the Y button is pressed 138 Serial.println(\u0026#34;Y button pressed\u0026#34;); // Print button pressed 139 Serial.println(\u0026#34;Begin playing Game over song\u0026#34;); // Print begin of melody 140 for (int thisNote = 1; thisNote \u0026lt; (gameover[0] * 2 + 1); thisNote = thisNote + 2) { // Run through the notes one at a time 141 tone(speakerPin, gameover[thisNote], (1000/gameover[thisNote + 1]));// Play the single note 142 delay((1000/gameover[thisNote + 1]) * 1.30); // Delay for the specified time 143 noTone(speakerPin); // Silence the note that was playing 144 } 145 Serial.println(\u0026#34;Game over song complete\u0026#34;); // Print that the song is complete 146 Serial.println(\u0026#34;---------------------------------------------------\u0026#34;); 147 } 148 delay(1); // Delay .01 sec to not overload the controller 149}  which result in the following data outputted on the serial port:\n1Begin playing Theme song 2tone(12,330,125); 3delay(162); 4noTone(12); 5tone(12,330,125); 6delay(162); 7noTone(12); 8tone(12,0,125); 9delay(162); 10noTone(12); 11tone(12,330,125); 12delay(162); 13noTone(12); 14tone(12,0,125); 15delay(162); 16noTone(12); 17tone(12,262,125); 18delay(162); 19noTone(12); 20tone(12,330,125); 21delay(162); 22noTone(12); 23tone(12,0,125); 24delay(162); 25noTone(12); 26tone(12,392,125); 27delay(162); 28noTone(12); 29tone(12,0,333); 30delay(432); 31noTone(12); 32tone(12,196,125); 33delay(162); 34noTone(12); 35Theme song complete 36--------------------------------------------------- 37Begin playing 1-up sound effect 38tone(12,659,100); 39delay(130); 40noTone(12); 41tone(12,784,100); 42delay(130); 43noTone(12); 44tone(12,1319,100); 45delay(130); 46noTone(12); 47tone(12,1047,100); 48delay(130); 49noTone(12); 50tone(12,1175,100); 51delay(130); 52noTone(12); 53tone(12,1568,100); 54delay(130); 55noTone(12); 561-up sound effect complete 57--------------------------------------------------- 58Begin playing Flag pole sound effect \u0026amp; song 59tone(12,98,100); 60delay(130); 61noTone(12); 62tone(12,131,100); 63delay(130); 64noTone(12); 65tone(12,165,100); 66delay(130); 67noTone(12); 68tone(12,196,100); 69delay(130); 70noTone(12); 71tone(12,262,100); 72delay(130); 73noTone(12); 74tone(12,330,100); 75delay(130); 76noTone(12); 77tone(12,392,333); 78delay(432); 79noTone(12); 80tone(12,330,333); 81delay(432); 82noTone(12); 83tone(12,104,100); 84delay(130); 85noTone(12); 86tone(12,131,100); 87delay(130); 88noTone(12); 89tone(12,156,100); 90delay(130); 91noTone(12); 92tone(12,208,100); 93delay(130); 94noTone(12); 95tone(12,262,100); 96delay(130); 97noTone(12); 98tone(12,311,100); 99delay(130); 100noTone(12); 101tone(12,415,333); 102delay(432); 103noTone(12); 104tone(12,311,333); 105delay(432); 106noTone(12); 107tone(12,117,100); 108delay(130); 109noTone(12); 110tone(12,147,100); 111delay(130); 112noTone(12); 113tone(12,175,100); 114delay(130); 115noTone(12); 116tone(12,233,100); 117delay(130); 118noTone(12); 119tone(12,294,100); 120delay(130); 121noTone(12); 122tone(12,349,100); 123delay(130); 124noTone(12); 125tone(12,466,333); 126delay(432); 127noTone(12); 128tone(12,494,100); 129delay(130); 130noTone(12); 131tone(12,494,100); 132delay(130); 133noTone(12); 134tone(12,494,100); 135delay(130); 136noTone(12); 137tone(12,523,500); 138delay(650); 139noTone(12); 140Flag pole sound effect \u0026amp; song complete 141--------------------------------------------------- 142Begin playing Death sound effect \u0026amp; song 143tone(12,262,31); 144delay(40); 145noTone(12); 146tone(12,277,31); 147delay(40); 148noTone(12); 149tone(12,294,62); 150delay(80); 151noTone(12); 152tone(12,0,250); 153delay(325); 154noTone(12); 155tone(12,0,500); 156delay(650); 157noTone(12); 158tone(12,247,125); 159delay(162); 160noTone(12); 161tone(12,349,125); 162delay(162); 163noTone(12); 164tone(12,0,125); 165delay(162); 166noTone(12); 167tone(12,349,125); 168delay(162); 169noTone(12); 170tone(12,349,166); 171delay(215); 172noTone(12); 173tone(12,330,166); 174delay(215); 175noTone(12); 176tone(12,294,166); 177delay(215); 178noTone(12); 179tone(12,262,125); 180delay(162); 181noTone(12); 182tone(12,165,125); 183delay(162); 184noTone(12); 185tone(12,0,125); 186delay(162); 187noTone(12); 188tone(12,165,125); 189delay(162); 190noTone(12); 191tone(12,131,125); 192delay(162); 193noTone(12); 194Death sound effect \u0026amp; song complete 195--------------------------------------------------- 196Begin playing Game over song 197tone(12,262,125); 198delay(162); 199noTone(12); 200tone(12,0,125); 201delay(162); 202noTone(12); 203tone(12,0,125); 204delay(162); 205noTone(12); 206tone(12,196,125); 207delay(162); 208noTone(12); 209tone(12,0,250); 210delay(325); 211noTone(12); 212tone(12,165,250); 213delay(325); 214noTone(12); 215tone(12,220,166); 216delay(215); 217noTone(12); 218tone(12,247,166); 219delay(215); 220noTone(12); 221tone(12,220,166); 222delay(215); 223noTone(12); 224tone(12,208,166); 225delay(215); 226noTone(12); 227tone(12,233,166); 228delay(215); 229noTone(12); 230tone(12,208,166); 231delay(215); 232noTone(12); 233tone(12,196,125); 234delay(162); 235noTone(12); 236tone(12,175,125); 237delay(162); 238noTone(12); 239tone(12,196,250); 240delay(325); 241noTone(12); 242Game over song complete 243---------------------------------------------------  Note that output contains the following function calls: tone(12,0,something);. Unfortunately, the libRtttl does not properly identify these lines as \u0026ldquo;silence pin 12\u0026rdquo; but they can safely be removed from the output without any issue.\rUsing libRtttl gui, the above code can be converted to the following RTTTL melodies:\nSettings: force default, enable tone() octave offsetting\rSuper Mario Bros. themes RTTTL:\ntheme:d=8,o=4,b=355:e.5,32p.,e.5,32p.,4p,e.5,32p.,4p,c.5,32p.,e.5,32p.,4p,g.5,32p.,2p,g.,32p.\rlife:d=8,o=4,b=450:e.5,32p.,g.5,32p.,e.6,32p.,c.6,32p.,d.6,32p.,g.6,32p.\rflagpole:d=8,o=4,b=450:f#.,32p.,c.5,32p.,e.5,32p.,g.5,32p.,c.6,32p.,e.6,32p.,2g6,p.,2e6,p.,g#.,32p.,c.5,32p.,d#.5,32p.,g#.5,32p.,c.6,32p.,d#.6,32p.,2g#6,p.,2d#6,p.,a#.,32p.,d.5,32p.,f.5,32p.,a#.5,32p.,d.6,32p.,f.6,32p.,2a#6,p.,b.6,32p.,b.6,32p.,b.6,32p.,1c7,4p\rdeath:d=32,o=4,b=355:c.5,p,c#.5,p,16d.5,p,2p,1p,8b.,p.,8f.5,p.,4p,8f.5,p.,4f5,16p,4e5,16p,4d5,16p,8c.5,p.,8e.,p.,4p,8e.,p.,8c.,p.\rgameover:d=4,o=4,b=355:8c.5,32p.,p,p,8g.,32p.,2p,e.,8p,a,16p,b,16p,a,16p,g#,16p,a#,16p,g#,16p,8g.,32p.,8f.,32p.,g.,8p\ror the following (by enabling unofficial BPM values) which help have accurate delays between notes:\ntheme: (identical)\rlife: (identical)\rflagpole: (identical)\rdeath:d=16,o=4,b=706:c.5,32p,c#.5,32p,8d.5,32p.,1p,1p.,4b.,p.,4f.5,p.,2p,4f.5,p.,2f5,8p,2e5,8p,2d5,8p,4c.5,p.,4e.,p.,2p,4e.,p.,4c.,p.\rgameover: (identical)\r",
    "ref": "/how-to-convert-arduino-code-to-actual-rtttl-melodies-using-librtttl-and-anyrtttl/"
  },{
    "title": "Comment afficher un exemple de toutes les polices dans Microsoft Word",
    "date": "",
    "description": "",
    "body": "Introduction À chaque fois que je travail en graphisme et que je dois ajouter du texte à une image, je me retrouve toujours avec le même problème: \u0026ldquo;Comment faire pour identifier rapidement la meilleure police pour mon affiche ?\u0026rdquo;\nJe crois maintenant avoir finalement trouver la solution à ce problème.\nVoici un script pour Microsoft Word qui permet de générer n\u0026rsquo;importe quelle exemple de texte avec toutes les polices de votre ordinateur.\nComment ça fonctionne ? Il suffit d\u0026rsquo;ouvrir Microsoft Word et d\u0026rsquo;exécuter le script téléchargeable. Celui-ci produira un document d\u0026rsquo;environ 65 pages avec votre exemple de texte dans toutes les polices disponibles.\nFonctionnalités La liste suivante décrit les fonctionnalités du script:\n Détecte toutes les polices installées du système. Donne un exemple de tous les styles pour chacune des polices soit: Normal, Italique, Gras et Gras Italique. Supporte vos propre exemples de texte. Si omis, le pangramme \u0026ldquo;The quick brown fox jumps over the lazy dog\u0026rdquo; est utilisé, soit l\u0026rsquo;équivalent anglophone de \u0026ldquo;Voix ambiguë d\u0026rsquo;un cœur qui, au zéphyr, préfère les jattes de kiwis\u0026rdquo;.  Limitations Le script a quelques limitations. Celles-ci sont plus bas:\nPossibilité de doublons Certaines police ne sont pas disponibles sous certain style. Par exemple, la police Wingdings n\u0026rsquo;offre pas de style Gras (bien que le style Italique soit disponible).\nMalheureusement, le script ne permet pas de détecter les styles qui ne sont pas disponibles et affichera donc plusieurs fois le même résultats.\nInstallation Le script peut-être utilisé de deux façons. Les sections suivantes expliquent chacune d\u0026rsquo;elle.\nTélécharger le script Télécharger le script sur votre ordinateur en utilisant le lien suivant\n[ MsWordListInstalledFont.bas](http://www.end2endzone.com/download/2339/ \u0026quot;Version 1.0\u0026quot;).\r Procédez avec les étapes suivantes pour installer le module téléchargé:\n Ouvrir Microsoft Word. Naviguer au menu Affichage du ruban. Cliquer sur le bouton Macros pour ouvrir l\u0026rsquo;éditeur de macro Microsoft Visual Basic.\n Entrer un nom de macro bidon. Par exemple \u0026lsquo;police\u0026rsquo;. Cliquer sur le bouton Créer. Dans la fenêtre Projet, repérer les deux noeuds principaux soient Normal ou Project (Document1). Pour installer le script définitivement sur l\u0026rsquo;ordinateur, cliquer avec le bouton droit de la souris sur le noeud Normal.\nSinon, pour installer le script uniquement dans ce fichier Word (*.docx), cliquer sur le noeud Project (Document1). Sélectionner l\u0026rsquo;option Importer un fichier\u0026hellip; Naviguer jusqu\u0026rsquo;à votre fichier téléchargé, sélectionnez-le et cliquer sur le bouton Ouvrir.  \rUn nouveau noeud nommé _**Modules**_ sera créer. Sous **_Modules_**, vous pourrez apercevoir le nouveau module:\u0026nbsp;_**ListInstalledFont**_. \r[![ListInstalledFonts - Module installé sous Normal](http://www.end2endzone.com/wp-content/uploads/2016/12/ListInstalledFonts-Module-installé-sous-Normal.jpg)](http://www.end2endzone.com/wp-content/uploads/2016/12/ListInstalledFonts-Module-installé-sous-Normal.jpg)\r \u0026lt;p id=\u0026quot;caption-attachment-2355\u0026quot; class=\u0026quot;wp-caption-text\u0026quot;\u0026gt;\rListInstalledFonts - Module installé sous Normal\r\u0026lt;/p\u0026gt;\r\u0026lt;/div\u0026gt;\r  * Cliquer sur le l'icône de sauvegarde (\u0026amp;nbsp;[![microsoft-word-save-icon](http://www.end2endzone.com/wp-content/uploads/2016/12/Microsoft-Word-Save-icon.jpg)](http://www.end2endzone.com/wp-content/uploads/2016/12/Microsoft-Word-Save-icon.jpg)\u0026amp;nbsp;)\u0026amp;nbsp;pour sauvegarder le nouveau module.\r* Fermer l'éditeur de macro Microsoft Visual Basic.\u0026lt;/ol\u0026gt; Le module est maintenant installé sur le système.\r\u0026lt;h2\u0026gt;\rCopier coller le script\r\u0026lt;/h2\u0026gt;\rCertain fureteur ou antivirus ne permettent pas le téléchargement de module Microsoft Word (*.bas). L'option de téléchargement du module n'est donc pas possible. Dans ce cas, l'option copier-coller doit être utilisé.\rPour ce faire, copier le code suivant dans le presse-papier :\r1Attribute VB_Name = \u0026#34;ListInstalledFont\u0026#34; 2Option Explicit 3 4Public Sub SetupColumnsPerPage(numColumns As Integer) 5 \u0026#39;Define numColumns columns per page 6 With Selection.PageSetup.TextColumns 7 .SetCount numColumns:=numColumns 8 .EvenlySpaced = True 9 .LineBetween = False 10 End With 11End Sub 12 13Public Sub ClearDocumentContent() 14 \u0026#39;Clear the current document 15 Selection.WholeStory 16 Selection.Delete Unit:=wdCharacter, Count:=1 17End Sub 18 19Public Sub SetupThinMargin() 20 With Selection.PageSetup 21 .LineNumbering.Active = False 22 .Orientation = wdOrientPortrait 23 .TopMargin = CentimetersToPoints(1.27) 24 .BottomMargin = CentimetersToPoints(1.27) 25 .LeftMargin = CentimetersToPoints(1.27) 26 .RightMargin = CentimetersToPoints(1.27) 27 .Gutter = CentimetersToPoints(0) 28 .HeaderDistance = CentimetersToPoints(1.25) 29 .FooterDistance = CentimetersToPoints(1.25) 30 .PageWidth = CentimetersToPoints(21.59) 31 .PageHeight = CentimetersToPoints(27.94) 32 .FirstPageTray = wdPrinterDefaultBin 33 .OtherPagesTray = wdPrinterDefaultBin 34 .SectionStart = wdSectionNewPage 35 .OddAndEvenPagesHeaderFooter = False 36 .DifferentFirstPageHeaderFooter = False 37 .VerticalAlignment = wdAlignVerticalTop 38 .SuppressEndnotes = False 39 .MirrorMargins = False 40 .TwoPagesOnOne = False 41 .BookFoldPrinting = False 42 .BookFoldRevPrinting = False 43 .BookFoldPrintingSheets = 1 44 .GutterPos = wdGutterPosLeft 45 End With 46End Sub 47 48Public Sub AddFontSample(fontIndex As Integer, fontName As String, text As String, boldFlag As Boolean, italicFlag As Boolean) 49 With Selection 50 \u0026#39;Show test string with selected font 51 .Font.Name = fontName 52 .Font.Size = 16 53 .Font.bold = boldFlag 54 .Font.italic = italicFlag 55 .Font.Underline = wdUnderlineNone 56 .TypeText text \u0026amp; Chr(11) 57 58 Dim boldFontName As String 59 Dim italicFontName As String 60 If (boldFlag = True) Then 61 boldFontName = \u0026#34;, Bold\u0026#34; 62 End If 63 If (italicFlag = True) Then 64 italicFontName = \u0026#34;, Italic\u0026#34; 65 End If 66 67 \u0026#39;Show actual font name in document 68 .Font.Name = \u0026#34;Times New Roman\u0026#34; 69 .Font.Size = 9 70 .Font.bold = False 71 .Font.italic = False 72 .Font.Underline = wdUnderlineSingle 73 .TypeText \u0026#34;(\u0026#34; \u0026amp; fontName \u0026amp; boldFontName \u0026amp; italicFontName \u0026amp; \u0026#34;)\u0026#34; 74 75 .InsertParagraphAfter 76 .MoveDown Unit:=wdParagraph 77 End With 78 79End Sub 80 81Public Sub ListInstalledFont() 82 ClearDocumentContent 83 SetupThinMargin 84 SetupColumnsPerPage 2 85 86 Application.ScreenUpdating = False 87 88 Dim sampleText As String 89 sampleText = InputBox(\u0026#34;Enter some sample text\u0026#34;) 90 If sampleText = \u0026#34;\u0026#34; Then sampleText = \u0026#34;The quick brown fox jumps over the lazy dog\u0026#34; 91 92 \u0026#39;For each installed font 93 Dim fontIndex As Integer 94 For fontIndex = 1 To FontNames.Count 95 Dim currentFontName As String 96 currentFontName = FontNames(fontIndex) 97 98 \u0026#39;Create sample text 99 AddFontSample fontIndex, currentFontName, sampleText, False, False 100 AddFontSample fontIndex, currentFontName, sampleText, True, False 101 AddFontSample fontIndex, currentFontName, sampleText, True, True 102 AddFontSample fontIndex, currentFontName, sampleText, False, True 103 Next 104 105 Application.ScreenUpdating = True 106End Sub \rEnsuite, suivez les étapes suivante:\r\u0026lt;ol\u0026gt;\r* Ouvrir _**Microsoft Word**_.\r* Naviguer au menu **_Affichage_** du **_ruban_**.\r* Cliquer sur le bouton _**Macros**_ pour ouvrir l'éditeur de macro Microsoft Visual Basic.\u0026lt;br /\u0026gt; [![](http://www.end2endzone.com/wp-content/uploads/2016/12/Microsoft-Word-Menu-Macros-du-Ruban.jpg)](http://www.end2endzone.com/wp-content/uploads/2016/12/Microsoft-Word-Menu-Macros-du-Ruban.jpg)\r* Entrer un nom de macro bidon. Par exemple '_police_'.\r* Cliquer sur le bouton Créer.\r* Dans la fenêtre Projet, repérer les deux noeuds principaux soient _**Normal**_ ou _**Project (Document1)**_.\r* Pour installer le script définitivement sur l'ordinateur, cliquer avec le bouton droit de la souris sur le noeud _**Normal**_.\u0026lt;br /\u0026gt; Sinon, pour installer le script **uniquement dans ce fichier Word** (*.docx), cliquer sur le noeud _**Project (Document1)**_.\r* Sélectionner l'option **_Insertion_**, puis **_Module_**.\r* Un nouveau module nommé **_Module1_** sera créé.\r* Dans la fenêtre _**Propriété - Module1**_, repérer la propriété **_Name_** du module dont la valeur est _**Module1**_.\r* Changer la valeur de la propriété pour la valeur _**ListInstalledFonts**_.\r* Coller le code dans la section de droite de l'éditeur. Le contenu du script devrait s'afficher.\r* Cliquer sur le l'icône de sauvegarde (\u0026amp;nbsp;[![microsoft-word-save-icon](http://www.end2endzone.com/wp-content/uploads/2016/12/Microsoft-Word-Save-icon.jpg)](http://www.end2endzone.com/wp-content/uploads/2016/12/Microsoft-Word-Save-icon.jpg)\u0026amp;nbsp;)\u0026amp;nbsp;pour sauvegarder le nouveau module.\r* Fermer l'éditeur de macro Microsoft Visual Basic.\r\u0026lt;/ol\u0026gt;\rLe module est maintenant installé sur le système.\r\u0026lt;h1\u0026gt;\rExécuter le script\r\u0026lt;/h1\u0026gt;\rProcédez avec les étapes suivantes pour exécuter le module installé:\r\u0026lt;ol\u0026gt;\r* Ouvrir _**Microsoft Word**_.\r* Naviguer au menu _**Affichage**_ du _**ruban**_.\r* Cliquer sur le bouton _**Macros**_. L'éditeur de macro Microsoft Visual Basic s’ouvrira.\r\u0026lt;li\u0026gt;\rSélectionner la macro _**ListInstalledFonts**_. \u0026lt;p\u0026gt;\r\u0026lt;div id=\u0026quot;attachment_2357\u0026quot; style=\u0026quot;width: 560px\u0026quot; class=\u0026quot;wp-caption alignnone\u0026quot;\u0026gt;\r[![Éditeur de macro Microsoft Word - Macro ListInstalledFonts sélectionnée](http://www.end2endzone.com/wp-content/uploads/2016/12/Éditeur-de-macro-Microsoft-Word-Macro-ListInstalledFonts-sélectionnée.jpg)](http://www.end2endzone.com/wp-content/uploads/2016/12/Éditeur-de-macro-Microsoft-Word-Macro-ListInstalledFonts-sélectionnée.jpg)\r\u0026lt;p id=\u0026quot;caption-attachment-2357\u0026quot; class=\u0026quot;wp-caption-text\u0026quot;\u0026gt;\rÉditeur de macro Microsoft Word - Macro ListInstalledFonts sélectionnée\r\u0026lt;/p\u0026gt;\r\u0026lt;/div\u0026gt;\r   * Cliquer sur le bouton Exécuter pour lancer l'exécution du script.\r\u0026lt;li\u0026gt;\rLa fenêtre suivante s'ouvrira: \u0026lt;p\u0026gt;\r\u0026lt;div id=\u0026quot;attachment_2354\u0026quot; style=\u0026quot;width: 383px\u0026quot; class=\u0026quot;wp-caption alignnone\u0026quot;\u0026gt;\r[![ListInstalledFonts - Sélection d'un exemple de texte](http://www.end2endzone.com/wp-content/uploads/2016/12/ListInstalledFonts-Sélection-dun-exemple-de-texte.jpg)](http://www.end2endzone.com/wp-content/uploads/2016/12/ListInstalledFonts-Sélection-dun-exemple-de-texte.jpg)\r\u0026lt;p id=\u0026quot;caption-attachment-2354\u0026quot; class=\u0026quot;wp-caption-text\u0026quot;\u0026gt;\rListInstalledFonts - Sélection d'un exemple de texte\r\u0026lt;/p\u0026gt;\r\u0026lt;/div\u0026gt;\r   * Entrer un exemple de texte puis cliquer sur le bouton OK. Laissez le champ vide et cliquer sur le bouton OK pour utiliser le pangramme anglophone \u0026quot;_The quick brown fox jumps over the lazy dog_\u0026quot;.\r* Patientez environ 30 secondes pendant l'exécution du script.\u0026lt;/ol\u0026gt; Le document sera complété avec votre exemple de texte pour chacune des polices installées sur votre ordinateur.\r\u0026lt;h2\u0026gt;\rExemple\r\u0026lt;/h2\u0026gt;\rAprès l'exécution du script, vous obtiendrez un document complet:\r\u0026lt;p\u0026gt;\r\u0026lt;div id=\u0026quot;attachment_2350\u0026quot; style=\u0026quot;width: 863px\u0026quot; class=\u0026quot;wp-caption alignnone\u0026quot;\u0026gt;\r[![Exemple de d'affichage toutes les polices](http://www.end2endzone.com/wp-content/uploads/2016/12/Comment-affichier-une-liste-de-toutes-les-polices-dans-Microsoft-Word.jpg)](http://www.end2endzone.com/wp-content/uploads/2016/12/Comment-affichier-une-liste-de-toutes-les-polices-dans-Microsoft-Word.jpg)\r\u0026lt;p id=\u0026quot;caption-attachment-2350\u0026quot; class=\u0026quot;wp-caption-text\u0026quot;\u0026gt;\rExemple de d'affichage toutes les polices\r\u0026lt;/p\u0026gt;\r\u0026lt;/div\u0026gt;\r\u0026lt;/p\u0026gt;\r\u0026lt;h1\u0026gt;\rLicence\r\u0026lt;/h1\u0026gt;\rLe script est disponible sous la licence LGPL. Seule la version anglophone de la licence est disponible.\rThis library is free software; you can redistribute it and/or modify it under the terms of the GNU Lesser General Public License as published by the Free Software Foundation; either version 3.0 of the License, or (at your option) any later version.\rThis library is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License (LGPL-3.0) for more details.\rYou should have received a copy of the GNU Lesser General Public License along with this library; if not, write to the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA\r**DISCLAIMER:**\u0026lt;br /\u0026gt; This software is furnished \u0026quot;as is\u0026quot;, without technical support, and with no warranty, express or implied, as to its usefulness for any purpose.\r\u0026lt;h1\u0026gt;\rTéléchargement\r\u0026lt;/h1\u0026gt;\rVous pouvez télécharger le script en cliquant sur le lien de téléchargement suivant:\r\u0026lt;p\u0026gt;\r\u0026lt;p\u0026gt;\r[ Download \u0026quot;MsWordListInstalledFont.bas\u0026quot; MsWordListInstalledFont.bas - Downloaded 1068 times - 3 KB ](http://www.end2endzone.com/download/2339/)\r\u0026lt;/p\u0026gt;\r\u0026lt;/p\u0026gt;",
    "ref": "/comment-afficher-un-exemple-de-toutes-les-polices-dans-microsoft-word/"
  },{
    "title": "DIY lost plane alarm finder and 10 watts LED visual aids for easy orientation",
    "date": "",
    "description": "",
    "body": "Introduction The reason I started this project is because I recently had a bad experience flying a quadcopter too far from me until I was not able to distinguish if the quad was facing me or not. It does not require much distance before a quadcopter looks like a tiny black dot in the sky. Basically, I lost orientation of the quad and I had to land way too far from my takeoff location.\nI was in need of more tools (or more ways) to help myself when I will inevitably get into this situation again. The following project explains how I build a DIY solution to help a pilot know a quadcopter orientation when its far away from the point of view and easily locate the quadcopter in case of emergency landing.\nBackground story I have been flying planes for many years now and over time, I learned to increase my skills and I became a nice pilot. I am still new to the RC hobby and I got pulled into flying quadcopters.\nQuadcopters are not piloted the same way as planes. They look safer or easier to pilot since you can always slow down and hover if anything gets out of control.\nRecently, I had an interesting experience. I was flying my quad for around 3 months and I felt too much confident: I wanted to try doing flips. Coming from a plane world, I though that climbing to a safe altitude would be the best strategy in case something went wrong.\nI got carried away and I ended up to a much higher altitude and further away than I was used to. I tried to drop height and drive the quadcopter back to me but it was too late. The wind was so strong that it moved the quad further away and made the quadcopter swirl. I quickly lost orientation of the quad and had no way to bring it back.\nLuckily, a more experienced pilot help me get the quadcopter back to a safe landing zone which was 615 meters away from my takeoff location.\nIt took me 3 hours to locate the landing site and find the quad which was still intact!\nI learn multiple things this day:\n I was lacking experience and I need much more practice before attempting stupid aerobatics. Getting altitude for quadcopters is not as safe as for planes. It is always better to fly with someone more experienced than you are. I needed a way to know the orientation of the quad when it is over or away from me. A lost plane alarm buzzer would have helped me find the quadcopter much quicker. I was in need of a GPS module and a failsafe mode.  Project summary The DIY solution consist of adding two devices on the quadcopter each device for solving a specific issue.\n10 watts LED \n10 Watt LEDs\nThe first device is a 10 watts light-emitting diode (LED) mounted to the front of the quadcopter. This option adds to existing visual aids and help the pilot to develop his situation awareness. The front LED allows the pilot to know when the quadcopter is facing him and help the pilot recover in case of lost orientation.\nThis type of LED is quite bright and provides 900 to 1000 lumens of light which makes it a good candidate to be seen from far away.\nAs an example, here is a picture of the LED mounted to the quadcopter seen from 333 meters away.\n\nQuadcopter 10 watts LED seen from 333 meters away\nTo help locate the LED location, here is the same point of view with the LED turned off:\n\nQuadcopter 10 watts LED OFF\nNote that both images are cropped version of the original image which have a much bigger field-of-view.\rLost plane alarm finder \nPiezoelectric Buzzer - Audible Alarm Sound Buzzers\nThe second device is a 95 decibel (dB) piezoelectric speaker. This allows the quadcopter to be easily found in case of a crash or an emergency landing. For example, if one enter Failsafe mode, the quadcopter can land immediately (or Return To Home but that is out of scope) and there is a good chance that it will be far from your takeoff location. Tracking a beep-beep-beep sound is much more easier than estimating the landing location 1 km away.\nThere are already tons of existing options for a search alarm buzzer on the market, each with their own pros and cons. Some buzzer must be connected to a dedicated channel and make sound when flipping a switch on your controller. Others must be connected in series with the throttle channel and rings if the throttle signal has not changed for more than 60 seconds.\nHowever, I prefer the DIY way since it gives more personal satisfaction and the selected option is always the preferred one for my personal needs.\nWith the DIY route, the piezo buzzer is much louder reaching peaks of 96 dB instead of 60-70 dB since the piezo is powered by the LiPo battery (in my case a 3S 11.1 volts) instead of a poor 5 volts. The sound volume for piezo buzzer is proportional to the voltage used to power the device meaning that a 4S LiPo battery (14.8v) would make it louder than a 3S LiPo.\nMicrocontroller \nArduino Nano v3\nWhat is different about this project is that it includes an arduino nano v3, which is a microcontroller. The arduino act as the brain between the pilot and the on-board devices. It allows control of both the LED and the piezo buzzer by reading the quadcopter\u0026rsquo;s receiver signal and forwarding the pilot commands to each device.\nThis configuration offers much more possibilities. The most obvious is that each device is controlled by the microcontroller instead of a direct channel. This allows advanced logic to be used to implement more features.\nAs an example, I don\u0026rsquo;t want the LED always turned ON and certainly don\u0026rsquo;t need to have the alarm buzzing during the flight when everything is going well. So I had to come up with a way to control both devices with the transmitter.\nThe big innovation about this project is that both devices are controlled by the quadcopter transmitter using only a single channel.\nAs bonus points, with the help of the arduino, the piezo buzzer can be used as a \u0026ldquo;cellphone ringtone player\u0026rdquo; to ring the geekiest melodies\u0026hellip;\nProject data Components and Supplies All the hardware components required for this project are available for purchase on eBay.\nNote that this project assumes that the arduino will be connected to a Remote Controlled (RC) 6-channels Receiver. This part for the project is then not listed as a \u0026lsquo;required\u0026rsquo; component.\rThe material for this project is as follows:\n   Image Description Qty      Arduino Nano v3 1    Piezoelectric Buzzer 1    10 Watt LEDs 1    MR16 Constant Current LED Driver (12v 10w) 1    N-Channel TO-220AB Power Mosfet\n(IRF630N, 200V, 9.3A, 0.30-Ohm) 2    20cm Male Servo Extension Lead Wire Cable 1    Female JST battery connector 1    Single Side 5x7cm Prototyping Stripboard 1    10k Ohm Resistor 2    Wires 1    Wrapping foam 1    Wood BBQ Skewers 2    CCPM-Servo-Tester 1    MR16 Constant Current LED Driver \nMR16 12v 10w LED Driver\nThe MR16 Constant Current LED Driver is used to drive the 10w LED. It can easily be found on eBay and light stores since the driver is used to power LED lamps which happens to use 10w LEDs.\nThe controller is not cheap but looks like the best logical choice. On a quadcopter, every grams counts and this driver is very light and it is the smallest form factor circuit that I could find.\nI am not that much concerned about power efficiency of the driver since the project is to be mounted to a quadcopter. The small 10w LED is not significant when compared to the 4 brushless motors.\nN-Channel Power Mosfet \nIRF630N N-Channel 200V, 9.3A, 0.30-Ohm TO-220AB Power Mosfet\nMy original design only required a single mosfet and was used as a switch to trigger the MR16 LED driver and a simple NPN Transistor (like the 2N2222A) which was also used as a switch to trigger the piezo buzzer. This setup was working fine on the arduino development board which provides 5 volts. However, once I connected the board to my 3S LiPo battery, which is 11.1 volts, the gate of the 2N2222A started leaking from collector to emitter without a signal sent to the base (in other words, the switch was always closed). The piezo buzzer started ringing without me understanding why.\nPlease note that your wife may get mad at you if you let the piezo buzzer ring for too long. Better use higher rated transistor!\rI used the IRF630N mosfet for driving both the LED and the piezo buzzer. The mosfet is rated for much higher current and voltage (200V, 9.3A) for this scenario but it is relatively cheap and I had plenty of those at home.\nPayload I didn\u0026rsquo;t take the time to calculate the weight of each component individually. Anyway that would not be really helpful since I do not expect anyone to actually try to optimize the circuit by replacing some components by lightweight version.\nThe total weight of the package is 37.5 grams. This is calculated using a high precision scale and it includes everything that is required for using the controller in the field. In other words, it also includes the wrapping foam the BBQ sticks and wires.\nTotal cost of the project This project is really cheap and can be completed with less than 30$.\nHere is the detailed price of each items:\n   Item Link Quantity Total     Arduino Nano v3 eBay 1 $3.17   Piezoelectric Buzzer eBay 1 $1.30   10 Watt LED eBay 1 $1.00   MR16 Constant Current LED Driver eBay 1 $2.24   N-Channel TO-220AB Power Mosfet eBay 2 $3.521   Male Servo Extension Lead Wire Cable eBay 1 $1.00   Female JST battery connector eBay 1 $1.00   Single Side 5x7cm Prototyping Stripboard eBay 1 $4.562   10k Ohm Resistor eBay 2 $1.003   CCPM-Servo-Tester eBay 1 $1.61    Notes:\n Bying 5 pieces is cheaper than buying 2 individual pieces. Lowest price is for 2 pieces. For a pack of 50 pieces.  Total cost: $20.40\nNote that cost of usual items such as solder paste, soldering iron, multimeter and base material like wrapping foam is not included in the cost of the project.\rPreparation time The whole project can be completed in 5 to 8 hours. This is actually a rough estimated time since I did not build a second controller for another quad that I had. The estimation assumes the following:\n You already have all required components. Most of the waiting about this project comes from the fact that all components are purchased from China and takes 4-5 weeks to arrive. However, once you have all materials, the project starts to build itself at a decent pace. You have basic soldering skills. The duration of this project may change depending on how much you are comfortable with a soldering iron. You are familiar with the arduino prototyping platform. This guide will not cover how to compile the code/libraries and upload it to the arduino. There are plenty of guides and tutorials on the internet that can help you on this matter.  To make this project a reality, I had to invest much more time. Actually, from beginning to the end, it took somewhere between 50 to 80 hours. I had to learn new skills like basic electronics, designing circuits, using Fritzing software and the arduino platform but most of the time was spent on documenting and debugging the code!(there are still improvements, see below).\nI decided to post this project so that others may benefit from my experience. The project can be used as a proof of concept, all issues that I encountered are already documented and the code for the project is released to the public.\nSchematics The following section shows the drawings and the schematics used by the controller.\nFritzing files \nFritzing - Open-Source Hardware Initiative Tool\nAll drawings and diagrams are build using Fritzing version 0.9.2b which is an open-source hardware initiative tool that allows developers to document their prototypes and share them with others. The application already features a huge parts library but there is no support for a Generic Remote Controlled (RC) 6-Channels Receiver and for the MR16 Constant Current LED Driver.\nThe additional parts which are required for rendering the project are available for download:\n MR16 Constant Current LED Driver.fzpz Generic 2.4Ghz RC 6ch Receiver (OCRA).fzpz 3S 3600mAh Lipo Battery.fzpz  The project files are also available for download. Click the following link to get the Fritzing project files for this project:\n DIY lost plane alarm finder and 10 watts LED visual aids for easy orientation.fzz  Circuit Diagram The following section shows the circuit diagram layout\n\nQuadcopter Controller Project - Schematics view\nBreadboard Layout The following section shows a breadboard layout view of the circuit.\n\nQuadcopter Controller Project - Breadboard view\nCode The following section defines the required libraries for compiling the main arduino sketch available below.\nExternal libraries The code on the arduino requires multiple external arduino libraries. The following list shows all required software libraries and their related use as part of this project:\n   Name Version Usage     SoftTimers 5 v1.1.219 Required for all computation and handling of the LED\u0026rsquo;s ON and OFF times.   RcReceiverSignal 8 v1.2.203 Required to read PWM signals sent\nfrom the RC Receiver.   AnyRtttl 7 v2.1 Required to play RTTTL melodies data.   PinChangeInt version 2402 RcReceiverSignal library has a dependency\nto PinChangeInt library.   eRCaGuy Timer2 Counter version 20140709\n(last updated\n9 July 2014) Required to have a micros() replacement function\nwhich has a 1µs resolution instead of 4µs.    Arduino sketch Here is the brain of the project. Source code!\nClick the following to download the example below:\n(download Quad Controller v1.0.240.ino)\n1// 2// QuadCtrl - Quadcopter Controller - v1.0 - 10/07/2016 3// Copyright (C) 2016 Antoine Beauchamp 4// The code \u0026amp; updates for the library can be found on http://end2endzone.com 5// 6// AUTHOR/LICENSE: 7// This library is free software; you can redistribute it and/or 8// modify it under the terms of the GNU Lesser General Public 9// License as published by the Free Software Foundation; either 10// version 3.0 of the License, or (at your option) any later version. 11// 12// This library is distributed in the hope that it will be useful, 13// but WITHOUT ANY WARRANTY; without even the implied warranty of 14// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU 15// Lesser General Public License (LGPL-3.0) for more details. 16// 17// You should have received a copy of the GNU Lesser General Public 18// License along with this library; if not, write to the Free Software 19// Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA 20// 21// DISCLAIMER: 22// This software is furnished \u0026#34;as is\u0026#34;, without technical support, and with no 23// warranty, express or implied, as to its usefulness for any purpose. 24// 25// PURPOSE: 26// The following code implements Buzzer \u0026amp; LED functionnalities to my 27// personnal quadcopter. 28// 29// The buzzer is activated to play RTTTL melodies played before takeoff 30// and after landing. The buzzer is also used to play a mayday distress 31// signal that can be used to recover the quadcopter after an unexpected 32// crash. 33// 34// The front-facing 10w LED is used to know the orientation of the quadcopter 35// from a far point of view. To prevent the LED from draining the battery, 36// the LED is flashing at specific rates. 37// The rates can be modulated from 40 positions varrying from always OFF 38// to always ON in a 2 second cycle. ie: a rate of 24/40 (60%) turns the 39// LED ON for 1200ms and OFF for 800ms. 40// 41// Both functionalities are activated through my SPEKTRUM DX9 42// transmitter using a rotary knob, a 2-position switch and a 3-position 43// switch sending a signal to my Orange R620X DSMX2 receiver. 44// 45// The receiver is connected to arduino pin 2 to read PWM signals sent 46// by the receiver. 47// 48// The code is indented to run on an arduino nano v3. 49// 50// HISTORY: 51// 10/07/2016 v1.0 - Initial release of QuadCtrl. 52// 53// --------------------------------------------------------------------------- 54 55 56 57/************************************************* 58* PinChangeInt code optimizations 59*************************************************/ 60//http://www.benripley.com/diy/arduino/three-ways-to-read-a-pwm-signal-with-arduino/ 61//https://github.com/GreyGnome/PinChangeInt/wiki/Usage 62//http://playground.arduino.cc/Learning/Pins 63//#define NO_PIN_STATE // to indicate that you don\u0026#39;t need the PCintPort::pinState 64#define NO_PIN_NUMBER // to indicate that you don\u0026#39;t need the PCintPort::arduinoPin 65#define PINMODE // defines PCintPort::pinMode which is 66#define NO_PORTC_PINCHANGES // only port D pinchanges (see: http://playground.arduino.cc/Learning/Pins) 67#define NO_PORTB_PINCHANGES // only port B pinchanges (see: http://playground.arduino.cc/Learning/Pins) 68 69//required libraries 70 71//Using SoftTimers v1.1.219 72//Required to calculate the LED\u0026#39;s ON and OFF times. 73//Available at http://www.end2endzone.com/softtimers-a-collection-of-software-timers-to-easily-compute-elapsed-time-since-an-event-occured/ 74#include \u0026lt;SoftTimers.h\u0026gt;75 76//Using RcReceiverSignal v1.2.203 77//Required to read PWM signals sent from the RC Receiver. 78#include \u0026lt;RcReceiverSignal.h\u0026gt;79 80//Using PinChangeInt version 2402 81//RcReceiverSignal library has a dependency to PinChangeInt library. 82#include \u0026lt;PinChangeInt.h\u0026gt;83 84//Using eRCaGuy_Timer2_Counter version 20140709 (last updated 9 July 2014) 85//Required to have a micros() replacement function which has a 86//1us resolution instead of 4usec. 87//For more information on this library, see the following: 88// http://electricrcaircraftguy.com/2014/02/Timer2Counter-more-precise-Arduino-micros-function.html 89// http://www.instructables.com/id/How-to-get-an-Arduino-micros-function-with-05us-pr/ 90#include \u0026lt;eRCaGuy_Timer2_Counter.h\u0026gt;91 92//Using AnyRtttl v2.1 - 06/05/2016 93//Required to play RTTTL data 94#include \u0026lt;anyrtttl.h\u0026gt;95#include \u0026lt;binrtttl.h\u0026gt;96#include \u0026lt;pitches.h\u0026gt;97 98//project\u0026#39;s constants 99#define RECEIVER_AUX1_IN_PIN 2 // we could choose any pin 100#define LED_DEBUG_OUT_PIN 13 101#define LED_OUT_PIN 9 102#define BUZZER_OUT_PIN 8 103#define LED_FREQUENCY_LENGTH 1000 //in ms 104#define ANALOG_VALUE_MIN 0 105#define ANALOG_VALUE_MAX 39 106#define ANALOG_VALUE_THRESHOLD 3 107#define DISABLE_RTTTL_PLAYBACK false 108 109//project\u0026#39;s switches 110//#define ENABLE_SERIAL_OUTPUT 111 112DECLARE_RECEIVER_SIGNAL(receiver_aux1_handler); 113SoftTimer onTimer; 114SoftTimer offTimer; 115SoftTimer melodyInhibit; //prevents to consecutive RTTTL melodies to play one after the other 116SoftTimer alarmTimer; 117uint16_t ledOnTime = 0; //ms 118uint16_t ledOffTime = LED_FREQUENCY_LENGTH; //ms 119bool ledOn = true; 120bool alarmOverride = false; //controlled by a 2-position switch 121uint8_t playMelody = false; //controlled by a 3-position switch 122 123inline int16_t clamp(const int16_t \u0026amp; iMin, const int16_t \u0026amp; iValue, const int16_t \u0026amp; iMax) { 124 if (iValue \u0026lt; iMin) 125 return iMin; 126 if (iValue \u0026gt; iMax) 127 return iMax; 128 return iValue; 129} 130 131/* 132* Desription: 133* Demultiplex the following from an RcReceiverSignal value: 134* - an analog knob value (which has a resolution of 40 steps, values from 0 to 39) 135* - a 2-position switch 136* - a 3-position switch 137* 138* Code sample from http://www.end2endzone.com/how-to-multiplex-rc-transmitter-switches-into-a-single-channel/#Decoding-2 139* 140* The following mixes must be used on a Spektrum DX9 to multiplex all switches into AUX1: 141* - RKnob \u0026gt; AX1, high=-74%, low= 0%, offset=-99% 142* - RKnob \u0026gt; AX1, high= 0%, low= 54%, offset=100% 143* - SwitchA \u0026gt; AX1, high= 0%, low=-69%, offset=100% 144* - SwitchB \u0026gt; AX1, high= 0%, low=-46%, offset=100% 145* 146*/ 147void demultiplexAnalog40_1x2Pos1x3Pos(const int16_t \u0026amp; iSignal, uint8_t \u0026amp; oAnalogA, bool \u0026amp; oSwitch2, uint8_t \u0026amp; oSwitch3) { 148 #define setSwitches(effectiveMin,signal,effectiveMax,a,b) oAnalogA=clamp(effectiveMin,signal,effectiveMax) - (effectiveMin); oSwitch2=a; oSwitch3=b; 149 if ( -150 \u0026lt;= iSignal \u0026amp;\u0026amp; iSignal \u0026lt;= -105 ) { setSwitches( -147 ,iSignal, -108, 0, 0 ) } 150 else if ( -104 \u0026lt;= iSignal \u0026amp;\u0026amp; iSignal \u0026lt;= -59 ) { setSwitches( -101 ,iSignal, -62, 0, 1 ) } 151 else if ( -58 \u0026lt;= iSignal \u0026amp;\u0026amp; iSignal \u0026lt;= -13 ) { setSwitches( -55 ,iSignal, -16, 0, 2 ) } 152 else if ( -12 \u0026lt;= iSignal \u0026amp;\u0026amp; iSignal \u0026lt;= 33 ) { setSwitches( -9 ,iSignal, 30, 1, 0 ) } 153 else if ( 34 \u0026lt;= iSignal \u0026amp;\u0026amp; iSignal \u0026lt;= 79 ) { setSwitches( 37 ,iSignal, 76, 1, 1 ) } 154 else if ( 80 \u0026lt;= iSignal \u0026amp;\u0026amp; iSignal \u0026lt;= 125 ) { setSwitches( 83 ,iSignal, 122, 1, 2 ) } 155 else 156 { 157 setSwitches( 0,0,0,0,0 ); 158 } 159 #undef setSwitches 160} 161 162/* 163void debugLED() { 164while (true) 165{ 166digitalWrite(LED_OUT_PIN, HIGH); 167digitalWrite(LED_DEBUG_OUT_PIN, HIGH); 168delay(1000); 169digitalWrite(LED_OUT_PIN, LOW); 170digitalWrite(LED_DEBUG_OUT_PIN, LOW); 171delay(1000); 172} 173} 174*/ 175 176#ifdef ENABLE_SERIAL_OUTPUT 177//pretty print buffer 178char ppBuffer[10]; 179 180char * prettyPrint(const char * format, const uint16_t \u0026amp; value) 181{ 182 sprintf(ppBuffer, format, value); 183 return ppBuffer; 184} 185char * prettyPrint(const char * format, const int16_t \u0026amp; value) 186{ 187 sprintf(ppBuffer, format, value); 188 return ppBuffer; 189} 190#endif 191 192/************************************************* 193* RTTTL Melodies 194*************************************************/ 195#define NUM_RTTTL_MELODY 14 196const char simpsons[] PROGMEM = \u0026#34;simpsons:d=4,o=5,b=160:c.6,e6,f#6,8a6,g.6,e6,c6,8a,8f#,8f#,8f#,2g,8p,8p,8f#,8f#,8f#,8g,a#.,8c6,8c6,8c6,c6\u0026#34;; 197const char arkanoid[] PROGMEM = \u0026#34;Arkanoid:d=4,o=5,b=140:8g6,16p,16g.6,2a#6,32p,8a6,8g6,8f6,8a6,2g6\u0026#34;; 198const char cocacola[] PROGMEM = \u0026#34;Coca-cola:d=4,o=5,b=125:8f#6,8f#6,8f#6,8f#6,g6,8f#6,e6,8e6,8a6,f#6,d6,2p\u0026#34;; 199const char pacman[] PROGMEM = \u0026#34;pacman:d=4,o=5,b=112:32b,32p,32b6,32p,32f#6,32p,32d#6,32p,32b6,32f#6,16p,16d#6,16p,32c6,32p,32c7,32p,32g6,32p,32e6,32p,32c7,32g6,16p,16e6,16p,32b,32p,32b6,32p,32f#6,32p,32d#6,32p,32b6,32f#6,16p,16d#6,16p,32d#6,32e6,32f6,32p,32f6,32f#6,32g6,32p,32g6,32g#6,32a6,32p,32b.6\u0026#34;; 200const char mario_short[] PROGMEM = \u0026#34;smb_short:d=16,o=5,b=180:e.,e.,p.,e.,p.,c.,e.,p.,g.,4p,g.4\u0026#34;; 201const char mario_death[] PROGMEM = \u0026#34;smbdeath:d=4,o=5,b=90:32c6,32c6,32c6,8p,16b,16f6,16p,16f6,16f.6,16e.6,16d6,16c6,16p,16e,16p,16c\u0026#34;; 202const char mario_flagpole[] PROGMEM = \u0026#34;smbflagpole:d=32,o=6,b=112:f#.4,c.5,e.5,g.5,c.,e.,8g,8e,g#.4,c.5,d#.5,g#.5,c.,d#.,8g#,8d#,a#.4,d.5,f.5,a#.5,d.,f.,8a#,b.,b.,b.,4c7\u0026#34;; 203const char mario_gameover[] PROGMEM = \u0026#34;smbgameover:d=8,o=4,b=180:16c.5,16p.,16p.,16g.,p.,e.,a,b,a,g#,a#,g#,16g.,16f.,g.\u0026#34;; 204const char mario_1up[] PROGMEM = \u0026#34;smb1up:d=16,o=7,b=180:e.6,g.6,e.,c.,d.,g.\u0026#34;; 205const char starwars_cantina[] PROGMEM = \u0026#34;SWCantina:d=4,o=5,b=250:8a,8p,8d6,8p,8a,8p,8d6,8p,8a,8d6,8p,8a,8p,8g#,a,8a,8g#,8a,g,8f#,8g,8f#,f.,8d.,16p,p.,8a,8p,8d6,8p,8a,8p,8d6,8p,8a,8d6,8p,8a,8p,8g#,8a,8p,8g,8p,g.,8f#,8g,8p,8c6,a#,a,g\u0026#34;; 206const char tetris[] PROGMEM = \u0026#34;tetris:d=4,o=5,b=160:e6,8b,8c6,8d6,16e6,16d6,8c6,8b,a,8a,8c6,e6,8d6,8c6,b,8b,8c6,d6,e6,c6,a,2a,8p,d6,8f6,a6,8g6,8f6,e6,8e6,8c6,e6,8d6,8c6,b,8b,8c6,d6,e6,c6,a,a\u0026#34;; 207const char topgun[] PROGMEM = \u0026#34;TopGun:d=4,o=4,b=31:32p,16c#,16g#,16g#,32f#,32f,32f#,32f,16d#,16d#,32c#,32d#,16f,32d#,32f,16f#,32f,32c#,16f,16d#\u0026#34;; 208const char backtothefuture[] PROGMEM = \u0026#34;bttf:d=4,o=5,b=100:c#4,g#.4,8c#,b.4,16a#4,16g#4,8a#.4,8g#.4,8f#4,g#.4,16g#4,16g#4,2g#.4,c#,g#.,8c#6,b.,16a#,16g#,8a#.,8g#.,8f#,1g#\u0026#34;; 209const char bond[] PROGMEM = \u0026#34;bond:d=4,o=5,b=125:8e,16f#,16f#,8f#,f#,8e,8e,8e,8e,16g,16g,8g,g,8f#,8f#,8f#,8e,16f#,16f#,8f#,f#,8e,8e,8e,8e,16g,16g,8g,g,8f#,8f#,8f#,8e,16f#,16f#,8f#,f#,8e,8e,8e,8e,16g,16g,8g,g,8f#,8f,8e,8e6,2d6,8p,8b,8a,2b\u0026#34;; 210 211void playRtttl(uint8_t iPinNumber, const char * iBuffer) { 212 //are we allowed to play another melody ? 213 //is it too soon ? 214 if (melodyInhibit.hasTimedOut() || melodyInhibit.getTimeOutTime()==0) 215 { 216 //fine play another melody 217 218 //disable interrupts. timer2 messes up with the tone() library 219 noInterrupts(); 220 timer2.revert_to_normal(); 221 interrupts(); 222 223 //play 224 anyrtttl::blocking::playProgMem(iPinNumber, iBuffer); 225 226 //enable interrupts. Configure timer2 again for 0.5us resolution. 227 noInterrupts(); 228 timer2.setup(); 229 interrupts(); 230 231 //disable RTTTL playback for 100ms to allow RcReceiverSignal to 232 //read the new update since the code was blocking during playback 233 melodyInhibit.setTimeOutTime(500); 234 melodyInhibit.reset(); 235 } 236 else 237 { 238 #ifdef ENABLE_SERIAL_OUTPUT 239 Serial.print(F(\u0026#34;Too soon for playing again. Please wait \u0026#34;)); 240 Serial.print(melodyInhibit.getRemainingTime()); 241 Serial.print(F(\u0026#34;ms...\u0026#34;)); 242 #endif 243 } 244} 245 246uint32_t timer2GetCountWrapperFunction() { 247 return timer2.get_count(); 248} 249 250void setup() { 251 pinMode(LED_OUT_PIN, OUTPUT); 252 pinMode(LED_DEBUG_OUT_PIN, OUTPUT); 253 pinMode(BUZZER_OUT_PIN, OUTPUT); 254 255 //play booting melody 256 playRtttl(BUZZER_OUT_PIN, arkanoid); 257 258 //configure Timer2 259 timer2.setup(); //this MUST be done before the other Timer2_Counter functions work; Note: since this messes up PWM outputs on pins 3 \u0026amp; 11, as well as 260 //interferes with the tone() library (http://arduino.cc/en/reference/tone), you can always revert Timer2 back to normal by calling 261 //timer2.unsetup() 262 263 //configure RcReceiverSignal with an external time counter 264 //eRCaGuy_Timer2_Counter lirary has 0.5us resolution. 265 //The counter value must be divided by 2 to convert from 0.5us steps to 1us steps 266 //which results in microseconds resolution. 267 RcReceiverSignal::setExternalTimeCounter(\u0026amp;timer2GetCountWrapperFunction, 1, 2); 268 269 //link RcReceiverSignal to use PinChangeInt library 270 RcReceiverSignal::setAttachInterruptFunction(\u0026amp;PCintPort::attachInterrupt); 271 RcReceiverSignal::setPinStatePointer(\u0026amp;PCintPort::pinState); 272 273 // if analog input pin 0 is unconnected, random analog 274 // noise will cause the call to randomSeed() to generate 275 // different seed numbers each time the sketch runs. 276 // randomSeed() will then shuffle the random function. 277 uint16_t seed = analogRead(0); 278 randomSeed(seed); 279 280 //allow the first RTTTL melody to be played 281 melodyInhibit.setTimeOutTime(0); 282 283 //configure alarm loop count time 284 alarmTimer.setTimeOutTime(50); 285 286 #ifdef ENABLE_SERIAL_OUTPUT 287 Serial.begin(115200); 288 Serial.println(F(\u0026#34;ready\u0026#34;)); 289 Serial.print(F(\u0026#34;seed=\u0026#34;)); 290 Serial.println(seed); 291 #endif 292 293 receiver_aux1_handler_setup(RECEIVER_AUX1_IN_PIN); 294 295 onTimer.reset(); 296} 297 298void processBuzzerPinUpdate() 299{ 300 if (alarmOverride) 301 { 302 int count = alarmTimer.getLoopCount() % 29; 303 bool pinHigh = (count == 0 || 304 count == 2 || 305 count == 4 || 306 count == 16 || 307 count == 17 || 308 count == 18 ); 309 if (pinHigh) 310 digitalWrite(BUZZER_OUT_PIN, HIGH); 311 else 312 digitalWrite(BUZZER_OUT_PIN, LOW); 313 } 314 else if (playMelody != 0) //is 1 or 2 315 { 316 //debuging mode: Temporary disable RTTTL playback 317 if (DISABLE_RTTTL_PLAYBACK) 318 return; 319 320 // print a random number from 0 to NUM_RTTTL_MELODY-1 321 int32_t melodyIndex = random(0, NUM_RTTTL_MELODY); 322 323 #ifdef ENABLE_SERIAL_OUTPUT 324 Serial.print(F(\u0026#34;melodyIndex=\u0026#34;)); 325 Serial.println(melodyIndex); 326 #endif 327 328 switch(melodyIndex) 329 { 330 case 0: 331 playRtttl(BUZZER_OUT_PIN, simpsons); 332 break; 333 case 1: 334 playRtttl(BUZZER_OUT_PIN, arkanoid); 335 break; 336 case 2: 337 playRtttl(BUZZER_OUT_PIN, cocacola); 338 break; 339 case 3: 340 playRtttl(BUZZER_OUT_PIN, pacman); 341 break; 342 case 4: 343 playRtttl(BUZZER_OUT_PIN, mario_short); 344 break; 345 case 5: 346 playRtttl(BUZZER_OUT_PIN, mario_death); 347 break; 348 case 6: 349 playRtttl(BUZZER_OUT_PIN, mario_flagpole); 350 break; 351 case 7: 352 playRtttl(BUZZER_OUT_PIN, mario_gameover); 353 break; 354 case 8: 355 playRtttl(BUZZER_OUT_PIN, mario_1up); 356 break; 357 case 9: 358 playRtttl(BUZZER_OUT_PIN, starwars_cantina); 359 break; 360 case 10: 361 playRtttl(BUZZER_OUT_PIN, tetris); 362 break; 363 case 11: 364 playRtttl(BUZZER_OUT_PIN, topgun); 365 break; 366 case 12: 367 playRtttl(BUZZER_OUT_PIN, backtothefuture); 368 break; 369 case 13: 370 playRtttl(BUZZER_OUT_PIN, bond); 371 break; 372 default: 373 #ifdef ENABLE_SERIAL_OUTPUT 374 Serial.print(F(\u0026#34;ERROR WITH RTTTL MELODY.\u0026#34;)); 375 #endif 376 break; 377 }; 378 } 379 else 380 { 381 digitalWrite(BUZZER_OUT_PIN, LOW); 382 } 383} 384 385void processAux1SignalChanged() 386{ 387 uint16_t pwnValue = receiver_aux1_handler.getPwmValue(); 388 RcReceiverSignal::VALUE signalValue = receiver_aux1_handler.getDeviceSignalValue(SPEKTRUM_DX9_ORANGE_R620X, pwnValue); 389 390 uint8_t analogKnob = 0; 391 demultiplexAnalog40_1x2Pos1x3Pos(signalValue, analogKnob, alarmOverride, playMelody); 392 393 //default to always OFF 394 ledOnTime = 0; //ms 395 ledOffTime = LED_FREQUENCY_LENGTH; //ms 396 397 /* 398* Note: 399* Since the RcReceiverSignal may flicker a little (oscillate from 0 to 2), 400* the first 3 analog values must be considered OFF. This allows the pilot 401* to easily set the LED always OFF (without blimps). 402* 403* Also consider last 2 analog values as always ON. This allows the pilot 404* to easily set the LED always ON (without blimps). 405*/ 406 if (analogKnob \u0026lt; ANALOG_VALUE_THRESHOLD) 407 { 408 //force always OFF 409 analogKnob = 0; 410 } 411 else if (analogKnob \u0026gt;= ANALOG_VALUE_MAX-1) 412 { 413 //force always ON 414 analogKnob = ANALOG_VALUE_MAX; 415 } 416 417 //map signal value to an on-time and off-time 418 ledOnTime = map(analogKnob, 0, ANALOG_VALUE_MAX, 0, LED_FREQUENCY_LENGTH); //ms 419 ledOffTime = LED_FREQUENCY_LENGTH - ledOnTime; //ms 420 421 //update timers 422 onTimer.setTimeOutTime(ledOnTime); 423 offTimer.setTimeOutTime(ledOffTime); 424 425 #ifdef ENABLE_SERIAL_OUTPUT 426 Serial.print(F(\u0026#34;signal=\u0026#34;)); 427 Serial.print(prettyPrint(\u0026#34;%4d\u0026#34;, signalValue)); 428 Serial.print(F(\u0026#34;% PWM=\u0026#34;)); 429 Serial.print(prettyPrint(\u0026#34;%04d\u0026#34;, pwnValue)); 430 Serial.print(F(\u0026#34; analog=\u0026#34;)); 431 Serial.print(prettyPrint(\u0026#34;%02d\u0026#34;, analogKnob)); 432 Serial.print(F(\u0026#34; buzzerOverride=\u0026#34;)); 433 Serial.print(buzzerOverride); 434 Serial.print(F(\u0026#34; playMelody=\u0026#34;)); 435 Serial.print(playMelody); 436 Serial.print(F(\u0026#34; ON:\u0026#34;)); 437 Serial.print(prettyPrint(\u0026#34;%04d\u0026#34;, ledOnTime)); 438 Serial.print(F(\u0026#34; OFF:\u0026#34;)); 439 Serial.print(prettyPrint(\u0026#34;%04d\u0026#34;, ledOffTime)); 440 Serial.println(); 441 #endif 442} 443 444void processLedPinUpdate() 445{ 446 if (ledOn) 447 { 448 //led is ON 449 450 //should it be turned OFF ? 451 if (onTimer.hasTimedOut() \u0026amp;\u0026amp; offTimer.getTimeOutTime() \u0026gt; 0) 452 { 453 //time to turn OFF the LED 454 digitalWrite(LED_OUT_PIN, LOW); 455 digitalWrite(LED_DEBUG_OUT_PIN, LOW); 456 ledOn = !ledOn; 457 offTimer.reset(); 458 } 459 } 460 else 461 { 462 //led is OFF 463 464 //should it be turned ON ? 465 if (offTimer.hasTimedOut() \u0026amp;\u0026amp; onTimer.getTimeOutTime() \u0026gt; 0) 466 { 467 //time to turn ON the LED 468 digitalWrite(LED_OUT_PIN, HIGH); 469 digitalWrite(LED_DEBUG_OUT_PIN, HIGH); 470 ledOn = !ledOn; 471 onTimer.reset(); 472 } 473 } 474} 475 476void loop() { 477 //detect when the receiver AUX1 value has changed 478 if (receiver_aux1_handler.hasChanged()) 479 { 480 processAux1SignalChanged(); 481 } 482 483 //check timers if required to toggle 484 processLedPinUpdate(); 485 486 //update buzzer 487 processBuzzerPinUpdate(); 488}  Building steps \nThe following section explains all the different steps on how to build my DIY quadcopter visual aids controller.\nInstall code on arduino Before attempting run the given code on the arduino, you must first install the required libraries. Please follow the How to Install a Library guide available on the arduino web site.\nDownload links for required libraries are available in the External Libraries or References sections.\nUpload the main arduino sketch to the arduino and proceed with the next step.\nSetup transmitter (Tx) mixes As explained above, this project innovation relies on the fact that both devices are controlled by the quadcopter transmitter using only a single channel. This is achieved by configuring custom mixes on the transmitter.\nTo know more about how mixes can be used to control more than one device with the help of a microcontroller, read the following article: How to multiplex RC Transmitter switches into a single channel.\nAs a reference, here are the mixes that I use for my Spektrum DX9 transmitter:\nAUX1 Mix info\rMix Output\r\rNumber\rSwitch\rHigh\rLow\rOffset\r\r1\r2\r\r\r\rRight knob\r-74\r\r-99\r-147\r-73\r\r\r\r1\rRight knob\r\r54\r100\r\r-54\r-108\r\r\r\r-147\r-127\r-108\r\r\r2\rH\r\r-69\r100\r\r-\r138\r\r\r3\rG\r\r-46\r100\r\r46\r92\r\r\rNote that the following mixes must match the demultiplexing code running on the arduino. If you do not use the code \u0026ldquo;as is\u0026rdquo;, then you must also adjust your transmitter mixes to reflect the change.\rBuild a prototype \nDIY Quadcopter lost plane alarm finder and 10w LED visual aids Prototype\nThe purpose of these steps is to evaluate the feasibility of the project by implementing a smaller scale of the project as a proof of concept even though that at this point you should already know that the project is viable since I already completed all steps and the controller is actually running on my personal quadcopter.\nTest the code \nQuadCtrl - Testing the code in Arduino IDE\nThe purpose of this step is to quickly identify issue with the code as no other parts (besides the arduino itself) of the final circuit is used. Code issues are the one that should be addressed first. This step confirms that the arduino is able to read an arbitrary PWM signal and process it.\nBuild the circuit as showed by the picture above. For reference, the yellow and blue wires matches the blue and orange wire of the breadboard layout. These wires are connected to pins which drives low LEDs instead of high current mosfets. The prototype uses a simple CCPM Servo Tester for emulating the 6-ch receiver. In this configuration, the red LED matches the 10W front LED and the green LED matches the buzzing state.\nPower the arduino using USB power. By changing the position of the CCPM Servo tester potentiometer, you should observe different behavior of each LEDs for each position of CCPM tester.\nNote that since the code is already debugged, I do not expect anything to go wrong and things should be addressed easily. If you do observe issues, please verify your connections or the version used by each library dependencies.\rTx/Rx prototype integration For a greater testing, connect your receiver and use your transmitter to change the PWM signal sent to the microcontroller.\nThis step verifies the quality (or precision of the signal) of the transmitter/receiver pair. It also helps validating that you configured the right mixes in your transmitter to independently control the LED and the buzzer.\nTest each component (optional) Now that you know that the code is working as expected, you may want to test each components before soldering them on the breadboard.\nThe final step is to integrate all real components to the breadboard prototype and use external 12v power supply (to mimic a 3S LiPo battery).\n\nComplete the actual circuit as defined in Breadboard Layout section.\nSolder components \nQuadCtrl - Soldering components to the stripboard\nDefine the position of every components on the prototyping stripboard. You should have enough room for all components and if you plan correctly, you may still have space left and be able to cut 1 or 2 cm from the sides to save additional size and weight.\nNote that both mosfet do not require a heat sink. However, you may want to fold both mosfet so that the height of the total package is as low as possible so that it may fit properly inside a small cavity of the quadcopter.\nPosition the arduino\u0026rsquo;s USB port facing outside so that when you need to update the software, you can simply connect the package to a computer without having to disassemble or disconnect the unit from the quadcopter.\nFor the same reason, solder the male servo extension lead and the JST battery connector to the other side since those will require to be as close as possible to the quadcopter\u0026rsquo;s controller and battery.\nSolder each component carefully following the schematics and head to the final step.\nSecure the unit on the quadcopter \nQuadCtrl - Securing components with wrapping foam\nOnce everything is ready for flight, attach the package on the quadcopter. Connect JST battery connector and each signal wire cable.\nSince I was planning on removing the device for maintenance, I didn\u0026rsquo;t used glue (or anything permanent) for securing the package to the frame. Instead I used zip ties which are used for both wrapping the foam around the stripboard and attaching to the frame\u0026rsquo;s front grooves.\nI also used zip ties to attach the wood BBQ skewers to the pre-drilled holes in the fuselage.\nFor best result, position the 10w LED below the propeller\u0026rsquo;s wind blast. This will greatly increase the lifespan of the LED since it will always be properly cooled while turned on.\nFinal Result Here is the final result:\n\nArduino Quadcopter LED \u0026amp; Buzzer Controler (final)\n\nArduino Quadcopter LED \u0026amp; Buzzer Controler (final) - Close Up\nMade anything differently? The features of the device are fulfilling the main objectives and there is no actual need to change anything. However, there are lots of aspect of the design that could be improved. After completing this project, I though of multiple ideas that could bring the design to a higher quality level.\nAt the beginning of the project, I was not much concerned about weight since I was evaluating the feasibility of the project and I didn\u0026rsquo;t design the device to be something that would actually be flying. Now that it is completed, I would like to put more effort trying to reduce the total weight.\nHere are most aspects that I would like to improve:\nBetter signal wires Signal wires could be much improved.\nFirst, they are way too big. The wires for the receiver signal between the 6-ch receiver (Rx) and the arduino could be made smaller. Only a small current is used to carry the signal so there is no need for not using the smallest wires available.\nSecond, not all wires are actually used. At the beginning of the design, I though of using the arduino to read multiple channels. In the picture above, the red and blue wires were designed to read 2 more PWM signals which would make the arduino able to decode 3 different channels. The blue and red wires are wasted grams I could save.\nFinally, the length of the wires is 3-4 times longer than they actually need. When I was prototyping, it was actually convenient to have longer cable that could connect the receiver but once the unit is attached to the quadcopter, the device is almost next to the receiver and the need for longer wires is not much required anymore. The same also applies for the LED wires which had to be folded many times because they were too long.\nOther LED options? I still doubt that a single super strong LED is the way to go. In the near future, I might consider having multiple on-board middle-range LED and I am curious to see if multiple LEDs would produce more lumens than a single one. In the idea, having 2 or 3 smaller LED may make the whole thing more visible at greater distance. I may investigate other LED options which offers a better watt-to-lumens ratio.\nIf I ever choose to go with 2 or 3 smaller LED instead of a single super strong LED, I may also get rid of the current limiting circuit. The circuit is not particularly heavy but using smaller LED (which consumes less power), would allow me to replace the circuit by smaller/lighter resistance connected to each LED. I know that each resistance might not be super efficient (lots of heat dissipation) but it is negligible when compared to the enormous amount of energy consumed by the motors. A linear voltage regulator like the LM317 might also simplify the circuit and prevent too much heat dissipation.\nSmaller form factor Getting rid of the stripboard would also be in my plans. Now that I know the whole circuit does not required too much connections, I am now thinking of completely removing the stripboard. This would require to hot glue both the mosfets and the current limiting circuit directly to the arduino. If done properly, the amount of hot glue required should be lighter than the stripboard.\nAt the same time, the device would be smaller which could make it usable on other platforms like ones with a hard shell cover.\nSignal (de)multiplexing nessesary? Short answer, no.\nActually, I do not require to have an on-board arduino on the quad. There was no actual need to implement signal multiplexing and demultiplexing. To get the same functionality, I could have simply used an 8-channels receiver and the need for multiplexing/demultiplexing would be gone.\nThe main reason for this project was fun. \u0026lsquo;All work and no play makes Antoine a dull boy\u0026rsquo;. The project turned out more complicated than I first through and I had to invest a lot of my free time to code, test and to make it up to this point. Without the \u0026lsquo;fun\u0026rsquo; part, this project would never went further than ideas on a sheet of paper. If I ever have to rebuild this project, the fun part would still be the first and primary goal of the project!\nModular design For maintainability, portability and reusability reasons, it might be interesting to subdivide the device into modules (smaller reusable parts).\nFor instance the demultiplexor could be a perfect candidate for reusability. It could be reused on other platforms like airplanes to control non-critical flight accessories like landing lights where front, wings and tail lights could be controlled by a single channel.\nThe LED and buzzer could also be made into modules. Each or both could be modified to be directly connected to a dedicated channel on the receiver. If I ever upgrade the quadcopter to a 8-channels (or more) receiver, I could still use the LED and the buzzer without requiring the demultiplexor part.\nReferences Here is the list of all sub-articles that made this project a reality:\nDocumentation:\n How to multiplex RC Transmitter switches into a single channel. Mapping RC Transmitter PWM signal to actual transmitter values. Demystifying RC Transmitter Mixing. RC Transmitter Mix Calculator.  Arduino libraries:\n SoftTimers – A collection of software timers to easily compute elapsed time since an event occurred.  libRtttl – A c++ library (with UI) for compressing/optimizing the RTTTL audio format. AnyRtttl – A feature rich arduino library for playing RTTTL melodies. RcReceiverSignal: an arduino library for retrieving the RC Transmitter value from an RC Receiver pulse.    Notes none\n",
    "ref": "/diy-lost-plane-alarm-finder-and-10-watts-led-visual-aids-for-easy-orientation/"
  },{
    "title": "csvplot – A command line script which uses Microsoft Excel to plot a graph from a Comma-separated values (CSV) file",
    "date": "",
    "description": "",
    "body": "Please note that csvplot source code is now moved to GitHub. Source code can be downloaded from the project’s GitHub page.\rPurpose I do software prototyping using a wide range of programming language. I often have to generate data that changes over time which is mostly displayed in a grid format. However, that\u0026rsquo;s not the best way to understand how the data changes over time compared to plotting the data to a graph.\nMost programming language I know does not offer a native library for plotting data to a graph. It is not an easy task. Most programming language often require external libraries for implementing the process and each library does not work the same way.\nExcel is a native platform for parsing Comma-separated values (CSV) files and can be scripted to plot the result into an image.\nThe purpose of this script is to allows any programming language which generates data to plot the data into an image by saving the raw data to a CSV file and then using the power of Excel to plot the result into an image.\nSkip to the download section for quick download.\nNote that csvplot is only available for Windows and has been tested on Windows 7 only.\rFeatures The following section list the features of csvplot script:\n Supports lossless PNG image format. Supports CSV data file format which is a generic text file format supported by any application and programming language. The script supports virtually an unlimited number of time series plots. Automatically detect appropriate boundaries for the graph  Limitations The script has some limitations which are explained here.\nOutput image The resolution of the output image may be +- 1 pixels different than what is requested on command line. This is a limitation of how Excel processes image dimensions since it uses \u0026ldquo;points\u0026rdquo; as base unit and not actual pixels. A conversion from pixels to points must be calculated which may contains small accuracy error.\nThe only supported image format is PNG. It is still unknown if Excel actually support JPG for exporting graphs but PNG seems to be the perfect candidate since its a lossless compressed format.\nColumn Titles It is expected that first row of each column contains the title of the column which will be used as the name of the plotted series within the graph.\nUsage The command for launching the script is as follows. The script must be called with a minimum of 6 command line arguments.\n   Name Description     InputFile Path of the input CSV file   OutputFile Path of the output PNG image   Width Width of the output image in pixels   Height Height of the output image in pixels   Serie #1, X column X column index of first series   Serie #1, Y column Y column index of first series   Serie #2, X column X column index of second series   Serie #2, Y column Y column index of second series   Serie #n, X column \u0026hellip;   Serie #n, Y column \u0026hellip;    Note that column indice are 1-based and not 0-based. This means that column A is column 1 and not column 0.\rExecution (command line) The script is written in VBScript. Use the following to execute the script from a batch file (*.bat) :\n1@echo off 2cscript //nologo \u0026#34;%~dp0csvplot.vbs\u0026#34; path\\to\\demo.csv path\\to\\demo.png 800 600 1 2 3pause Output On execution, the following output is produced by the script:\n\ncsvplot Command Line Output\n1Microsoft Windows [Version 6.1.7601] 2Copyright (c) 2009 Microsoft Corporation. All rights reserved. 3 4C:\\\u0026amp;gt;cd /d C:\\Temp\\csvplotdemo 5 6C:\\Temp\\csvplotdemo\u0026amp;gt;cscript //Nologo csvplot.vbs %cd%\\CarEngineModel.csv %cd%\\CarEngineModel.png 853 479 1 3 1 4 1 2 Loading input file C:\\Temp\\csvplotdemo\\CarEngineModel.csv... 7File load successful. 8File has 4 columns. 9Plotting series of columns 1 and 3... 10Plotting series of columns 1 and 4... 11Plotting series of columns 1 and 2... 12File C:\\Temp\\csvplotdemo\\CarEngineModel.png saved successfully. 13 14C:\\Temp\\csvplotdemo\u0026amp;gt; Code The code below can be downloaded by clicking on the following link:\nPlease note that download links are now deprecated. Binary version of csvplot can be downloaded from the project’s Release page.\rSamples The following section shows some example of using cvsplot to plot a series\nApple Share Prices The following example show the Apple Share Prices closing value over the year 2015. The data is provided by Nasdaq at the following address:\nhttp://www.nasdaq.com/symbol/aapl/historical.\nThe CSV data can be downloaded here:\n[ Apple Share Prices over time (2015).csv](http://www.end2endzone.com/download/2212/ \u0026quot;Version 1.0\u0026quot;)\r \nApple Share Prices over time (2015) plot using cvsplot\nCar Engine Model The following show a hypothetical car engine model which speed increase of decrease over time based on the feedback of the gas pedal.\nThe CSV data can be downloaded here: Car Engine Model.csv\n\nCar Engine Model plot using cvsplot\nSin(x), Cos(x) and Log(x) The following show a graph of sin(), cos() and log() function in Excel.\nThe CSV data can be downloaded here: sin(x), cos(x) \u0026amp; log(x) function data.csv\n\nsin(x), cos(x) \u0026amp; log(x) plot using cvsplot\nLicense This library is free software; you can redistribute it and/or modify it under the terms of the GNU Lesser General Public License as published by the Free Software Foundation; either version 3.0 of the License, or (at your option) any later version.\nThis library is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License (LGPL-3.0) for more details.\nYou should have received a copy of the GNU Lesser General Public License along with this library; if not, write to the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA\nDISCLAIMER:\nThis software is furnished \u0026ldquo;as is\u0026rdquo;, without technical support, and with no warranty, express or implied, as to its usefulness for any purpose.\nDownload You can download csvplot by clicking on the following link:\nPlease note that download links are now deprecated. Binary version of csvplot can be downloaded from the project’s Release page.\r",
    "ref": "/csvplot-a-command-line-script-which-uses-microsoft-excel-to-plot-a-graph-from-a-comma-separated-values-csv-file/"
  },{
    "title": "SoftTimers – A collection of software timers to easily compute elapsed time since an event occurred",
    "date": "",
    "description": "",
    "body": "Introduction The following article is about my simplest library that I wrote for the arduino: SoftTimers. The SoftTimers arduino library allows one to properly time multiple events and know when each \u0026ldquo;timer\u0026rdquo; expires meaning that an action is required.\nSkip to the download section for quick download.\nWhen I first learned programming the arduino, I learned the \u0026ldquo;hello world\u0026rdquo; of the arduino: turning a LED on and off. As expected, I used delay() to define how long the LED should be on and off.\nHowever, this approach is bad since it break the \u0026ldquo;realtime\u0026rdquo; property of the software to react to other event. If I want to make the LED instantly turn off when pressing a button, I had to wait for the delay to complete before processing the button. (I know you could use interrupts and update with LED pin within the interrupt but that is out of scope for now.)\nAnother issue is extensibility. Making 3 LEDs blink at different time interval is much harder with delays. How about 40 LEDs? Impossible?\nThis is where SoftTimers arduino library becomes helpful.\nPurpose The SoftTimers allows one to properly time multiple events and know when each \u0026ldquo;timer\u0026rdquo; expires meaning that an action is required. In this example above, a SoftTimer expires when it is time to toggle an LED.\nSoftTimers also provide the elapsed time since an event occurred. In case of an interruption, the elapsed time can be used as debugging information. It can also be used as a countdown information displayed to the user.\nThe library regroups basic timer functionalities into a single class. The usual way to get the same functionality is to create multiple variables for each single timer. This way is hard to maintain when you need multiple timers are required to run at the same time.\nSoftTimer classes are designed to be keep \u0026ldquo;simple \u0026amp; stupid\u0026rdquo;. No software interrupts. Non-blocking. Each timer must be polled within the loop() to know their status.\nLibrary features Here is a list of all library features:\n Provides the non-blocking equivalent to blocking delay() function. Each timers encapsulate its own expiration (timeout) time. Provides elapsed time, remaining time and progress (in percentage) APIs. Supports milliseconds, microseconds or any other arbitrary time with external time counting function. Provides expiration loop count API (as if timer never expire and automatically reset()) to easily implement toggling, and time based state machines. Automatically handles micros() an millis() overflows / wrap around special cases.  Usage Basic Usage Call setTimeOutTime() to setup the non-blocking SoftTimer then call reset() to restart the internal counter.\nWithin the loop(), use hasTimedOut() to know if the timer has expired.\nAt any moment, call getElapsedTime() to get the absolute elapsed time since the last reset().\nFade a LED Fading a LED like arduino\u0026rsquo;s Built-in Fade Example is trivial using SoftTimers. The library helps in defining the constant speed at which the LED will fade by defining the total length of the process and by easily mapping the timer \u0026ldquo;progress\u0026rdquo; to the amount of fade (PWM) used with the output pin. All of this in a non-blocking manner.\nThe following example increases the intensity of a LED from OFF to ON in 1 second and then decreases the intensity of the LED back to OFF in 1 second.\nDemo\nClick the following to download the example below:\n(download Fade a LED example.ino)\n1#include \u0026lt;SoftTimers.h\u0026gt;2 3#define LED_PIN 9 4 5/************************************************** 6*Fade a LED as the Fade basic example: 7*Increse the intensity of a LED from OFF to ON in 1 seconds 8*then ON to OFF in 1 seconds 9**************************************************/ 10SoftTimer fadeTimer; //millisecond timer 11 12void setup() { 13 pinMode(LED_PIN, OUTPUT); 14 15 Serial.begin(115200); 16 17 //update timers 18 fadeTimer.setTimeOutTime(1000); // every 1 second. 19 20 //start counting 21 fadeTimer.reset(); 22} 23 24void loop() { 25 //determine the direction of brightness 26 int direction = fadeTimer.getLoopCount() % 2; //returns 0 or 1 27 bool increasing = (direction == 0); //assign increasing brightness with direction 0 28 29 //get progress 30 double progress = fadeTimer.getLoopProgress(); 31 32 //correct progress based on direction 33 if (!increasing) 34 { 35 progress = 1.0 - progress; 36 } 37 38 //map progress to a 0-255 brightness intensity. 39 uint16_t brightness = progress*255; 40 41 //update the LED 42 analogWrite(LED_PIN, brightness); 43} 44  Countdown or Elapsed time Any program that need to display a countdown or compute the elapsed time between two events can also benefit from SoftTimers.\nThe following example runs a countdown of 5 seconds and then turns a LED on.\nDemo\nClick the following to download the example below:\n(download Countdown example.ino)\n#include \u0026lt;SoftTimers.h\u0026gt;\r#define LED_PIN 13\r/**************************************************\r* Run a countdown from 5 second to 0 and turn LED on\r**************************************************/\rSoftTimer countdown; //millisecond timer\rvoid setup() {\rpinMode(LED_PIN, OUTPUT);\rSerial.begin(115200);\r//update timers\rcountdown.setTimeOutTime(5000); // 5 seconds\r//start counting now\rcountdown.reset();\r}\rvoid loop() {\rif (!countdown.hasTimedOut())\r{\r//show user how much time left in milliseconds\ruint32_t remaining = countdown.getRemainingTime();\rSerial.print(remaining);\rSerial.println(\u0026#34; ms...\u0026#34;);\r}\relse\r{\r//turn ON the LED\rdigitalWrite(LED_PIN, HIGH);\r}\r}\r Timed repetitive cycles SoftTimer library also help reducing repetitive timed cycles to their simplest non-blocking form. SoftTimer library automatically computes current cycle index. Any toggling or cycle scenarios can be implemented with very few lines of code.\nThe following example implements a system where a single HIGH pin must be cycled every second within multiple pins as defined by the following loop:\n set pin 8, 9 and 13 to LOW, LOW and HIGH respectively and then wait 1 second. set pin 8, 9 and 13 to HIGH, LOW and LOW respectively and then wait 1 second. set pin 8, 9 and 13 to LOW, HIGH and LOW respectively and then wait 1 second. repeat the cycle forever\u0026hellip;  Demo\nClick the following to download the example below:\n(download Cycle a High pin example.ino)\n1#include \u0026lt;SoftTimers.h\u0026gt;2 3#define LED_PIN_0 13 4#define LED_PIN_1 8 5#define LED_PIN_2 9 6 7/************************************************** 8*Every second, cycle the HIGH pin within pins 13,8,9 9**************************************************/ 10SoftTimer cyclePinTimer; //millisecond timer 11 12void setup() { 13 pinMode(LED_PIN_0, OUTPUT); 14 pinMode(LED_PIN_1, OUTPUT); 15 pinMode(LED_PIN_2, OUTPUT); 16 17 Serial.begin(115200); 18 19 //update timers 20 cyclePinTimer.setTimeOutTime(1000); // every 1 second. 21 22 //start counting 23 cyclePinTimer.reset(); 24} 25 26void loop() { 27 uint32_t loopCount = cyclePinTimer.getLoopCount(); 28 uint32_t pinHighNumber = (loopCount % 3); //from 0 to 2 29 30 if (pinHighNumber == 0) 31 { 32 //turn ON the LED 0, turn OFF all other 33 digitalWrite(LED_PIN_0, HIGH); 34 digitalWrite(LED_PIN_1, LOW); 35 digitalWrite(LED_PIN_2, LOW); 36 } 37 else if (pinHighNumber == 1) 38 { 39 //turn ON the LED 1, turn OFF all other 40 digitalWrite(LED_PIN_0, LOW); 41 digitalWrite(LED_PIN_1, HIGH); 42 digitalWrite(LED_PIN_2, LOW); 43 } 44 else //if (pinHighNumber == 2) 45 { 46 //turn ON the LED 2, turn OFF all other 47 digitalWrite(LED_PIN_0, LOW); 48 digitalWrite(LED_PIN_1, LOW); 49 digitalWrite(LED_PIN_2, HIGH); 50 } 51} 52  Timed restricted state machines SoftTimer library allows one to make an easy abstraction of time when dealing with timed restricted state machines.\nThe following example implement an hypothetical state machine where each state has a maximum duration:\n State #1 - IDLE (1000 ms) State #2 - LISTENING (200 ms) State #3 - SYNCHRONIZING (500 ms) State #4 - UPDATING (300 ms) State #1 \u0026hellip;.  Demo\nClick the following to download the example below:\n(download State Machine example.ino)\n1#include \u0026lt;SoftTimers.h\u0026gt;2 3/************************************************** 4* An hypothetical state machine needs to step from 5* state to state. Each state has its own maximum 6* duration: 7* State #1 - IDLE (1000 ms) 8* State #2 - LISTENING (200 ms) 9* State #3 - SYNCHRONIZING (500 ms) 10* State #4 - UPDATING (300 ms) 11* State #1 ... 12**************************************************/ 13 14SoftTimer nextStateTimer; //millisecond timer 15 16const int STATE_IDLE = 0; 17const int STATE_LISTENING = 1; 18const int STATE_SYNCHRONIZING = 2; 19const int STATE_UPDATING = 3; 20 21int state = STATE_IDLE; 22 23void setup() { 24 Serial.begin(115200); 25 26 //update timers 27 nextStateTimer.setTimeOutTime(1000); // IDLE, 1 second. 28 29 //start counting now 30 nextStateTimer.reset(); 31} 32 33void loop() { 34 //show current state 35 switch(state) 36 { 37 case STATE_IDLE: 38 Serial.println(\u0026#34;IDLE\u0026#34;); 39 break; 40 case STATE_LISTENING: 41 Serial.println(\u0026#34;LISTENING\u0026#34;); 42 break; 43 case STATE_SYNCHRONIZING: 44 Serial.println(\u0026#34;SYNCHRONIZING\u0026#34;); 45 break; 46 case STATE_UPDATING: 47 Serial.println(\u0026#34;UPDATING\u0026#34;); 48 break; 49 default: 50 Serial.println(\u0026#34;UNKNOWN STATE!\u0026#34;); 51 break; 52 }; 53 54 //look for next state... 55 if (nextStateTimer.hasTimedOut()) 56 { 57 state++; 58 59 //limit state to known states 60 state = state%(STATE_UPDATING+1); 61 62 //reconfugure time based on new state 63 switch(state) 64 { 65 case STATE_IDLE: 66 nextStateTimer.setTimeOutTime(1000); 67 break; 68 case STATE_LISTENING: 69 nextStateTimer.setTimeOutTime(200); 70 break; 71 case STATE_SYNCHRONIZING: 72 nextStateTimer.setTimeOutTime(500); 73 break; 74 case STATE_UPDATING: 75 nextStateTimer.setTimeOutTime(300); 76 break; 77 default: 78 Serial.println(\u0026#34;UNKNOWN STATE!\u0026#34;); 79 break; 80 }; 81 82 //start counting now 83 nextStateTimer.reset(); 84 } 85 86 //hypothetical work... 87 //processState() 88} 89  License This library is free software; you can redistribute it and/or modify it under the terms of the GNU Lesser General Public License as published by the Free Software Foundation; either version 3.0 of the License, or (at your option) any later version.\nThis library is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License (LGPL-3.0) for more details.\nYou should have received a copy of the GNU Lesser General Public License along with this library; if not, write to the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA\nDISCLAIMER:\nThis software is furnished \u0026ldquo;as is\u0026rdquo;, without technical support, and with no warranty, express or implied, as to its usefulness for any purpose.\nDownload You can download the SoftTimers arduino library by clicking on the following link:\n [ Download \u0026quot;SoftTimers arduino library v1.1.219\u0026quot; SoftTimers-v1.1.219.zip - Downloaded 430 times - 41 KB ](http://www.end2endzone.com/download/2089/)\r",
    "ref": "/softtimers-a-collection-of-software-timers-to-easily-compute-elapsed-time-since-an-event-occured/"
  },{
    "title": "libRtttl – A c++ library (with UI) for compressing/optimizing the RTTTL audio format",
    "date": "",
    "description": "",
    "body": "Introduction The following article is about another library that I have written: libRtttl is a c++ library for manipulating the RTTTL audio format.\nSkip to the download section for quick download.\nSee this post for a quick recall of the RTTTL format.\nEdit: for a better understanding and examples of what libRTTTL can do, please see this post: How to convert arduino code to actual RTTTL melodies using libRtttl and AnyRtttl.\rPurpose RTTTL songs available on the internet are not optimized for the smallest size. Still they are readable by a human but they are far from optimized for the arduino embedded device. Most RTTTL song can be optimized (without quality loss) and have their size reduced by ~20%. Conversion to binary allows even better compression but it wont be human readable anymore.\nThe library also allows one to convert an RTTTL song to hardcoded function calls (tone() and delay() calls). This is really useful if your dynamic memory is almost completely full and you would like to move the load from dynamic memory to program storage space.\nThe UI (rtttlOptimizerGui) also features a basic RTTTL player. The quality of the playback is limited but it allows one to prove that a compression did not changed the song\u0026rsquo;s melody.\nLibrary Functionalities / Features Possible use are:\n Optimize an existing RTTTL melodies.  Convert RTTTL melodies to other format: \rMIDI.\r\r* Arduino `tone()` and `delay()` function calls.\r* Binary format (10 bits per note) for maximum compression (minimum size).\r* Binary format (16 bits per note) for quick note offset addressing and minimum code footprint.\r\r Convert arduino tone() and delay() function calls back to a valid RTTTL melody. Allow relaxed RTTTL settings for easier conversions.  Note that RTTTL binary format requires an external arduino library for playback. The AnyRtttl library supports all common RTTTL format including the binary format generated by this library.\rRequirements The library has some compilation requirements and library dependencies which are:\nlibRtttl  Only Visual Studio 2008 projects files are available. Files can be manually moved to other platforms or IDE as required. Supporting other compilers is not currently planned. Requires code from BitReader and AnyRtttl arduino libraries, libMidi and win32Arduino win32 library which are all already included in source code. The Google Test v1.6 library is required for running test cases.  rtttlOptimizerGui  Requires the wxWidgets Cross-Platform GUI Library v2.8.12 for compiling. The UI design files must be edited with wxFormBuilder v3.0.57 (a RAD tool for wxWidgets GUI design). This tools is not required for compilation. NSIS: Nullsoft Scriptable Install System is required for generating the installation package. The Play RTTTL \u0026amp; RTTTL 2 MIDI functionalities require the Windows platform for runtime. The code uses some compiler-dependent instructions for debugging the UI under Windows. All non-portable code is protected with #ifdef _WIN32 to be cross-platform friendly.  Usage All functionalities of the library are available through the UI.\nStart the UI by launching rtttlOptimizerGui.exe.\n\nrtttlOptimizerGui with default options\nCopy \u0026amp; paste the input data in the Command Input text area. Click on one of the available command buttons. The output result will be displayed in the Command Output area.\nOptimize Copy \u0026amp; paste a valid song in RTTTL format in the Command Input section.\nPress the Optimize button to compress the RTTTL code to its shortest form.\nDuring optimization, the library will convert the input RTTTL song to \u0026ldquo;raw\u0026rdquo; data and re-encode the result back to RTTTL using all possible combinations of default duration, default octave and BPM (Beats per minute).\nFrom all combination possibilities, the library will select the shortest one. For example, the following RTTTL code from _The Legend of Zelda _:\nZelda1:d=4,o=5,b=125:a#,f.,8a#,16a#,16c6,16d6,16d#6,2f6,\r8p,8f6,16f.6,16f#6,16g#.6,2a#.6,16a#.6,16g#6,16f#.6,\r8g#.6,16f#.6,2f6,f6,8d#6,16d#6,16f6,2f#6,8f6,8d#6,8c#6,\r16c#6,16d#6,2f6,8d#6,8c#6,8c6,16c6,16d6,2e6,g6,8f6,16f,\r16f,8f,16f,16f,8f,16f,16f,8f,8f,a#,f.,8a#,16a#,16c6,\r16d6,16d#6,2f6,8p,8f6,16f.6,16f#6,16g#.6,2a#.6,c#7,c7,\r2a6,f6,2f#.6,a#6,a6,2f6,f6,2f#.6,a#6,a6,2f6,d6,2d#.6,\rf#6,f6,2c#6,a#,c6,16d6,2e6,g6,8f6,16f,16f,8f,16f,16f,\r8f,16f,16f,8f,8f\rcan be optimized to the following code:\nZelda1:d=8,o=6,b=250:2a#5,2f.5,4a#5,a#5,c,d,d#,1f,4p,4f,f.,2p,\r1f#,g#.,1a#.,a#.,g#,f#.,4g#.,f#.,1f,2f,4d#,d#,2p,1f,1f#,4f,4d#,\r4c#,c#,d#,1f,4d#,4c#,4c,c,d,1e,2p,2g,4f,f5,f5,4f5,f5,f5,4f5,f5,f5,\r4f5,4f5,2a#5,2f.5,4a#5,a#5,c,d,d#,2p,2f,4p,4f,f.,f#,g#.,1a#.,\r2c#7,2c7,1a,2f,1f#.,2a#,2a,1f,2f,2p,2f#.,2a#,2a,1f,2d,1d#.,2f#,\r2f,1c#,2a#5,2c,d,1e,2g,4f,f5,f5,4f5,2p,1f5,f5,4f5,f5,f5,4f5,4f5\rwhich reduces the original code length by 89 bytes (from 446 bytes to 357 bytes), that is a 19.95% size reduction.\nPlay RTTTL Copy \u0026amp; paste a valid song in RTTTL format in the Command Input section.\nPress the Play RTTTL button to play the melody.\nNote that application will momentary freeze during the playback. The application will respond again once the melody is done playing.\rRTTTL to MIDI Copy \u0026amp; paste a valid song in RTTTL format in the Command Input section.\nPress the RTTTL 2 MIDI button to convert the melody to the MIDI sound format and automatically play the melody.\nNote that MIDI sound format offers much better playback capabilities and sound quality than beeping each tone. See my post about my MIDI library for more details: libMIDI - A C++ open-source library for generating single tone melodies in MIDI format.\rtone() to RTTTL Copy \u0026amp; paste a valid song in arduino code (tone() and delay() function calls) in the Command Input section.\nPress the tone() 2 RTTTL button to encode the melody into RTTTL.\nFor example, the following arduino code:\nvoid playArkanoid(int pin) {\rtone(pin, 1568, 214);\rdelay(215);\rdelay(107);\rtone(pin, 1568, 160);\rdelay(161);\rtone(pin, 1865, 856);\rdelay(857);\rdelay(53);\rtone(pin, 1760, 214);\rdelay(215);\rtone(pin, 1568, 214);\rdelay(215);\rtone(pin, 1397, 214);\rdelay(215);\rtone(pin, 1760, 214);\rdelay(215);\rtone(pin, 1568, 856);\rdelay(857);\rnoTone(pin);\r}\ris encoded into the following RTTTL code:\nunknown:d=8,o=6,b=140:g,16p,16g.,2a#,32p,a,g,f,a,2g\rThis feature is useful for moving data from program storage space to dynamic memory.\nRTTTL to tone() Copy \u0026amp; paste a valid song in RTTTL format in the Command Input section.\nPress the RTTTL 2 tone() button to decode the input song to \u0026ldquo;raw\u0026rdquo; data (note with frequency and duration) and generate the arduino code required to play the song.\nThis process is really useful if your dynamic memory is almost completely full and you would like to move the load from dynamic memory to program storage space.\nFor instance, the RTTTL code from Super Mario Bros. - 1-up sound :\nmario1up:d=16,o=7,b=180:e.6,g.6,e.,c.,d.,g.\ngenerates the following arduino code:\n1void playMario1up(int pin) { 2 tone(pin, 1319, 124); 3 delay(125); 4 tone(pin, 1568, 124); 5 delay(125); 6 tone(pin, 2637, 124); 7 delay(125); 8 tone(pin, 2093, 124); 9 delay(125); 10 tone(pin, 2349, 124); 11 delay(125); 12 tone(pin, 3136, 124); 13 delay(125); 14 noTone(pin); 15} RTTTL to Binary (10 bits) Copy \u0026amp; paste a valid song in RTTTL format in the Command Input section.\nPress the RTTTL 2 Binary (10 bits) button to decode the input RTTTL song and encode the same melody into a binary RTTTL format where each note is encoded into 10 bits. The bits definition is already documented in section RTTTL binary format definition of AnyRtttl library post.\nThe AnyRtttl library can be used to play the compressed RTTTL data.\nFor example, the RTTTL code for playing Tetris theme song:\ntetris:d=4,o=5,b=160:e6,8b,8c6,8d6,16e6,16d6,8c6,8b,a,8a,\r8c6,e6,8d6,8c6,b,8b,8c6,d6,e6,c6,a,2a,8p,d6,8f6,a6,8g6,\r8f6,e6,8e6,8c6,e6,8d6,8c6,b,8b,8c6,d6,e6,c6,a,a\ris compressed to the following :\n1//Notes: 2// 10 Bits RTTTL format requires AnyRtttl \u0026amp; BitReader libraries. 3// The code \u0026amp; updates for AnyRtttl \u0026amp; BitReader libraries can be found on http://end2endzone.com 4#include \u0026lt;anyrtttl.h\u0026gt;5#include \u0026lt;binrtttl.h\u0026gt;6#include \u0026lt;pitches.h\u0026gt;7 8#include \u0026lt;bitreader.h\u0026gt;9 10//#define ANY_RTTTL_INFO 11//#define ANY_RTTTL_DEBUG 12 13//RTTTL 10 bits binary format for the following: tetris:d=4,o=5,b=160:e6,8b,8c6,8d6,16e6,16d6,8c6,8b,a,8a,8c6,e6,8d6,8c6,b,8b,8c6,d6,e6,c6,a,2a,8p,d6,8f6,a6,8g6,8f6,e6,8e6,8c6,e6,8d6,8c6,b,8b,8c6,d6,e6,c6,a,a 14//Compatible with AnyRtttl library v2.0 15const unsigned char tetris[] = {0x0A, 0x14, 0x12, 0xCE, 0x34, 0xE0, 0x82, 0x14, 0x32, 0x38, 0xE0, 0x4C, 0x2A, 0xAD, 0x34, 0xA0, 0x84, 0x0B, 0x0E, 0x28, 0xD3, 0x4C, 0x03, 0x2A, 0x28, 0xA1, 0x80, 0x2A, 0xA5, 0xB4, 0x93, 0x82, 0x1B, 0xAA, 0x38, 0xE2, 0x86, 0x12, 0x4E, 0x38, 0xA0, 0x84, 0x0B, 0x0E, 0x28, 0xD3, 0x4C, 0x03, 0x2A, 0x28, 0xA1, 0x80, 0x2A, 0xA9, 0x04}; 16const int tetris_length = 42; 17 18//BitReader support 19#ifndef USE_BITADDRESS_READ_WRITE 20BitReader bitreader; 21#else 22BitAddress bitreader; 23#endif 24 25//the following function reads numBits from the tetris buffer 26uint16_t readNextBits(uint8_t numBits) 27{ 28 uint16_t bits = 0; 29 bitreader.read(numBits, \u0026amp;bits); 30 return bits; 31} 32 33//Add the following in setup() 34//bitreader.setBuffer(tetris); 35 36//Call the following for playing tetris melody 37//anyrtttl::blocking::play10Bits(BUZZER_PIN, tetris_length, \u0026amp;readNextBits);  which reduces the original code length by 104 bytes (from 159 bytes to 55 bytes), that is a 65% size reduction.\nRTTTL to Binary (16 bits) Copy \u0026amp; paste a valid song in RTTTL format in the Command Input section.\nPress the RTTTL 2 Binary (16 bits) button to decode the input RTTTL song and encode the same melody into a binary RTTTL format where each note is encoded into 16 bits. The bits definition is already documented in section RTTTL binary format definition of AnyRtttl library post.\nThe AnyRtttl library can be used to play the compressed RTTTL data.\nFor example, the same RTTTL code for playing Tetris theme song:\ntetris:d=4,o=5,b=160:e6,8b,8c6,8d6,16e6,16d6,8c6,8b,a,8a,\r8c6,e6,8d6,8c6,b,8b,8c6,d6,e6,c6,a,2a,8p,d6,8f6,a6,8g6,\r8f6,e6,8e6,8c6,e6,8d6,8c6,b,8b,8c6,d6,e6,c6,a,a\ris compressed to the following :\n1//Notes: 2// 16 Bits RTTTL format requires AnyRtttl library. 3// The code \u0026amp; updates for AnyRtttl library can be found on http://end2endzone.com 4#include \u0026lt;anyrtttl.h\u0026gt;5#include \u0026lt;binrtttl.h\u0026gt;6#include \u0026lt;pitches.h\u0026gt;7 8//#define ANY_RTTTL_INFO 9//#define ANY_RTTTL_DEBUG 10 11//RTTTL 16 bits binary format for the following: tetris:d=4,o=5,b=160:e6,8b,8c6,8d6,16e6,16d6,8c6,8b,a,8a,8c6,e6,8d6,8c6,b,8b,8c6,d6,e6,c6,a,2a,8p,d6,8f6,a6,8g6,8f6,e6,8e6,8c6,e6,8d6,8c6,b,8b,8c6,d6,e6,c6,a,a 12//Compatible with AnyRtttl library v2.0 13const unsigned char tetris[] = {0x0A, 0x14, 0x12, 0x02, 0x33, 0x01, 0x03, 0x02, 0x0B, 0x02, 0x14, 0x02, 0x0C, 0x02, 0x03, 0x02, 0x33, 0x01, 0x2A, 0x01, 0x2B, 0x01, 0x03, 0x02, 0x12, 0x02, 0x0B, 0x02, 0x03, 0x02, 0x32, 0x01, 0x33, 0x01, 0x03, 0x02, 0x0A, 0x02, 0x12, 0x02, 0x02, 0x02, 0x2A, 0x01, 0x29, 0x01, 0x3B, 0x01, 0x0A, 0x02, 0x1B, 0x02, 0x2A, 0x02, 0x23, 0x02, 0x1B, 0x02, 0x12, 0x02, 0x13, 0x02, 0x03, 0x02, 0x12, 0x02, 0x0B, 0x02, 0x03, 0x02, 0x32, 0x01, 0x33, 0x01, 0x03, 0x02, 0x0A, 0x02, 0x12, 0x02, 0x02, 0x02, 0x2A, 0x01, 0x2A, 0x01}; 14const int tetris_length = 42; 15 16//Call the following for playing tetris melody 17//anyrtttl::blocking::play16Bits(BUZZER_PIN, tetris, tetris_length);  which reduces the original code length by 73 bytes (from 159 bytes to 86 bytes), that is a 46% size reduction.\nLicense libRTTTL Library / rtttlOptimizer\nCopyright (C) 2016 Antoine Beauchamp\nThe code \u0026amp; updates for the library can be found on http://end2endzone.com\nAUTHOR/LICENSE:\nThis library is free software; you can redistribute it and/or modify it under the terms of the GNU Lesser General Public License as published by the Free Software Foundation; either version 3.0 of the License, or (at your option) any later version.\nThis library is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License (LGPL-3.0) for more details.\nYou should have received a copy of the GNU Lesser General Public\nLicense along with this library; if not, write to the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA\nDISCLAIMER:\nThis software is furnished \u0026ldquo;as is\u0026rdquo;, without technical support, and with no warranty, express or implied, as to its usefulness for any purpose.\nDownload You can download the libRTTTL library / rtttlOptimizer by clicking on the following links:\n [ Download \u0026quot;rtttlOptimizer v1.2.195 Source Code\u0026quot; rtttlOptimizer-v1.2.195-src.zip - Downloaded 343 times - 186 KB ](http://www.end2endzone.com/download/2035/)\r[ Download \u0026quot;rtttlOptimizer v1.2.195 win32 portable\u0026quot; rtttlOptimizer-v1.2.195-win32-portable.zip - Downloaded 350 times - 720 KB ](http://www.end2endzone.com/download/1863/)\r[ Download \u0026quot;rtttlOptimizer v1.2.195 win32 Setup\u0026quot; rtttlOptimizer-v1.2.195-win32-Setup.exe - Downloaded 453 times - 834 KB ](http://www.end2endzone.com/download/1861/)\r[ Download \u0026quot;rtttlOptimizer v1.2.195 x64 portable\u0026quot; rtttlOptimizer-v1.2.195-x64-portable.zip - Downloaded 350 times - 847 KB ](http://www.end2endzone.com/download/1859/)\r[ Download \u0026quot;rtttlOptimizer v1.2.195 x64 Setup\u0026quot; rtttlOptimizer-v1.2.195-x64-Setup.exe - Downloaded 482 times - 969 KB ](http://www.end2endzone.com/download/1857/)\r",
    "ref": "/librtttl-a-c-library-with-ui-for-compressingoptimizing-the-rtttl-audio-format/"
  },{
    "title": "AnyRtttl – A feature rich arduino library for playing RTTTL melodies",
    "date": "",
    "description": "",
    "body": "Introduction The following article is about yet another Arduino library that I have written. AnyRtttl is a feature rich arduino library for playing RTTTL melodies. The library offers much more interesting features than relying on the widely available void play_rtttl(char *p) function. The AnyRtttl is a feature rich library which supports all best RTTTL features.\nSkip to the download section for quick download.\nPurpose See this post for a quick recall of the RTTTL format.\nNote that AnyRtttl library is a port from my NonBlockingRtttl arduino library which is now deprecated since development has stopped.\rAfter publishing my NonBlockingRtttl arduino library, I started using the library in more complex projects which was requiring other libraries. I quickly ran into the hell of library dependencies and library conflicts. I realized that I needed more features that could help me prototype faster.\nOther libraries available which allows you to \u0026ldquo;play\u0026rdquo; a melody in RTTTL format suffer the same issue: they are based on blocking APIs or the RTTTL data is not optimized for space.\nAnyRtttl is different since it packs multiple RTTTL related features in a single library. It supports blocking \u0026amp; non-blocking API which makes it suitable to be used by more advanced algorithm. For instance, when using the non-blocking API, the melody can be stopped when a button is pressed. The library is also compatible with external Tone libraries and it supports highly compressed RTTTL binary formats.\nLibrary features Here is a list of all library features:\n Really small increase in memory \u0026amp; code footprint compared to the usual blocking algorithm. Blocking \u0026amp; Non-Blocking modes available. Support custom tone(), noTone(), delay() and millis() functions. Compatible with external Tone libraries. Supports highly compressed RTTTL binary format. Supports RTTTL melodies stored in Program Memory (PROGMEM). Play two monolithic melodies on two different pins using 2 piezo buzzer with the help of an external Tone library.  Non-Blocking Most of the code that can \u0026ldquo;play\u0026rdquo; a melody on internet are all build the same way: sequential calls to tone() and delay() functions using hardcoded values. This type of implementation might be good for robots but not for realtime application or projects that needs to monitor pins while the song is playing.\nWith AnyRtttl non-blocking mode, your program can read/write IOs pins while playing and react on changes. Implementing a \u0026ldquo;stop\u0026rdquo; or \u0026ldquo;next song\u0026rdquo; push button is a breeze!\nExternal Tone or Timer #0 libraries The AnyRtttl library is also flexible by allowing you to use the build-in arduino tone() and noTone() functions or an implementation from any external library which makes it compatible with any Tone library in the market.\nThe library also supports custom delay() and millis() functions. If a projects requires modification to the microcontroller’s build-in Timer #0, the millis() function may be impacted and behave incorrectly. To maximize compatibility, one can supply a custom function which behaves like the original to prevent altering playback.\nBinary RTTTL The AnyRtttl library also supports playing RTTTL data which is stored as binary data instead of text. This is actually a custom implementation of the RTTTL format. Using these format, one can achieve storing an highly compressed RTTTL melody which saves memory.\nSee the Binary RTTTL format definition section for details.\nUsage Define ANY_RTTTL_INFO to enable the debugging of the library state on the serial port.\nUse ANY_RTTTL_VERSION to get the current version of the library.\nNon-blocking mode Call anyrtttl::begin() to setup the AnyRtttl library in non-blocking mode. Then call anyrtttl::play() to update the library\u0026rsquo;s state and play notes as required.\nUse anyrtttl::done() or anyrtttl::isPlaying() to know if the library is done playing the given song.\nAnytime one can call anyrtttl::stop() to stop playing the current song.\nDemo\nThe following demo show how to use the library in non-blocking mode:\n(download AnyRtttl v2.0 Non-Blocking example (751 downloads) )\n1#include \u0026lt;anyrtttl.h\u0026gt;2#include \u0026lt;binrtttl.h\u0026gt;3#include \u0026lt;pitches.h\u0026gt;4 5//project\u0026#39;s contants 6#define BUZZER_PIN 8 7const char * tetris = \u0026#34;tetris:d=4,o=5,b=160:e6,8b,8c6,8d6,16e6,16d6,8c6,8b,a,8a,8c6,e6,8d6,8c6,b,8b,8c6,d6,e6,c6,a,2a,8p,d6,8f6,a6,8g6,8f6,e6,8e6,8c6,e6,8d6,8c6,b,8b,8c6,d6,e6,c6,a,a\u0026#34;; 8const char * arkanoid = \u0026#34;Arkanoid:d=4,o=5,b=140:8g6,16p,16g.6,2a#6,32p,8a6,8g6,8f6,8a6,2g6\u0026#34;; 9const char * mario = \u0026#34;mario:d=4,o=5,b=100:16e6,16e6,32p,8e6,16c6,8e6,8g6,8p,8g,8p,8c6,16p,8g,16p,8e,16p,8a,8b,16a#,8a,16g.,16e6,16g6,8a6,16f6,8g6,8e6,16c6,16d6,8b,16p,8c6,16p,8g,16p,8e,16p,8a,8b,16a#,8a,16g.,16e6,16g6,8a6,16f6,8g6,8e6,16c6,16d6,8b,8p,16g6,16f#6,16f6,16d#6,16p,16e6,16p,16g#,16a,16c6,16p,16a,16c6,16d6,8p,16g6,16f#6,16f6,16d#6,16p,16e6,16p,16c7,16p,16c7,16c7,p,16g6,16f#6,16f6,16d#6,16p,16e6,16p,16g#,16a,16c6,16p,16a,16c6,16d6,8p,16d#6,8p,16d6,8p,16c6\u0026#34;; 10byte songIndex = 0; //which song to play when the previous one finishes 11 12void setup() { 13 pinMode(BUZZER_PIN, OUTPUT); 14 15 Serial.begin(115200); 16 Serial.println(); 17} 18 19void loop() { 20 if ( !anyrtttl::nonblocking::isPlaying() ) 21 { 22 if (songIndex == 0) 23 { 24 anyrtttl::nonblocking::begin(BUZZER_PIN, mario); 25 songIndex++; //ready for next song 26 27 //play for 5 sec then stop. 28 //note: this is a blocking code section 29 //use to demonstrate the use of stop() 30 unsigned long start = millis(); 31 while( millis() - start \u0026lt; 5000 ) 32 { 33 anyrtttl::nonblocking::play(); 34 } 35 anyrtttl::nonblocking::stop(); 36 37 } 38 else if (songIndex == 1) 39 { 40 anyrtttl::nonblocking::begin(BUZZER_PIN, arkanoid); 41 songIndex++; //ready for next song 42 } 43 else if (songIndex == 2) 44 { 45 anyrtttl::nonblocking::begin(BUZZER_PIN, tetris); 46 songIndex++; //ready for next song 47 } 48 } 49 else 50 { 51 anyrtttl::nonblocking::play(); 52 } 53}  Play 16 bits per note RTTTL Note that this mode requires that an RTTTL melody be already converted to 16-bits per note binary format.\nUse the anyrtttl::blocking::play16Bits() API for playing an RTTTL melody encoded as 16 bits per note.\nDemo\nThe following demo show how to use the library with 16-bits per note binary RTTTL:\n(download AnyRtttl v2.0 Play 16 bits example (704 downloads) )\n1#include \u0026lt;anyrtttl.h\u0026gt;2#include \u0026lt;binrtttl.h\u0026gt;3#include \u0026lt;pitches.h\u0026gt;4 5//project\u0026#39;s contants 6#define BUZZER_PIN 8 7 8//RTTTL 16 bits binary format for the following: tetris:d=4,o=5,b=160:e6,8b,8c6,8d6,16e6,16d6,8c6,8b,a,8a,8c6,e6,8d6,8c6,b,8b,8c6,d6,e6,c6,a,2a,8p,d6,8f6,a6,8g6,8f6,e6,8e6,8c6,e6,8d6,8c6,b,8b,8c6,d6,e6,c6,a,a 9//Compatible with AnyRtttl library v2.0 10//The code \u0026amp; updates for the AnyRtttl library can be found on http://end2endzone.com 11const unsigned char tetris16[] = {0x0A, 0x14, 0x12, 0x02, 0x33, 0x01, 0x03, 0x02, 0x0B, 0x02, 0x14, 0x02, 0x0C, 0x02, 0x03, 0x02, 0x33, 0x01, 0x2A, 0x01, 0x2B, 0x01, 0x03, 0x02, 0x12, 0x02, 0x0B, 0x02, 0x03, 0x02, 0x32, 0x01, 0x33, 0x01, 0x03, 0x02, 0x0A, 0x02, 0x12, 0x02, 0x02, 0x02, 0x2A, 0x01, 0x29, 0x01, 0x3B, 0x01, 0x0A, 0x02, 0x1B, 0x02, 0x2A, 0x02, 0x23, 0x02, 0x1B, 0x02, 0x12, 0x02, 0x13, 0x02, 0x03, 0x02, 0x12, 0x02, 0x0B, 0x02, 0x03, 0x02, 0x32, 0x01, 0x33, 0x01, 0x03, 0x02, 0x0A, 0x02, 0x12, 0x02, 0x02, 0x02, 0x2A, 0x01, 0x2A, 0x01}; 12const int tetris16_length = 42; 13 14void setup() { 15 pinMode(BUZZER_PIN, OUTPUT); 16 17 Serial.begin(115200); 18 Serial.println(); 19} 20 21void loop() { 22 anyrtttl::blocking::play16Bits(BUZZER_PIN, tetris16, tetris16_length); 23 24 while(true) 25 { 26 } 27}  Play 10 bits per note RTTTL Note that this mode requires that an RTTTL melody be already converted to 10-bits per note binary format.\nCreate a function that will be used by AnyRtttl library to read bits as required. The signature of the library must look like this:\nuint16_t function_name(uint8_t numBits).\nNote that this demo uses the arduino BitReader library to extract bits from the RTTTL binary buffer. The implementation of readNextBits() function delegates the job to the BitReader\u0026rsquo;s read() method.\nIn the setup() function, setup the external library that is used for reading bits: bitreader.setBuffer(tetris10);\nUse the anyrtttl::blocking::play10Bits() API for playing an RTTTL melody encoded as 10 bits per note. The 3rd argument of the function requires a pointer to the function extracting bits: \u0026amp;function_name.\nDemo\nThe following demo show how to use the library with 10-bits per note binary RTTTL:\n(download AnyRtttl v2.0 Play 10 bits example (658 downloads) )\n1#include \u0026lt;anyrtttl.h\u0026gt;2#include \u0026lt;binrtttl.h\u0026gt;3#include \u0026lt;pitches.h\u0026gt;4 5#include \u0026lt;bitreader.h\u0026gt;6 7//project\u0026#39;s contants 8#define BUZZER_PIN 8 9 10//RTTTL 10 bits binary format for the following: tetris:d=4,o=5,b=160:e6,8b,8c6,8d6,16e6,16d6,8c6,8b,a,8a,8c6,e6,8d6,8c6,b,8b,8c6,d6,e6,c6,a,2a,8p,d6,8f6,a6,8g6,8f6,e6,8e6,8c6,e6,8d6,8c6,b,8b,8c6,d6,e6,c6,a,a 11//Compatible with AnyRtttl library v2.0 12//The code \u0026amp; updates for the AnyRtttl library can be found on http://end2endzone.com 13const unsigned char tetris10[] = {0x0A, 0x14, 0x12, 0xCE, 0x34, 0xE0, 0x82, 0x14, 0x32, 0x38, 0xE0, 0x4C, 0x2A, 0xAD, 0x34, 0xA0, 0x84, 0x0B, 0x0E, 0x28, 0xD3, 0x4C, 0x03, 0x2A, 0x28, 0xA1, 0x80, 0x2A, 0xA5, 0xB4, 0x93, 0x82, 0x1B, 0xAA, 0x38, 0xE2, 0x86, 0x12, 0x4E, 0x38, 0xA0, 0x84, 0x0B, 0x0E, 0x28, 0xD3, 0x4C, 0x03, 0x2A, 0x28, 0xA1, 0x80, 0x2A, 0xA9, 0x04}; 14const int tetris10_length = 42; 15 16//bit reader support 17#ifndef USE_BITADDRESS_READ_WRITE 18BitReader bitreader; 19#else 20BitAddress bitreader; 21#endif 22uint16_t readNextBits(uint8_t numBits) 23{ 24 uint16_t bits = 0; 25 bitreader.read(numBits, \u0026amp;bits); 26 return bits; 27} 28 29void setup() { 30 pinMode(BUZZER_PIN, OUTPUT); 31 32 bitreader.setBuffer(tetris10); 33 34 Serial.begin(115200); 35 Serial.println(); 36} 37 38void loop() { 39 anyrtttl::blocking::play10Bits(BUZZER_PIN, tetris10_length, \u0026amp;readNextBits); 40 41 while(true) 42 { 43 } 44}  Custom Tone function (a.k.a. RTTTL 2 code) This demo shows how custom functions can be used by the AnyRtttl library. This example shows how to convert an RTTTL melody to arduino code.\nFirst define replacement functions like the following:\n1void serialTone(byte pin, uint16_t frequency, uint32_t duration) { 2 Serial.print(\u0026#34;tone(\u0026#34;); 3 Serial.print(pin); 4 Serial.print(\u0026#34;,\u0026#34;); 5 Serial.print(frequency); 6 Serial.print(\u0026#34;,\u0026#34;); 7 Serial.print(duration); 8 Serial.println(\u0026#34;);\u0026#34;); 9} 10 11void serialNoTone(byte pin) { 12 Serial.print(\u0026#34;noTone(\u0026#34;); 13 Serial.print(pin); 14 Serial.println(\u0026#34;);\u0026#34;); 15} 16 17void serialDelay(uint32_t duration) { 18 Serial.print(\u0026#34;delay(\u0026#34;); 19 Serial.print(duration); 20 Serial.println(\u0026#34;);\u0026#34;); 21} Each new functions prints the function call \u0026amp; arguments to the serial port.\nIn the setup() function, setup the AnyRtttl library to use the new functions:\n1//Use custom functions 2anyrtttl::setToneFunction(\u0026amp;serialTone); 3anyrtttl::setNoToneFunction(\u0026amp;serialNoTone); 4anyrtttl::setDelayFunction(\u0026amp;serialDelay); Use the anyrtttl::blocking::play() API for \u0026ldquo;playing\u0026rdquo; an RTTTL melody and monitor the output of the serial port to see the actual arduino code generated by the library.\nDemo\nThe following demo show how to use the library with custom functions:\n(download AnyRtttl v2.0 RTTTL 2 code example (657 downloads) )\n1#include \u0026lt;anyrtttl.h\u0026gt;2#include \u0026lt;binrtttl.h\u0026gt;3#include \u0026lt;pitches.h\u0026gt;4 5//project\u0026#39;s contants 6#define BUZZER_PIN 8 7const char * tetris = \u0026#34;tetris:d=4,o=5,b=160:e6,8b,8c6,8d6,16e6,16d6,8c6,8b,a,8a,8c6,e6,8d6,8c6,b,8b,8c6,d6,e6,c6,a,2a,8p,d6,8f6,a6,8g6,8f6,e6,8e6,8c6,e6,8d6,8c6,b,8b,8c6,d6,e6,c6,a,a\u0026#34;; 8 9//******************************************************************************************************************* 10// The following replacement functions prints the function call \u0026amp; parameters to the serial port. 11//******************************************************************************************************************* 12void serialTone(byte pin, uint16_t frequency, uint32_t duration) { 13 Serial.print(\u0026#34;tone(\u0026#34;); 14 Serial.print(pin); 15 Serial.print(\u0026#34;,\u0026#34;); 16 Serial.print(frequency); 17 Serial.print(\u0026#34;,\u0026#34;); 18 Serial.print(duration); 19 Serial.println(\u0026#34;);\u0026#34;); 20} 21 22void serialNoTone(byte pin) { 23 Serial.print(\u0026#34;noTone(\u0026#34;); 24 Serial.print(pin); 25 Serial.println(\u0026#34;);\u0026#34;); 26} 27 28void serialDelay(uint32_t duration) { 29 Serial.print(\u0026#34;delay(\u0026#34;); 30 Serial.print(duration); 31 Serial.println(\u0026#34;);\u0026#34;); 32} 33 34void setup() { 35 pinMode(BUZZER_PIN, OUTPUT); 36 37 Serial.begin(115200); 38 Serial.println(); 39 40 //Use custom functions 41 anyrtttl::setToneFunction(\u0026amp;serialTone); 42 anyrtttl::setNoToneFunction(\u0026amp;serialNoTone); 43 anyrtttl::setDelayFunction(\u0026amp;serialDelay); 44} 45 46void loop() { 47 anyrtttl::blocking::play(BUZZER_PIN, tetris); 48 49 while(true) 50 { 51 } 52}  Binary RTTTL format definition\n The following section defines the field order and size (in bits) required for encoding / decoding of each melody as binary RTTTL.\nNote that all fields definition are defined in LSB to MSB order.\rThe first 16 bits stores the RTTTL default section which is defined as the following:\n Default duration index, 3 bits, with values within [0, 7] range, matches the index used for getNoteDurationFromIndex() API. Default octave index, 2 bits, with values within [0, 3] range, matches the index used for getNoteOctaveFromIndex() API. Beats per minutes (BPM), 10 bits, with values within [1, 900]. Padding, 1 bit  Next is each note\u0026rsquo;s of the melody. Each note is encoded as 10 bits (or 16 bits) per note and is defined as the following:\n Duration index, 3 bits, with values within [0, 7] range, matches the index used for getNoteDurationFromIndex() API. Note letter index, 3 bits, with values within [0, 7] range, matches the index used for getNoteLetterFromIndex() API. Pound, 1 bit, defines if the note is pounded or not. Dotted, 1 bit, defines if the note is dotted or not. Octave index, 2 bits, with values within [0, 3] range, matches the index used for getNoteOctaveFromIndex() API. Padding, 6 bits, optional. See sections below.  The last field of a note (defined as Padding) is an optional 6 bits field. The AnyRtttl library supports both 10 bits per note and 16 bits per note definitions. Use the appropriate API for playing both format.\r10 bits per note (no padding) Each RTTTL note is encoded into 10 bits which is the minimum size of a note. This storage method is the best compression method for storing RTTTL melodies and reduces the usage of the dynamic memory to the minimum.\nHowever, since all notes are not aligned on multiple of 8 bits, addressing each note by an offset is impossible which makes the playback harder. Each notes must be deserialized one after the other. An additional library is required for deserializing a note from a buffer using blocks of 10 bits which may increase the program storage space footprint.\nAn external arduino library must also be used to allow the AnyRtttl library to consume bits as needed. The arduino BitReader library may be used for handling bit deserialization but any library that can extract a given number of bits from a buffer would work.\n16 bits per note (with padding) Each RTTTL note is encoded into 16 bits which is much better than the average 3.28 bytes per note text format. This storage method is optimum for storing RTTTL melodies and reduces the usage of the dynamic memory without increasing to much program storage space.\nAll notes are aligned on 16 bits. Addressing each note by an offset allows an easy playback. Only the first 10 bits of each 16 bits block is used. The value of the padding field is undefined.\nPlayback The following AnyRtttl blocking APIs are available for playing both format:\n 10 bits per note: play10Bits(). 16 bits per note: play16Bits().  License This library is free software; you can redistribute it and/or modify it under the terms of the GNU Lesser General Public License as published by the Free Software Foundation; either version 3.0 of the License, or (at your option) any later version.\nThis library is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License (LGPL-3.0) for more details.\nYou should have received a copy of the GNU Lesser General Public License along with this library; if not, write to the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA\nDISCLAIMER:\nThis software is furnished \u0026ldquo;as is\u0026rdquo;, without technical support, and with no warranty, express or implied, as to its usefulness for any purpose.\nDownload You can download the AnyRtttl library by clicking on the following link:\n [ Download \u0026quot;AnyRtttl v2.1.229 arduino library\u0026quot; AnyRtttl-v2.1.229.zip - Downloaded 571 times - 54 KB ](http://www.end2endzone.com/download/1988/)\r",
    "ref": "/anyrtttl-a-feature-rich-arduino-library-for-playing-rtttl-melodies/"
  },{
    "title": "win32Arduino: a win32 library that implements most arduino functions",
    "date": "",
    "description": "",
    "body": "Introduction Please note that win32Arduino source code is now moved to GitHub. Source code can be downloaded from the project\u0026rsquo;s GitHub page.\nAfter implementing many arduino library, I realized that unit testing a library is harder than I though. Most of the time, the library does not even require advanced arduino functionalities and could be tested outside of the arduino platform.\nThe win32Arduino is a solution to this issue.\nSkip to the download section for quick download.\nPurpose win32Arduino is a Windows implementation of the most used arduino functions which allows an arduino library developer to unit test his code outside of the arduino platform.\nThis library allows a windows user to easily test an arduino library using your testing framework of choice. For instance, the unit tests of win32Arduino library are executed using the Google Test framework.\nLibrary features Possible use are:\n Implements most arduino functions. Allows a developer to tests a library outside of the arduino platform. Quicker unit test execution. Supports realtime millis() function or simulated millis() and micros() functions.  Library dependencies No external libraries are required to use the win32Arduino library. However, the Google Test library is required for self unit testing the library.\nProject files are available for Visual Studio 2008 only.\nUsage The following instructions show how to easily test an arduino library using the Google Test framework. It assumes that you are already familiar with the test API.\n Create an executable project and configure the main() function to launch Google Test\u0026rsquo;s RUN_ALL_TESTS() macro. Create a static library project which will \u0026ldquo;wrap\u0026rdquo; all the arduino files of the library you need to test. Modify the static library\u0026rsquo;s Additionnal Include Directories to point to win32Arduino library. This allows the wrapping library to resolve all arduino.h includes and all arduino symbols using the win32Arduino library.  The project should compile properly without errors or unresolved extensions allowing you to properly unit test each functionality.\nFor unit testing the library, the following environment variables must be defined:\n GTEST_INCLUDE GTEST_LIBRARY_DIR GTEST_LIBRARY_X86_DEBUG GTEST_LIBRARY_X86_RELEASE GTEST_LIBRARY_X64_DEBUG GTEST_LIBRARY_X64_RELEASE  License This library is free software; you can redistribute it and/or modify it under the terms of the GNU Lesser General Public License as published by the Free Software Foundation; either version 3.0 of the License, or (at your option) any later version.\nThis library is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License (LGPL-3.0) for more details.\nYou should have received a copy of the GNU Lesser General Public License along with this library; if not, write to the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA\nDISCLAIMER:\nThis software is furnished \u0026ldquo;as is\u0026rdquo;, without technical support, and with no warranty, express or implied, as to its usefulness for any purpose.\nDownload You can download the win32Arduino library by clicking on the following link:\nPlease note that download links are now deprecated. Binary version of msbuildreorder can be downloaded directly from the project\u0026rsquo;s GitHub page.\r",
    "ref": "/win32arduino-a-win32-library-that-implements-most-arduino-functions/"
  },{
    "title": "svnpropertylog – A script which finds all revisions where a specific subversion property has changed",
    "date": "",
    "description": "",
    "body": "Purpose The subversion application does not offer native support for identifying changes to subversion properties as easily as changes to files.\nThe purpose of this script is to allows a subversion user to find all revisions where a change to a specific property occurred. In other words, it\u0026rsquo;s a \u0026ldquo;show log for subversion properties\u0026rdquo;.\nSkip to the download section for quick download.\nNote that svnpropertylog is only available for Windows and has been tested on Windows 7 only.\rUsage The script has 5 command line arguments which are:\n Oldest revision number Newest revision number File or folder URL Property name Show property values? ( Must be or **1 **)  Execution (command line) The script is written in VBScript. Use the following to execute the script from a batch file (*.bat) :\n1@echo off 2cscript //nologo \u0026#34;%~dp0svnpropertylog.vbs\u0026#34; 9 13 \u0026#34;http://localhost/svn/svnpropertylog/tests/folder\u0026#34; \u0026#34;svn:externals\u0026#34; 1 3pause UI \nsvnpropertylog - Select Subversion Property\nA GUI application is also available. From a file explorer window, double-click on svnpropertylogGui and follow on-screen instructions: the UI will prompt the user for each command line argument and then launch the script.\nOutput On execution, the following output is produced by the script:\nsvnpropertylog v1.1\rExtracting property svn:externals within revision 9 to 13 from http://localhost/svn/svnpropertylog/tests/folder...\rExtracting... 0%\rExtracting... 25%\rExtracting... 50%\rExtracting... 75%\rExtracting... 100%\rComparing properties...\rProperty svn:externals has been changed in revision 13\r===============================================================================\rrevision: 13\rhttp://localhost/svn/svnpropertylog/tests/sample.txt@8 sample.txt\rhttp://localhost/svn/svnpropertylog/tests@7 tests\r===============================================================================\rProperty svn:externals has been changed in revision 10\r===============================================================================\rrevision: 10\rhttp://localhost/svn/svnpropertylog/tests/sample.txt@8 sample.txt\r===============================================================================\rPress any key to continue . . .\rLicense This library is free software; you can redistribute it and/or modify it under the terms of the GNU Lesser General Public License as published by the Free Software Foundation; either version 3.0 of the License, or (at your option) any later version.\nThis library is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License (LGPL-3.0) for more details.\nYou should have received a copy of the GNU Lesser General Public License along with this library; if not, write to the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA\nDISCLAIMER:\nThis software is furnished \u0026ldquo;as is\u0026rdquo;, without technical support, and with no warranty, express or implied, as to its usefulness for any purpose.\nDownload You can download svnpropertylog by clicking on the following link:\n [ Download \u0026quot;svnpropertylog v1.1.29\u0026quot; svnpropertylog-v1.1.29.zip - Downloaded 346 times - 8 KB ](http://www.end2endzone.com/download/1908/)\r",
    "ref": "/svnpropertylog-a-script-which-finds-all-revisions-where-a-specific-subversion-property-has-changed/"
  },{
    "title": "libMIDI – A C++ open-source library for generating single tone melodies in MIDI format",
    "date": "",
    "description": "",
    "body": "Introduction The following article is yet another library that I have written. libMIDI is a c++ library for generating single tone melodies (monolithic melodies) in MIDI format.\nSkip to the download section for quick download.\nPurpose I mostly develop on the Windows platform. When I try to generate basic sounds and tone, I use the Microsoft Beep function. This API is quite old and is far from accurate when dealing with multiple short duration tones (less than 100ms). Also when you make two consecutive calls to the Beep() function will ear a tick sound between each calls.\nOne way to solve this issue is to use the MIDI sound format and use the Microsoft Windows API to play a MIDI file.\nThe library is develop \u0026amp; design to be lightweight and have a very quick learning curve. It was only designed as a mean to convert melodies made in tones (frequency, duration pairs) to MIDI sound format.\nThe library may be used on other platforms too for generating files which can be played using the platform\u0026rsquo;s own media player.\nNote that libMIDI library was not written to manipulate the MIDI sound format. There is no plan in improving/updating the library in order to support MIDI file parsing or supporting multiple tracks at once.\rLibrary Functionalities / Features Possible use are:\n Generate notes using a tone frequency and duration. Supports custom delays, volumes, melody name \u0026amp; instruments.  \rDefines multiple speed requirements : \rTicks (or pulses) per quarters notes.\r\r* Tempo (microseconds per quarter note).\r* BPM (beats per minute).\r\r Simple unit conversion API:  BPM to/from Tempo. Ticks to/from microseconds.    Requirements The library has some compilation requirements and library dependencies which are:\n Only Visual Studio 2008 projects files are available. Files can be manually converted to other version as required. Supporting other compilers is not currently planned. The Google Test v1.6 library is required for running test cases.  Usage Each melody is build using a single class called MidiFile. Create an instance and sets your basic requirements like name, speed, and MIDI standard, using the appropriate setter functions. Notes can be added one after the other using the addNote() method. The melody is built in memory. Once the melody is completed, use the save() method to generate a valid MIDI file on disk.\nFor example the following code can be used to generate Super Mario Bros. 1 up theme sound:\n1MidiFile f; 2 3f.setMidiType(MidiFile::MIDI_TYPE_0); 4f.setInstrument(0x51); 5f.setTempo(0x051615); 6f.setName(\u0026#34;mario1up\u0026#34;); 7f.setVolume(0x64); 8 9//play mario 1-up melody. 10f.addNote(1319,125); 11f.addNote(1568,125); 12f.addNote(2637,125); 13f.addNote(2093,125); 14f.addNote(2349,125); 15f.addNote(3136,125); 16 17bool saved = f.save(\u0026#34;mario1up.mid\u0026#34;); License libMIDI Library\nCopyright (C) 2016 Antoine Beauchamp\nThe code \u0026amp; updates for the library can be found on http://end2endzone.com\nAUTHOR/LICENSE:\nThis library is free software; you can redistribute it and/or modify it under the terms of the GNU Lesser General Public License as published by the Free Software Foundation; either version 3.0 of the License, or (at your option) any later version.\nThis library is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License (LGPL-3.0) for more details.\nYou should have received a copy of the GNU Lesser General Public\nLicense along with this library; if not, write to the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA\nDISCLAIMER:\nThis software is furnished \u0026ldquo;as is\u0026rdquo;, without technical support, and with no warranty, express or implied, as to its usefulness for any purpose.\nDownload You can download the libMIDI library by clicking on the following link:\n  [ Download \u0026quot;libMIDI-v1.0.0.40.zip\u0026quot; libMIDI-v1.0.0.40.zip - Downloaded 433 times - 43 KB ](http://www.end2endzone.com/download/1893/)\r  ",
    "ref": "/libmidi-a-c-open-source-library-for-generating-single-tone-melodies-in-midi-format/"
  },{
    "title": "How to multiplex RC Transmitter switches into a single channel",
    "date": "",
    "description": "",
    "body": "Introduction In a personal project, I wanted to add 2 new devices to an existing quadcopter. The quadcopter was equipped with a 6-channel receiver meaning I only had 1 spare channel to control the 2 devices:\n          CH 1 : Throttle   CH 2 : Rudder   CH 3 : Ailerons   CH 4 : Elevator   CH 5 : Flight mode   CH 6 : ???   The following article explains how I manage to solve the issue:      How can I control more than one device using a single channel.\nEDIT: To make all mixing pre-calculations easier, do not hesitate to use my Mixing Calculator for R/C Transmitter (it\u0026rsquo;s an Excel Sheet!)\rI could have used an 8-channel receiver to solve this but I did not had a free receiver that I could spare. This guide will show you how to multiplex RC transmitter switches (inputs) into a\nsingle channel.\nUse a microcontroller For this type of project, 7 channels is usually required. The easiest method would have been to replace the receiver but since I like the DIY way, I decided to multiplex two switches into the 6th channel and use a microcontroller to read the signal and demultiplex each switches states.\nNote: This is only valid if there is a microcontroller connected with the receiver that _ you _ can program to demultiplex the signal. Do not expect your proprietary flight controller to be able to understand your signal.\rMultiplexing switches (only) Design The following section illustrate the design required for multiplexing as much information as possible into a single channel.\nCreate blocks The generic idea is to divide the whole range of the signal (from -150% to 150%) into blocks or bands. Each block correspond to a unique configuration of all switches. Then you create the required mixes to move/update the signal value to the block corresponding to the switches unique configuration.\nMinimum number of blocks The following explain what is the minimum number of blocks that are required for multiplexing a given amount of switches. The number of required blocks for a given number of switches is defined by the all the unique combinations that are possible with the switches. To calculate this, you multiply the number of combinations of each switch by each other. For instance: To multiplex three 2-position switches, 8 blocks are required (2*2*2) which makes 8 unique combinations:\n**Block Number**\r**Switches**\r\r**2-pos**\r**2-pos**\r**2-pos**\r\r\r\r\r\r\r\r\r1\r\r\r1\r\r\r2\r\r1\r\r\r\r3\r\r1\r1\r\r\r4\r1\r\r\r\r\r5\r1\r\r1\r\r\r6\r1\r1\r\r\r\r7\r1\r1\r1\r\r\rTo multiplex two 2-position and one 3-position switches, 12 blocks are required (2\\*2\\*3) which makes 12 unique combinations: **Block Number**\r**Switches**\r\r**2-pos**\r**2-pos**\r**3-pos**\r\r\r\r\r\r\r\r\r1\r\r\r1\r\r\r2\r\r\r2\r\r\r3\r\r1\r\r\r\r4\r\r1\r1\r\r\r5\r\r1\r2\r\r\r6\r1\r\r\r\r\r7\r1\r\r1\r\r\r8\r1\r\r2\r\r\r9\r1\r1\r\r\r\r10\r1\r1\r1\r\r\r11\r1\r1\r2\r\r\rNote that each switch also requires a mix for working. The amount of switches you can multiplex is then also limited by the amount of mixes you can define in your transmitter.\rSupporting 3-position switches In your design, you will have to decide to support or not 3-position switches. If you do, it will reduce the amount of switches you can multiplex into a single channel since each switches requires 3 blocks instead of 2 blocks. An acceptable compromise is to use this switch as a 2-position switch. Position 1 would then be identical as Position 0 (OFF) and Position 2 would be ON.\nDead Zone Blocks cannot be juxtaposed to each other and dead zones must be inserted between (or within) blocks. This is required since each transmitters and micro-controllers do not offer the same performance and precision. Dead zones are required since a micro-controller might read data from block 5 but the next pulse of the same signal may introduce a 5uS delay, which would correspond to a different block (ie block 6). For instance, if the following blocks are defined:\n   Block Min Max      -150% -141%   1 -140% -131%   2 -130% -121%   3 -120% -111%    The difference between -131% (block 1) and -130% (block 2) is ~5uS. If blocks would be juxtaposed, then the micro-controller could sometimes read block 1 and sometimes block 2 which does not mean the same thing at all. This delay might be from the receiver who does not provide a perfect pulse length or from the micro-controller who does not detect the end of the pulse with enough precision. Both errors can be avoided with dead zones. By introducing a dead zone of 5 steps within blocks (of 10 steps), the same blocks would then become something like:\n   Block Min Max Mix Target     DEAD -150% -148%     -147% -143% -145%   DEAD -142% -138%    1 -137% -133% -135%   DEAD -132% -128%    2 -127% -123% -125%   DEAD -122% -113%    3 -117% -113% -115%    The block size must also have a minimum size to account for the same effect. If the block size is too small, the micro-controller might read data from a dead zone and would not know what to do. The more accurate the receiver and the micro-controller, the smaller the block size and dead zone size can be. Mixes should be created to move the actual signal values to target the middle of the effective block area (not the dead zone). See the\nMixes section for more details.\nBlock size Based on my observation, the best values for block size and dead zone size are as follow: A block size of 10 steps is big enough to allow multiplexing a high amount of switches while leaving enough space for a reasonable dead zone between blocks. At the same time, a block size of 10 steps allows the blocks to be rounded easily which makes blocks offsets easy to calculate. The acceptable dead zone size (considering the average precision of most micro-controller and receivers), does not need to be bigger than 2 steps. This configuration leaves two blocks spaced by 4 steps which is enough to prevent issues. The following values are then considered \u0026ldquo;safe and tested\u0026rdquo; to get good and stable results:\n          Block size : 10 steps   Dead zone : 2 steps   Effective size : 6 steps    Mixes The following section defines mix that are required to implement two basic scenarios.\nNote that you can easily calculate the effect of a given mix by using my RC Transmitter Mix Calculator to identify the minimum, middle and maximum values of a mix.\rFour 2-position switches The following table shows the signal range and the middle of the effective area for each block. It is calculated using a block size of 10 steps and a dead zone of 2 steps which makes the effective block size to 6 steps:\nBlock Number\rBlock Offsets\rMix Target\r\rDead\rEffective\rDead\r\r\r\r-150\r-149\r-148\r-143\r-142\r-141\r-146\r\r\r1\r-140\r-139\r-138\r-133\r-132\r-131\r-136\r\r\r2\r-130\r-129\r-128\r-123\r-122\r-121\r-126\r\r\r3\r-120\r-119\r-118\r-113\r-112\r-111\r-116\r\r\r4\r-110\r-109\r-108\r-103\r-102\r-101\r-106\r\r\r5\r-100\r-99\r-98\r-93\r-92\r-91\r-96\r\r\r6\r-90\r-89\r-88\r-83\r-82\r-81\r-86\r\r\r7\r-80\r-79\r-78\r-73\r-72\r-71\r-76\r\r\r8\r-70\r-69\r-68\r-63\r-62\r-61\r-66\r\r\r9\r-60\r-59\r-58\r-53\r-52\r-51\r-56\r\r\r10\r-50\r-49\r-48\r-43\r-42\r-41\r-46\r\r\r11\r-40\r-39\r-38\r-33\r-32\r-31\r-36\r\r\r12\r-30\r-29\r-28\r-23\r-22\r-21\r-26\r\r\r13\r-20\r-19\r-18\r-13\r-12\r-11\r-16\r\r\r14\r-10\r-9\r-8\r-3\r-2\r-1\r-6\r\r\r15\r\r1\r2\r7\r8\r9\r5\r\r\rThe following mixes must be created to multiplex all switches unique configurations: Mix info\rMix Output\r\rNumber\rSwitch\rHigh\rLow\rOffset\r\r1\r\r\r\rA\r-100\r100\r\r-100\r-100\r\r\r1\rA\r-46\r36\r\r-46\r-36\r\r\r2\rB\r\r-20\r\r\r20\r\r\r3\rC\r\r-40\r\r\r40\r\r\r4\rD\r\r-80\r\r\r80\r\r\rNote that first 2 mix are mapped to switch A. This is required since the minimum value of a High rate mix is -125% which gives a final mix value of -125% at Position 0. The only way to get a lower value (ie -146) would be to offset the mix (by -17) but then the Low rate value would have the same issue.\rAs you can see, the sum of all combined mixes matches the middle section of each effective block:\nBlock Number\rSwitches\rMixes\r\rD\rC\rB\rA\r\r1\r2\r3\r4\rSum\r\r\r\r\r\r\r\r-100\r-46\r\r\r\r-146\r\r\r1\r\r\r\r1\r-100\r-36\r\r\r\r-136\r\r\r2\r\r\r1\r\r-100\r-46\r20\r\r\r-126\r\r\r3\r\r\r1\r1\r-100\r-36\r20\r\r\r-116\r\r\r4\r\r1\r\r\r-100\r-46\r\r40\r\r-106\r\r\r5\r\r1\r\r1\r-100\r-36\r\r40\r\r-96\r\r\r6\r\r1\r1\r\r-100\r-46\r20\r40\r\r-86\r\r\r7\r\r1\r1\r1\r-100\r-36\r20\r40\r\r-76\r\r\r8\r1\r\r\r\r-100\r-46\r\r\r80\r-66\r\r\r9\r1\r\r\r1\r-100\r-36\r\r\r80\r-56\r\r\r10\r1\r\r1\r\r-100\r-46\r20\r\r80\r-46\r\r\r11\r1\r\r1\r1\r-100\r-36\r20\r\r80\r-36\r\r\r12\r1\r1\r\r\r-100\r-46\r\r40\r80\r-26\r\r\r13\r1\r1\r\r1\r-100\r-36\r\r40\r80\r-16\r\r\r14\r1\r1\r1\r\r-100\r-46\r20\r40\r80\r-6\r\r\r15\r1\r1\r1\r1\r-100\r-36\r20\r40\r80\r4\r\r\rUse the [ Cheat Sheet for Multiplexing four 2-position switches (301 downloads) ](http://www.end2endzone.com/download/1486/ \u0026quot;Version 1.0\u0026quot;) for calculating all block offset when multiplexing four 2-position switches.  Three 2-position and one 3-position switches The following table shows the signal range and the middle of the effective area for each block. It is calculated using a block size of 10 steps and a dead zone of 2 steps which makes the effective block size to 6 steps:\nBlock Number\rBlock Offsets\rMix Target\r\rDead\rEffective\rDead\r\r\r\r-150\r-149\r-148\r-143\r-142\r-141\r-146\r\r\r1\r-140\r-139\r-138\r-133\r-132\r-131\r-136\r\r\r2\r-130\r-129\r-128\r-123\r-122\r-121\r-126\r\r\r3\r-120\r-119\r-118\r-113\r-112\r-111\r-116\r\r\r4\r-110\r-109\r-108\r-103\r-102\r-101\r-106\r\r\r5\r-100\r-99\r-98\r-93\r-92\r-91\r-96\r\r\r6\r-90\r-89\r-88\r-83\r-82\r-81\r-86\r\r\r7\r-80\r-79\r-78\r-73\r-72\r-71\r-76\r\r\r8\r-70\r-69\r-68\r-63\r-62\r-61\r-66\r\r\r9\r-60\r-59\r-58\r-53\r-52\r-51\r-56\r\r\r10\r-50\r-49\r-48\r-43\r-42\r-41\r-46\r\r\r11\r-40\r-39\r-38\r-33\r-32\r-31\r-36\r\r\r12\r-30\r-29\r-28\r-23\r-22\r-21\r-26\r\r\r13\r-20\r-19\r-18\r-13\r-12\r-11\r-16\r\r\r14\r-10\r-9\r-8\r-3\r-2\r-1\r-6\r\r\r15\r\r1\r2\r7\r8\r9\r5\r\r\r16\r10\r11\r12\r17\r18\r19\r15\r\r\r17\r20\r21\r22\r27\r28\r29\r25\r\r\r18\r30\r31\r32\r37\r38\r39\r35\r\r\r19\r40\r41\r42\r47\r48\r49\r45\r\r\r20\r50\r51\r52\r57\r58\r59\r55\r\r\r21\r60\r61\r62\r67\r68\r69\r65\r\r\r22\r70\r71\r72\r77\r78\r79\r75\r\r\r23\r80\r81\r82\r87\r88\r89\r85\r\r\rThe following mixes must be created to multiplex all switches unique configurations: Mix info\rMix Output\r\rNumber\rSwitch\rHigh\rLow\rOffset\r\r1\r2\r\r\r\rA\r\r68\r100\r\r-68\r-136\r\r\r1\rA\r-68\r\r-100\r-136\r-68\r\r\r\r2\rA\r-10\r-10\r\r-10\r\r10\r\r\r3\rB\r\r-30\r\r\r\r30\r\r\r4\rC\r\r-60\r\r\r\r60\r\r\r5\rD\r\r-120\r\r\r\r120\r\r\rNote that first 3 mix are mapped to switch A which is the 3-position switch. The first 2 mix are use to get a constant -136 on all positions. Then the 3rd mix moves the signal value over the first 3 blocks (to the previous, current or next block). As far as I know, there is no way to achieve the same result with only 2 mixes.\rAs you can see, the sum of all combined mixes matches the middle section of each effective block:\nBlock Number\rSwitches\rMixes\r\rD\rC\rB\rA\r\r1\r2\r3\r4\r5\rSum\r\r\r\r\r\r\r\r\r-136\r-10\r\r\r\r-146\r\r\r1\r\r\r\r1\r-68\r-68\r\r\r\r\r-136\r\r\r2\r\r\r\r2\r-136\r\r10\r\r\r\r-126\r\r\r3\r\r\r1\r\r\r-136\r-10\r30\r\r\r-116\r\r\r4\r\r\r1\r1\r-68\r-68\r\r30\r\r\r-106\r\r\r5\r\r\r1\r2\r-136\r\r10\r30\r\r\r-96\r\r\r6\r\r1\r\r\r\r-136\r-10\r\r60\r\r-86\r\r\r7\r\r1\r\r1\r-68\r-68\r\r\r60\r\r-76\r\r\r8\r\r1\r\r2\r-136\r\r10\r\r60\r\r-66\r\r\r9\r\r1\r1\r\r\r-136\r-10\r30\r60\r\r-56\r\r\r10\r\r1\r1\r1\r-68\r-68\r\r30\r60\r\r-46\r\r\r11\r\r1\r1\r2\r-136\r\r10\r30\r60\r\r-36\r\r\r12\r1\r\r\r\r\r-136\r-10\r\r\r120\r-26\r\r\r13\r1\r\r\r1\r-68\r-68\r\r\r\r120\r-16\r\r\r14\r1\r\r\r2\r-136\r\r10\r\r\r120\r-6\r\r\r15\r1\r\r1\r\r\r-136\r-10\r30\r\r120\r4\r\r\r16\r1\r\r1\r1\r-68\r-68\r\r30\r\r120\r14\r\r\r17\r1\r\r1\r2\r-136\r\r10\r30\r\r120\r24\r\r\r18\r1\r1\r\r\r\r-136\r-10\r\r60\r120\r34\r\r\r19\r1\r1\r\r1\r-68\r-68\r\r\r60\r120\r44\r\r\r20\r1\r1\r\r2\r-136\r\r10\r\r60\r120\r54\r\r\r21\r1\r1\r1\r\r\r-136\r-10\r30\r60\r120\r64\r\r\r22\r1\r1\r1\r1\r-68\r-68\r\r30\r60\r120\r74\r\r\r23\r1\r1\r1\r2\r-136\r\r10\r30\r60\r120\r84\r\r\rUse the [ Cheat Sheet for Multiplexing three 2-position and one 3-position switches (331 downloads) ](http://www.end2endzone.com/download/1482/ \u0026quot;Version 1.0\u0026quot;) for calculating all block offset when multiplexing three 2-position switches and one 3-position switch.  Three 3-position switches The following table shows the signal range and the middle of the effective area for each block. Again, it is calculated using a block size of 10 steps and a dead zone of 2 steps which makes the effective block size to 6 steps:\n  Block Number\rBlock Offsets\rMix Target\r\rDead\rEffective\rDead\r\r\r\r-134\r-133\r-132\r-127\r-126\r-125\r-130\r\r\r1\r-124\r-123\r-122\r-117\r-116\r-115\r-120\r\r\r2\r-114\r-113\r-112\r-107\r-106\r-105\r-110\r\r\r3\r-104\r-103\r-102\r-97\r-96\r-95\r-100\r\r\r4\r-94\r-93\r-92\r-87\r-86\r-85\r-90\r\r\r5\r-84\r-83\r-82\r-77\r-76\r-75\r-80\r\r\r6\r-74\r-73\r-72\r-67\r-66\r-65\r-70\r\r\r7\r-64\r-63\r-62\r-57\r-56\r-55\r-60\r\r\r8\r-54\r-53\r-52\r-47\r-46\r-45\r-50\r\r\r9\r-44\r-43\r-42\r-37\r-36\r-35\r-40\r\r\r10\r-34\r-33\r-32\r-27\r-26\r-25\r-30\r\r\r11\r-24\r-23\r-22\r-17\r-16\r-15\r-20\r\r\r12\r-14\r-13\r-12\r-7\r-6\r-5\r-10\r\r\r13\r-4\r-3\r-2\r3\r4\r5\r1\r\r\r14\r6\r7\r8\r13\r14\r15\r11\r\r\r15\r16\r17\r18\r23\r24\r25\r21\r\r\r16\r26\r27\r28\r33\r34\r35\r31\r\r\r17\r36\r37\r38\r43\r44\r45\r41\r\r\r18\r46\r47\r48\r53\r54\r55\r51\r\r\r19\r56\r57\r58\r63\r64\r65\r61\r\r\r20\r66\r67\r68\r73\r74\r75\r71\r\r\r21\r76\r77\r78\r83\r84\r85\r81\r\r\r22\r86\r87\r88\r93\r94\r95\r91\r\r\r23\r96\r97\r98\r103\r104\r105\r101\r\r\r24\r106\r107\r108\r113\r114\r115\r111\r\r\r25\r116\r117\r118\r123\r124\r125\r121\r\r\r26\r126\r127\r128\r133\r134\r135\r131\r\r\rThe following mixes must be created to multiplex all switches unique configurations: Mix info\rMix Output\r\rNumber\rSwitch\rHigh\rLow\rOffset\r\r1\r2\r\r\r\rA\r-10\r-10\r\r-10\r\r10\r\r\r1\rB\r-30\r-30\r\r-30\r\r30\r\r\r2\rC\r-90\r-90\r\r-90\r\r90\r\r\rNote that only 3 mix is required for multiplexing three 3-position switches. Mixes are also centered around 0 (instead of starting at -150).\rAs you can see, the sum of all combined mixes matches the middle section of each effective block:\n  Block Number\rSwitches\rMixes\r\rC\rB\rA\r\r1\r2\rSum\r\r\r\r\r\r\r-10\r-30\r-90\r-130\r\r\r1\r\r\r1\r\r-30\r-90\r-120\r\r\r2\r\r\r2\r10\r-30\r-90\r-110\r\r\r3\r\r1\r\r-10\r\r-90\r-100\r\r\r4\r\r1\r1\r\r\r-90\r-90\r\r\r5\r\r1\r2\r10\r\r-90\r-80\r\r\r6\r\r2\r\r-10\r30\r-90\r-70\r\r\r7\r\r2\r1\r\r30\r-90\r-60\r\r\r8\r\r2\r2\r10\r30\r-90\r-50\r\r\r9\r1\r\r\r-10\r-30\r\r-40\r\r\r10\r1\r\r1\r\r-30\r\r-30\r\r\r11\r1\r\r2\r10\r-30\r\r-20\r\r\r12\r1\r1\r\r-10\r\r\r-10\r\r\r13\r1\r1\r1\r\r\r\r\r\r\r14\r1\r1\r2\r10\r\r\r10\r\r\r15\r1\r2\r\r-10\r30\r\r20\r\r\r16\r1\r2\r1\r\r30\r\r30\r\r\r17\r1\r2\r2\r10\r30\r\r40\r\r\r18\r2\r\r\r-10\r-30\r90\r50\r\r\r19\r2\r\r1\r\r-30\r90\r60\r\r\r20\r2\r\r2\r10\r-30\r90\r70\r\r\r21\r2\r1\r\r-10\r\r90\r80\r\r\r22\r2\r1\r1\r\r\r90\r90\r\r\r23\r2\r1\r2\r10\r\r90\r100\r\r\r24\r2\r2\r\r-10\r30\r90\r110\r\r\r25\r2\r2\r1\r\r30\r90\r120\r\r\r26\r2\r2\r2\r10\r30\r90\r130\r\r\rUse the [ Cheat Sheet for Multiplexing three 3-position switches (339 downloads) ](http://www.end2endzone.com/download/1484/ \u0026quot;Version 1.0\u0026quot;) for calculating all block offset when multiplexing three 3-position switches.  Decoding Decoding the switches configuration is relatively easy: First identify the block number matching the signal\u0026rsquo;s value using a sequence of \u0026quot;\nif\u0026quot; statements. Then, update switches state based on the currently selected block. Refer to tables above for offsets \u0026amp; switches states for each selected block.\nNote that if you get a signal value that is within the dead zone, it probably means that you have an issue with your transmitter mixes. Verify your mixes and try again.\rSince reading switches states does not imply any analog value, you do not really care if the signal value is within the effective area (or not) so clamping is not necessary beside detecting instability issue in the signal. However, in the low probability that you get a signal within a dead zone, then the first dead zone should be considered as if you read the first value of the effective area and the last dead zone as the last value of the effective area.\nRequired Libraries PinChangeInt This library allows the arduino to attach interrupts on multiple pins. eRCaGuy_Timer2_Counter (optional) This library configures the arduino\u0026rsquo;s timer2 to 0.5µs precision. It is used for a micros() function replacement and allows times calculations that are far more precise (8 times!) than the default\u0026rsquo;s 4µs resolution.\nCode sample The following arduino code (*.ino) can be used to demultiplex the three scenarios above:\n1//Using RcReceiverSignal v1.1.203 2//required to read the receiver\u0026#39;s value 3//available at http://www.end2endzone.com/rcreceiversignal-an-arduino-library-for-retreiving-the-rc-transmitter-value-from-an-rc-receiver-pulse/ 4#include \u0026lt;RcReceiverSignal.h\u0026gt;5 6//Using PinChangeInt version 2402 7//RcReceiverSignal library has a dependency to PinChangeInt library. 8//available at http://code.google.com/p/arduino-pinchangeint/ 9#include \u0026lt;PinChangeInt.h\u0026gt;10 11//Using eRCaGuy_Timer2_Counter version 20140709 (last updated 9 July 2014) 12//Required to have a micros() replacement function which has a 13//1us resolution instead of 4usec. 14//For more information on this library, see the following: 15// http://electricrcaircraftguy.com/2014/02/Timer2Counter-more-precise-Arduino-micros-function.html 16// http://www.instructables.com/id/How-to-get-an-Arduino-micros-function-with-05us-pr/ 17#include \u0026lt;eRCaGuy_Timer2_Counter.h\u0026gt;18 19//project\u0026#39;s constants 20#define RECEIVER_AUX1_IN_PIN 2 // we could choose any pin 21 22//project\u0026#39;s switches 23#define ENABLE_SERIAL_OUTPUT 24 25//***************************************************************************** 26// TODO: UNCOMMENT ONE OF THE FOLLOWING: 27//****************************************************************************/ 28//#define _4X2POS 29//#define _3X2POS1X3POS 30//#define _3X3POS 31 32DECLARE_RECEIVER_SIGNAL(receiver_aux1_handler); 33 34inline short clamp(const short \u0026amp; iMin, const short \u0026amp; iValue, const short \u0026amp; iMax) { 35 if (iValue \u0026lt; iMin) 36 return iMin; 37 if (iValue \u0026gt; iMax) 38 return iMax; 39 return iValue; 40} 41 42void demultiplex4x2Pos(const short \u0026amp; iSignal, bool \u0026amp; oSwitchA, bool \u0026amp; oSwitchB, bool \u0026amp; oSwitchC, bool \u0026amp; oSwitchD) { 43 #define setSwitches(d,c,b,a) oSwitchA=(a==1); oSwitchB=(b==1); oSwitchC=(c==1); oSwitchD=(d==1); 44 if ( -150 \u0026lt;= iSignal \u0026amp;\u0026amp; iSignal \u0026lt;= -141 ) { setSwitches( 0 , 0 , 0 , 0 ) } 45 else if ( -140 \u0026lt;= iSignal \u0026amp;\u0026amp; iSignal \u0026lt;= -131 ) { setSwitches( 0 , 0 , 0 , 1 ) } 46 else if ( -130 \u0026lt;= iSignal \u0026amp;\u0026amp; iSignal \u0026lt;= -121 ) { setSwitches( 0 , 0 , 1 , 0 ) } 47 else if ( -120 \u0026lt;= iSignal \u0026amp;\u0026amp; iSignal \u0026lt;= -111 ) { setSwitches( 0 , 0 , 1 , 1 ) } 48 else if ( -110 \u0026lt;= iSignal \u0026amp;\u0026amp; iSignal \u0026lt;= -101 ) { setSwitches( 0 , 1 , 0 , 0 ) } 49 else if ( -100 \u0026lt;= iSignal \u0026amp;\u0026amp; iSignal \u0026lt;= -91 ) { setSwitches( 0 , 1 , 0 , 1 ) } 50 else if ( -90 \u0026lt;= iSignal \u0026amp;\u0026amp; iSignal \u0026lt;= -81 ) { setSwitches( 0 , 1 , 1 , 0 ) } 51 else if ( -80 \u0026lt;= iSignal \u0026amp;\u0026amp; iSignal \u0026lt;= -71 ) { setSwitches( 0 , 1 , 1 , 1 ) } 52 else if ( -70 \u0026lt;= iSignal \u0026amp;\u0026amp; iSignal \u0026lt;= -61 ) { setSwitches( 1 , 0 , 0 , 0 ) } 53 else if ( -60 \u0026lt;= iSignal \u0026amp;\u0026amp; iSignal \u0026lt;= -51 ) { setSwitches( 1 , 0 , 0 , 1 ) } 54 else if ( -50 \u0026lt;= iSignal \u0026amp;\u0026amp; iSignal \u0026lt;= -41 ) { setSwitches( 1 , 0 , 1 , 0 ) } 55 else if ( -40 \u0026lt;= iSignal \u0026amp;\u0026amp; iSignal \u0026lt;= -31 ) { setSwitches( 1 , 0 , 1 , 1 ) } 56 else if ( -30 \u0026lt;= iSignal \u0026amp;\u0026amp; iSignal \u0026lt;= -21 ) { setSwitches( 1 , 1 , 0 , 0 ) } 57 else if ( -20 \u0026lt;= iSignal \u0026amp;\u0026amp; iSignal \u0026lt;= -11 ) { setSwitches( 1 , 1 , 0 , 1 ) } 58 else if ( -10 \u0026lt;= iSignal \u0026amp;\u0026amp; iSignal \u0026lt;= -1 ) { setSwitches( 1 , 1 , 1 , 0 ) } 59 else if ( 0 \u0026lt;= iSignal \u0026amp;\u0026amp; iSignal \u0026lt;= 9 ) { setSwitches( 1 , 1 , 1 , 1 ) } 60 else { 61 setSwitches(0,0,0,0); 62 } 63 #undef setSwitches 64} 65 66void demultiplex3x2Pos1x3Pos(const short \u0026amp; iSignal, unsigned char \u0026amp; oSwitchA, bool \u0026amp; oSwitchB, bool \u0026amp; oSwitchC, bool \u0026amp; oSwitchD) { 67 #define setSwitches(d,c,b,a) oSwitchA=a; oSwitchB=(b==1); oSwitchC=(c==1); oSwitchD=(d==1); 68 if ( -150 \u0026lt;= iSignal \u0026amp;\u0026amp; iSignal \u0026lt;= -141 ) { setSwitches( 0 , 0 , 0 , 0 ) } 69 else if ( -140 \u0026lt;= iSignal \u0026amp;\u0026amp; iSignal \u0026lt;= -131 ) { setSwitches( 0 , 0 , 0 , 1 ) } 70 else if ( -130 \u0026lt;= iSignal \u0026amp;\u0026amp; iSignal \u0026lt;= -121 ) { setSwitches( 0 , 0 , 0 , 2 ) } 71 else if ( -120 \u0026lt;= iSignal \u0026amp;\u0026amp; iSignal \u0026lt;= -111 ) { setSwitches( 0 , 0 , 1 , 0 ) } 72 else if ( -110 \u0026lt;= iSignal \u0026amp;\u0026amp; iSignal \u0026lt;= -101 ) { setSwitches( 0 , 0 , 1 , 1 ) } 73 else if ( -100 \u0026lt;= iSignal \u0026amp;\u0026amp; iSignal \u0026lt;= -91 ) { setSwitches( 0 , 0 , 1 , 2 ) } 74 else if ( -90 \u0026lt;= iSignal \u0026amp;\u0026amp; iSignal \u0026lt;= -81 ) { setSwitches( 0 , 1 , 0 , 0 ) } 75 else if ( -80 \u0026lt;= iSignal \u0026amp;\u0026amp; iSignal \u0026lt;= -71 ) { setSwitches( 0 , 1 , 0 , 1 ) } 76 else if ( -70 \u0026lt;= iSignal \u0026amp;\u0026amp; iSignal \u0026lt;= -61 ) { setSwitches( 0 , 1 , 0 , 2 ) } 77 else if ( -60 \u0026lt;= iSignal \u0026amp;\u0026amp; iSignal \u0026lt;= -51 ) { setSwitches( 0 , 1 , 1 , 0 ) } 78 else if ( -50 \u0026lt;= iSignal \u0026amp;\u0026amp; iSignal \u0026lt;= -41 ) { setSwitches( 0 , 1 , 1 , 1 ) } 79 else if ( -40 \u0026lt;= iSignal \u0026amp;\u0026amp; iSignal \u0026lt;= -31 ) { setSwitches( 0 , 1 , 1 , 2 ) } 80 else if ( -30 \u0026lt;= iSignal \u0026amp;\u0026amp; iSignal \u0026lt;= -21 ) { setSwitches( 1 , 0 , 0 , 0 ) } 81 else if ( -20 \u0026lt;= iSignal \u0026amp;\u0026amp; iSignal \u0026lt;= -11 ) { setSwitches( 1 , 0 , 0 , 1 ) } 82 else if ( -10 \u0026lt;= iSignal \u0026amp;\u0026amp; iSignal \u0026lt;= -1 ) { setSwitches( 1 , 0 , 0 , 2 ) } 83 else if ( 0 \u0026lt;= iSignal \u0026amp;\u0026amp; iSignal \u0026lt;= 9 ) { setSwitches( 1 , 0 , 1 , 0 ) } 84 else if ( 10 \u0026lt;= iSignal \u0026amp;\u0026amp; iSignal \u0026lt;= 19 ) { setSwitches( 1 , 0 , 1 , 1 ) } 85 else if ( 20 \u0026lt;= iSignal \u0026amp;\u0026amp; iSignal \u0026lt;= 29 ) { setSwitches( 1 , 0 , 1 , 2 ) } 86 else if ( 30 \u0026lt;= iSignal \u0026amp;\u0026amp; iSignal \u0026lt;= 39 ) { setSwitches( 1 , 1 , 0 , 0 ) } 87 else if ( 40 \u0026lt;= iSignal \u0026amp;\u0026amp; iSignal \u0026lt;= 49 ) { setSwitches( 1 , 1 , 0 , 1 ) } 88 else if ( 50 \u0026lt;= iSignal \u0026amp;\u0026amp; iSignal \u0026lt;= 59 ) { setSwitches( 1 , 1 , 0 , 2 ) } 89 else if ( 60 \u0026lt;= iSignal \u0026amp;\u0026amp; iSignal \u0026lt;= 69 ) { setSwitches( 1 , 1 , 1 , 0 ) } 90 else if ( 70 \u0026lt;= iSignal \u0026amp;\u0026amp; iSignal \u0026lt;= 79 ) { setSwitches( 1 , 1 , 1 , 1 ) } 91 else if ( 80 \u0026lt;= iSignal \u0026amp;\u0026amp; iSignal \u0026lt;= 89 ) { setSwitches( 1 , 1 , 1 , 2 ) } 92 else { 93 setSwitches(0,0,0,0); 94 } 95 #undef setSwitches 96} 97 98void demultiplex3x3Pos(const short \u0026amp; iSignal, unsigned char \u0026amp; oSwitchA, unsigned char \u0026amp; oSwitchB, unsigned char \u0026amp; oSwitchC) { 99 #define setSwitches(c,b,a) oSwitchA=a; oSwitchB=b; oSwitchC=c; 100 if ( -134 \u0026lt;= iSignal \u0026amp;\u0026amp; iSignal \u0026lt;= -125 ) { setSwitches( 0 , 0 , 0 ) } 101 else if ( -124 \u0026lt;= iSignal \u0026amp;\u0026amp; iSignal \u0026lt;= -115 ) { setSwitches( 0 , 0 , 1 ) } 102 else if ( -114 \u0026lt;= iSignal \u0026amp;\u0026amp; iSignal \u0026lt;= -105 ) { setSwitches( 0 , 0 , 2 ) } 103 else if ( -104 \u0026lt;= iSignal \u0026amp;\u0026amp; iSignal \u0026lt;= -95 ) { setSwitches( 0 , 1 , 0 ) } 104 else if ( -94 \u0026lt;= iSignal \u0026amp;\u0026amp; iSignal \u0026lt;= -85 ) { setSwitches( 0 , 1 , 1 ) } 105 else if ( -84 \u0026lt;= iSignal \u0026amp;\u0026amp; iSignal \u0026lt;= -75 ) { setSwitches( 0 , 1 , 2 ) } 106 else if ( -74 \u0026lt;= iSignal \u0026amp;\u0026amp; iSignal \u0026lt;= -65 ) { setSwitches( 0 , 2 , 0 ) } 107 else if ( -64 \u0026lt;= iSignal \u0026amp;\u0026amp; iSignal \u0026lt;= -55 ) { setSwitches( 0 , 2 , 1 ) } 108 else if ( -54 \u0026lt;= iSignal \u0026amp;\u0026amp; iSignal \u0026lt;= -45 ) { setSwitches( 0 , 2 , 2 ) } 109 else if ( -44 \u0026lt;= iSignal \u0026amp;\u0026amp; iSignal \u0026lt;= -35 ) { setSwitches( 1 , 0 , 0 ) } 110 else if ( -34 \u0026lt;= iSignal \u0026amp;\u0026amp; iSignal \u0026lt;= -25 ) { setSwitches( 1 , 0 , 1 ) } 111 else if ( -24 \u0026lt;= iSignal \u0026amp;\u0026amp; iSignal \u0026lt;= -15 ) { setSwitches( 1 , 0 , 2 ) } 112 else if ( -14 \u0026lt;= iSignal \u0026amp;\u0026amp; iSignal \u0026lt;= -5 ) { setSwitches( 1 , 1 , 0 ) } 113 else if ( -4 \u0026lt;= iSignal \u0026amp;\u0026amp; iSignal \u0026lt;= 5 ) { setSwitches( 1 , 1 , 1 ) } 114 else if ( 6 \u0026lt;= iSignal \u0026amp;\u0026amp; iSignal \u0026lt;= 15 ) { setSwitches( 1 , 1 , 2 ) } 115 else if ( 16 \u0026lt;= iSignal \u0026amp;\u0026amp; iSignal \u0026lt;= 25 ) { setSwitches( 1 , 2 , 0 ) } 116 else if ( 26 \u0026lt;= iSignal \u0026amp;\u0026amp; iSignal \u0026lt;= 35 ) { setSwitches( 1 , 2 , 1 ) } 117 else if ( 36 \u0026lt;= iSignal \u0026amp;\u0026amp; iSignal \u0026lt;= 45 ) { setSwitches( 1 , 2 , 2 ) } 118 else if ( 46 \u0026lt;= iSignal \u0026amp;\u0026amp; iSignal \u0026lt;= 55 ) { setSwitches( 2 , 0 , 0 ) } 119 else if ( 56 \u0026lt;= iSignal \u0026amp;\u0026amp; iSignal \u0026lt;= 65 ) { setSwitches( 2 , 0 , 1 ) } 120 else if ( 66 \u0026lt;= iSignal \u0026amp;\u0026amp; iSignal \u0026lt;= 75 ) { setSwitches( 2 , 0 , 2 ) } 121 else if ( 76 \u0026lt;= iSignal \u0026amp;\u0026amp; iSignal \u0026lt;= 85 ) { setSwitches( 2 , 1 , 0 ) } 122 else if ( 86 \u0026lt;= iSignal \u0026amp;\u0026amp; iSignal \u0026lt;= 95 ) { setSwitches( 2 , 1 , 1 ) } 123 else if ( 96 \u0026lt;= iSignal \u0026amp;\u0026amp; iSignal \u0026lt;= 105 ) { setSwitches( 2 , 1 , 2 ) } 124 else if ( 106 \u0026lt;= iSignal \u0026amp;\u0026amp; iSignal \u0026lt;= 115 ) { setSwitches( 2 , 2 , 0 ) } 125 else if ( 116 \u0026lt;= iSignal \u0026amp;\u0026amp; iSignal \u0026lt;= 125 ) { setSwitches( 2 , 2 , 1 ) } 126 else if ( 126 \u0026lt;= iSignal \u0026amp;\u0026amp; iSignal \u0026lt;= 135 ) { setSwitches( 2 , 2 , 2 ) } 127 else { 128 setSwitches(0,0,0); 129 } 130 #undef setSwitches 131} 132 133uint32_t timer2GetCountWrapperFunction() { 134 return timer2.get_count(); 135} 136 137void setup() { 138 //configure Timer2 139 timer2.setup(); //this MUST be done before the other Timer2_Counter functions work; Note: since this messes up PWM outputs on pins 3 \u0026amp; 11, as well as 140 //interferes with the tone() library (http://arduino.cc/en/reference/tone), you can always revert Timer2 back to normal by calling 141 //timer2.unsetup() 142 143 //configure RcReceiverSignal with an external time counter 144 //eRCaGuy_Timer2_Counter lirary has 0.5us resolution. 145 //The counter value must be divided by 2 to convert from 0.5us steps to 1us steps 146 //which results in microseconds resolution. 147 RcReceiverSignal::setExternalTimeCounter(\u0026amp;timer2GetCountWrapperFunction, 1, 2); 148 149 //link RcReceiverSignal to use PinChangeInt library 150 RcReceiverSignal::setAttachInterruptFunction(\u0026amp;PCintPort::attachInterrupt); 151 RcReceiverSignal::setPinStatePointer(\u0026amp;PCintPort::pinState); 152 153 #ifdef ENABLE_SERIAL_OUTPUT 154 Serial.begin(115200); 155 Serial.println(\u0026#34;ready\u0026#34;); 156 #endif 157 158 receiver_aux1_handler_setup(RECEIVER_AUX1_IN_PIN); 159} 160 161void loop() { 162 //detect when the receiver AUX1 value has changed 163 if (receiver_aux1_handler.hasChanged()) 164 { 165 unsigned long pwmValue = receiver_aux1_handler.getPwmValue(); 166 RcReceiverSignal::VALUE signal = receiver_aux1_handler.getSignalValue(pwmValue); 167 168 char buffer[100]; 169 170#ifdef _4X2POS 171 bool switchA = false; 172 bool switchB = false; 173 bool switchC = false; 174 bool switchD = false; 175 demultiplex4x2Pos(signal, switchA, switchB, switchC, switchD); 176 177 //print switches state 178 sprintf(buffer, \u0026#34;PWM=%04d s=%04d A=%d B=%d C=%d D=%d\u0026#34;, 179 (int)pwmValue, 180 (int)signal, 181 switchA, 182 switchB, 183 switchC, 184 switchD); 185#endif 186#ifdef _3X2POS1X3POS 187 unsigned char switchA = 0; 188 bool switchB = false; 189 bool switchC = false; 190 bool switchD = false; 191 demultiplex3x2Pos1x3Pos(signal, switchA, switchB, switchC, switchD); 192 193 //print switches state 194 sprintf(buffer, \u0026#34;PWM=%04d s=%04d A=%d B=%d C=%d D=%d\u0026#34;, 195 (int)pwmValue, 196 (int)signal, 197 switchA, 198 switchB, 199 switchC, 200 switchD); 201#endif 202#ifdef _3X3POS 203 unsigned char switchA = 0; 204 unsigned char switchB = 0; 205 unsigned char switchC = 0; 206 demultiplex3x3Pos(signal, switchA, switchB, switchC); 207 208 //print switches state 209 sprintf(buffer, \u0026#34;PWM=%04d s=%04d A=%d B=%d C=%d\u0026#34;, 210 (int)pwmValue, 211 (int)signal, 212 switchA, 213 switchB, 214 switchC); 215#endif 216 Serial.println(buffer); 217 } 218}  Sample data         559x527   539x520   533x514    Multiplexing an analog input and switches Design Including an analog value (usually a rotating knob) into the multiplexed signal is also possible. However, only a single analog value can be multiplexed.\nPlease note that including an analog value reduces the number of switches that can be multiplexed into the signal.\rDefine resolution Defining the resolution of the analog value means that you must choose the granularity of the value. By default the analog value has at least 200 different values and ranges from -100% to +100%. Since you also want to multiplex switches into the same signal, the resolution must be reduced from 200 different values to a lot less. To support a desired resolution, multiple blocks will need to be sacrificed. I do recommend a resolution of 40 steps (with values from 0 to 39) which is a nice resolution to allow enough details and can also be subdivided into other zones.\nWhat\u0026rsquo;s different The design for including an analog value is different than having only switches.\nBlock size Block size must be increased to allow the desired resolution. The higher the resolution, the less switches you can multiplex. The block size must be big enough to fit both dead zones and the desired resolution.\nDead zone A dead zone of 3 steps is also suggested. For instance, to support a resolution of 40 different steps, the block size must be of 46 steps (3+40+3=46). The following table shows the signal range and the middle of the effective area for each block. It is calculated using a block size of 46 steps and a dead zone of 3 steps which makes the effective block size to 40 steps:\n  Block Number\rBlock Offsets\r\rDead\rEffective\rDead\r\r\r\r-150\r-148\r-147\r-108\r-107\r-105\r\r\r1\r-104\r-102\r-101\r-62\r-61\r-59\r\r\r2\r-58\r-56\r-55\r-16\r-15\r-13\r\r\r3\r-12\r-10\r-9\r30\r31\r33\r\r\r4\r34\r36\r37\r76\r77\r79\r\r\r5\r80\r82\r83\r122\r123\r125\r\r\rNote that only 6 blocks can be defined using a block size of 46 steps. These blocks only allows 2 sub configurations for multiplexing switches:  2-position switch + 3-position switch  Two 2-position switches    \rMixes When multiplexing an analog value, mixes do not have to target the middle of the block\u0026rsquo;s effective zone (as with switches) since the signal\u0026rsquo;s value can move within the whole effective area of the block. Assuming the first configuration (2-pos + 3-pos), the following mixes must be created to multiplex all switches unique configurations:\n  Mix info\rMix Output\r\rNumber\rSwitch\rHigh\rLow\rOffset\r\r1\r2\r\r\r\rRKnob\r-74\r\r-99\r-147\r-73\r\r\r\r1\rRKnob\r\r54\r100\r\r-54\r-108\r\r\r2\rA\r\r-69\r100\r\r\r138\r\r\r3\rB\r\r-46\r100\r\r46\r92\r\r\rNote that first 2 mix are mapped to the right knob to reach the effective range of the first block (-147% to -108%). Switch B is a 3-position switch and offsets the analog range between block 0 to 2. Then the 3rd mix, assigned to Switch A (2-position), offsets the 3 effective block of switch B to block 0-2 or 3-5.\rAs you can see, the sum of all combined mixes matches the middle section of each effective block:\n  Block Number\rSwitches\rMixes\r\rA\rB\rRKnob\r\r1\r2\r3\rSum\r\r\r\r\r\r\r-147\r\r\r\r-147\r\r\r\r\r\r40\r\r-108\r\r\r-108\r\r\r1\r\r1\r\r-147\r\r\r46\r-101\r\r\r1\r\r1\r40\r\r-108\r\r46\r-62\r\r\r2\r\r2\r\r-147\r\r\r92\r-55\r\r\r2\r\r2\r40\r\r-108\r\r92\r-16\r\r\r3\r1\r\r\r-147\r\r138\r\r-9\r\r\r3\r1\r\r40\r\r-108\r138\r\r30\r\r\r4\r1\r1\r\r-147\r\r138\r46\r37\r\r\r4\r1\r1\r40\r\r-108\r138\r46\r76\r\r\r5\r1\r2\r\r-147\r\r138\r92\r83\r\r\r5\r1\r2\r40\r\r-108\r138\r92\r122\r\r\rUse the [ Cheat Sheet for Multiplexing an Analog Knob with a 2-position and a 3-position switch (309 downloads) ](http://www.end2endzone.com/download/1510/ \u0026quot;Version 1.0\u0026quot;) for calculating all block offset when multiplexing an analog value with a 2-position and a 3-position switch.  Decoding Decoding an analog value with switches configuration is different: First identify the block number matching the signal\u0026rsquo;s value using a sequence of \u0026ldquo;if\u0026rdquo; statements. Then\nclamp the value within the effective block area. This is required since the signal can get close to a dead zone (or even reach a dead zone!). To get the actual analog value, you must also offset the block\u0026rsquo;s effective range to get a constant 0-39 range. Finally, update switches state based on the currently selected block. Refer to tables above for offsets \u0026amp; switches states for each selected block.\nNote that reading a value (with the micro-controller) that is outside the analog effective area should be considered the same as reading an analog value of 0 or 39 depending on the closest dead zone.\rCode sample The following arduino code (*.ino) can be used to demultiplex the scenario above:\n1//Using RcReceiverSignal v1.1.203 2//required to read the receiver\u0026#39;s value 3//available at http://www.end2endzone.com/rcreceiversignal-an-arduino-library-for-retreiving-the-rc-transmitter-value-from-an-rc-receiver-pulse/ 4#include \u0026lt;RcReceiverSignal.h\u0026gt;5 6//Using PinChangeInt version 2402 7//RcReceiverSignal library has a dependency to PinChangeInt library. 8//available at http://code.google.com/p/arduino-pinchangeint/ 9#include \u0026lt;PinChangeInt.h\u0026gt;10 11//Using eRCaGuy_Timer2_Counter version 20140709 (last updated 9 July 2014) 12//Required to have a micros() replacement function which has a 13//1us resolution instead of 4usec. 14//For more information on this library, see the following: 15// http://electricrcaircraftguy.com/2014/02/Timer2Counter-more-precise-Arduino-micros-function.html 16// http://www.instructables.com/id/How-to-get-an-Arduino-micros-function-with-05us-pr/ 17#include \u0026lt;eRCaGuy_Timer2_Counter.h\u0026gt;18 19//project\u0026#39;s constants 20#define RECEIVER_AUX1_IN_PIN 2 // we could choose any pin 21 22//project\u0026#39;s switches 23#define ENABLE_SERIAL_OUTPUT 24 25DECLARE_RECEIVER_SIGNAL(receiver_aux1_handler); 26 27inline short clamp(const short \u0026amp; iMin, const short \u0026amp; iValue, const short \u0026amp; iMax) { 28 if (iValue \u0026lt; iMin) 29 return iMin; 30 if (iValue \u0026gt; iMax) 31 return iMax; 32 return iValue; 33} 34 35void demultiplexAnalog40_1x2Pos1x3Pos(const short \u0026amp; iSignal, unsigned char \u0026amp; oAnalogA, bool \u0026amp; oSwitch2, unsigned char \u0026amp; oSwitch3) { 36 #define setSwitches(effectiveMin,signal,effectiveMax,a,b) oAnalogA=clamp(effectiveMin,signal,effectiveMax) - (effectiveMin); oSwitch2=a; oSwitch3=b; 37 if ( -150 \u0026lt;= iSignal \u0026amp;\u0026amp; iSignal \u0026lt;= -105 ) { setSwitches( -147 ,iSignal, -108, 0, 0 ) } 38 else if ( -104 \u0026lt;= iSignal \u0026amp;\u0026amp; iSignal \u0026lt;= -59 ) { setSwitches( -101 ,iSignal, -62, 0, 1 ) } 39 else if ( -58 \u0026lt;= iSignal \u0026amp;\u0026amp; iSignal \u0026lt;= -13 ) { setSwitches( -55 ,iSignal, -16, 0, 2 ) } 40 else if ( -12 \u0026lt;= iSignal \u0026amp;\u0026amp; iSignal \u0026lt;= 33 ) { setSwitches( -9 ,iSignal, 30, 1, 0 ) } 41 else if ( 34 \u0026lt;= iSignal \u0026amp;\u0026amp; iSignal \u0026lt;= 79 ) { setSwitches( 37 ,iSignal, 76, 1, 1 ) } 42 else if ( 80 \u0026lt;= iSignal \u0026amp;\u0026amp; iSignal \u0026lt;= 125 ) { setSwitches( 83 ,iSignal, 122, 1, 2 ) } 43 else 44 { 45 setSwitches( 0,0,0,0,0 ); 46 } 47 #undef setSwitches 48} 49 50uint32_t timer2GetCountWrapperFunction() { 51 return timer2.get_count(); 52} 53 54void setup() { 55 //configure Timer2 56 timer2.setup(); //this MUST be done before the other Timer2_Counter functions work; Note: since this messes up PWM outputs on pins 3 \u0026amp; 11, as well as 57 //interferes with the tone() library (http://arduino.cc/en/reference/tone), you can always revert Timer2 back to normal by calling 58 //timer2.unsetup() 59 60 //configure RcReceiverSignal with an external time counter 61 //eRCaGuy_Timer2_Counter lirary has 0.5us resolution. 62 //The counter value must be divided by 2 to convert from 0.5us steps to 1us steps 63 //which results in microseconds resolution. 64 RcReceiverSignal::setExternalTimeCounter(\u0026amp;timer2GetCountWrapperFunction, 1, 2); 65 66 //link RcReceiverSignal to use PinChangeInt library 67 RcReceiverSignal::setAttachInterruptFunction(\u0026amp;PCintPort::attachInterrupt); 68 RcReceiverSignal::setPinStatePointer(\u0026amp;PCintPort::pinState); 69 70 #ifdef ENABLE_SERIAL_OUTPUT 71 Serial.begin(115200); 72 Serial.println(\u0026#34;ready\u0026#34;); 73 #endif 74 75 receiver_aux1_handler_setup(RECEIVER_AUX1_IN_PIN); 76} 77 78void loop() { 79 //detect when the receiver AUX1 value has changed 80 if (receiver_aux1_handler.hasChanged()) 81 { 82 unsigned long pwmValue = receiver_aux1_handler.getPwmValue(); 83 RcReceiverSignal::VALUE signal = receiver_aux1_handler.getSignalValue(pwmValue); 84 85 char buffer[100]; 86 87 unsigned char analogA = 0; 88 bool switch2 = 0; 89 unsigned char switch3 = 0; 90 demultiplexAnalog40_1x2Pos1x3Pos(signal, analogA, switch2, switch3); 91 92 //print switches state 93 sprintf(buffer, \u0026#34;PWM=%04d s=%04d analogA=%2d A=%d B=%d\u0026#34;, 94 (int)pwmValue, 95 (int)signal, 96 analogA, 97 switch2, 98 switch3); 99 Serial.println(buffer); 100 } 101}  Sample data         498x510   ",
    "ref": "/how-to-multiplex-rc-transmitter-switches-into-a-single-channel/"
  },{
    "title": "RcReceiverSignal: an arduino library for retrieving the RC Transmitter value from an RC Receiver pulse",
    "date": "",
    "description": "",
    "body": "Introduction The following arduino library was written to use the findings found during the Mapping RC Transmitter PWM signal to actual transmitter values{.row-title} article. All results were wrapped into a library for ease of use.\nThe RcReceiverSignal is an arduino library that allows one to read a signal sent from a Remote Controlled (RC) receiver.\nSkip to the download section for quick download.\nPurpose The RcReceiverSignal library allows one to easily configure an input pin to read a PWM signal sent from a RC receiver by attaching a RcReceiverSignal instance to a pin connected the receiver and automatically monitor each pulse sent by the receiver.\nIt allows the main loop to retrieve the latest received pulse length (PWM) and convert the pulse length back to the actual transmitter signal value (ranging from -150% to 150%).\nThe library supports automatic PWM signal change detection. The library\u0026rsquo;s ability to convert a PWM value to the actual transmitter numeric value is based on empirical tests available at Mapping RC Transmitter PWM signal to actual transmitter values{.row-title}.\nLibrary features Possible use are:\n Allows one to get the latest PWM value sent from the RC receiver. Automatically handles interrupt protection. Automatic ISR handling. All required code automatically generated. Allows one to convert a pulse length (PWM) back to the original transmitter value.  \rSupports multiple Transmitter/Receiver combination: \rSpektrum DX9 tx + Spektrum AR8000 rx\r\r* Spektrum DX9 tx +\u0026nbsp;Orange R620X rx\r* Tactic TTX600 tx +\u0026nbsp;Tactic TR624 rx\r* CCPM Servo Tester\r\r Supports eRCaGuy_Timer2_Counter 0.5µs (or the native micros() function) for timing calculations.  Library dependencies PinChangeInt This library allows the arduino to attach interrupts on multiple pins.\neRCaGuy_Timer2_Counter (optional)\nThis library configures the arduino\u0026rsquo;s timer2 to 0.5µs precision. It is used for a micros() function replacement and allows times calculations that are far more precise (8 times!) than the default\u0026rsquo;s 4µs resolution.\nUsage Use the DECLARE_RECEIVER_SIGNAL macro to declare an instance of RcReceiverSignal. ie:\n1DECLARE_RECEIVER_SIGNAL(receiver_aux1_handler); 2DECLARE_RECEIVER_SIGNAL(receiver_throttle_handler); Each macro will automatically declare the following:\n RcReceiverSignal receiver_aux1_handler; receiver_aux1_handler_setup() function. receiver_aux1_handler_pin_change() ISR function.  In the setup() function, you need to configure each instance by calling the receiver_aux1_handler_setup() function with the interrupt pin as argument. ie:\n1receiver_aux1_handler_setup(RECEIVER_AUX1_IN_PIN); 2receiver_throttle_handler_setup(RECEIVER_THROTTLE_IN_PIN); In the loop function, one can call the _hasChanged() m_ethod to know if the PWM value has changed since the last call or call the getPwmValue() function to get the last PWM value observed by the RcReceiverSignal instance.\nFrom a PWM value, one can call the getSignalValue() or getDeviceSignalValue() methods to convert a given PWM signal from a known device combination to a transmitter value (within -150% to +150%).\nDemo The following demo show how to use the library:\n(download the RcReceiverSignal v1.1.203 LedUpdate demo.ino (572 downloads) )\n//\r// RcReceiverSignal Library\r// LedUpdate example\r// Copyright (C) 2016 Antoine Beauchamp\r// The code \u0026amp; updates for the library can be found on http://end2endzone.com\r//\r// AUTHOR/LICENSE:\r// This library is free software; you can redistribute it and/or\r// modify it under the terms of the GNU Lesser General Public\r// License as published by the Free Software Foundation; either\r// version 3.0 of the License, or (at your option) any later version.\r//\r// This library is distributed in the hope that it will be useful,\r// but WITHOUT ANY WARRANTY; without even the implied warranty of\r// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\r// Lesser General Public License (LGPL-3.0) for more details.\r//\r// You should have received a copy of the GNU Lesser General Public\r// License along with this library; if not, write to the Free Software\r// Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA\r//\r// DISCLAIMER:\r// This software is furnished \u0026#34;as is\u0026#34;, without technical support, and with no // warranty, express or implied, as to its usefulness for any purpose.\r//\r// PURPOSE:\r// The following example reads a PWM signal on pin 2. If the value is below the\r// center position, it turns ON the arduino\u0026#39;s LED. If the value is close to the\r// center position, it blinks the arduino\u0026#39;s LED. If the value is higher than the\r// center position, it turns OFF the arduino\u0026#39;s LED.\r//\r//\r//RcReceiverSignal library has a dependency to PinChangeInt library.\r#include \u0026lt;PinChangeInt.h\u0026gt;\r//\r//This library allows one to have a micros() replacement function //which has a 1us resolution instead of 4usec.\r//For more information on this library, see the following:\r// http://electricrcaircraftguy.com/2014/02/Timer2Counter-more-precise-Arduino-micros-function.html\r// http://www.instructables.com/id/How-to-get-an-Arduino-micros-function-with-05us-pr/\r//\r#include \u0026lt;eRCaGuy_Timer2_Counter.h\u0026gt;\r//that\u0026#39;s the example\u0026#39;s library!\r#include \u0026lt;RcReceiverSignal.h\u0026gt;\r//project\u0026#39;s contants\r#define RECEIVER_AUX1_IN_PIN 2 // we could choose any pin\r#define LED_OUT_PIN 13\r#define LED_MODE_ON 0\r#define LED_MODE_OFF 1\r#define LED_MODE_BLINK 2\r#define LED_MODE_BLINK_TIME 100 //blinks every 100 ms\r#define PWM_CENTER_EPSILON 100 //defines the epsilon value which allows to detect \u0026#34;center\u0026#34; position\r//project\u0026#39;s switches\r#define ENABLE_SERIAL_OUTPUT\rDECLARE_RECEIVER_SIGNAL(receiver_aux1_handler);\rchar ledMode = LED_MODE_OFF; //initialize LED to OFF by default\rint ledState = LOW; //initialize LED to OFF by default\runsigned long prevBlinkTime = 0;\ruint32_t timer2CounterWrapperFunction() {\rreturn timer2.get_count();\r}\rvoid setup() {\r//configure Timer2\rtimer2.setup(); //this MUST be done before the other Timer2_Counter functions work; Note: since this messes up PWM outputs on pins 3 \u0026amp; 11, as well as //interferes with the tone() library (http://arduino.cc/en/reference/tone), you can always revert Timer2 back to normal by calling //timer2.unsetup()\r//configure RcReceiverSignal with an external time counter\r//eRCaGuy_Timer2_Counter lirary has 0.5us resolution.\r//The counter value must be divided by 2 to convert from 0.5us steps to 1us steps\r//which results in microseconds resolution.\rRcReceiverSignal::setExternalTimeCounter(\u0026amp;timer2CounterWrapperFunction, 1, 2);\r//link RcReceiverSignal to use PinChangeInt library\rRcReceiverSignal::setAttachInterruptFunction(\u0026amp;PCintPort::attachInterrupt);\rRcReceiverSignal::setPinStatePointer(\u0026amp;PCintPort::pinState);\r#ifdef ENABLE_SERIAL_OUTPUT\rSerial.begin(115200);\rSerial.println(\u0026#34;ready\u0026#34;);\r#endif\r// initialize digital pin 13 as an output.\rpinMode(LED_OUT_PIN, OUTPUT);\rreceiver_aux1_handler_setup(RECEIVER_AUX1_IN_PIN);\r}\rvoid blinkLed()\r{\r// See https://www.arduino.cc/en/Tutorial/BlinkWithoutDelay\r// check to see if it\u0026#39;s time to blink the LED; that is, if the\r// difference between the current time and last time you blinked\r// the LED is bigger than the interval at which you want to\r// blink the LED.\runsigned long currentMillis = millis();\rif (currentMillis - prevBlinkTime \u0026gt;= LED_MODE_BLINK_TIME) {\r// save the last time you blinked the LED\rprevBlinkTime = currentMillis;\r// if the LED is off turn it on and vice-versa:\rif (ledState == LOW) {\rledState = HIGH;\r} else {\rledState = LOW;\r}\r// set the LED with the ledState of the variable:\rdigitalWrite(LED_OUT_PIN, ledState);\r} }\rvoid loop() {\r//update LED status\rif (ledMode == LED_MODE_ON) {\rledState = HIGH;\rdigitalWrite(LED_OUT_PIN, ledState); // turn the LED on (HIGH is the voltage level)\r}\relse if (ledMode == LED_MODE_OFF) {\rledState = LOW;\rdigitalWrite(LED_OUT_PIN, ledState); // turn the LED off by making the voltage LOW\r}\relse if (ledMode == LED_MODE_BLINK)\r{\rblinkLed();\r}\r//detect when the receiver AUX1 value has changed\rif (receiver_aux1_handler.hasChanged())\r{\runsigned long pwmValue = receiver_aux1_handler.getPwmValue();\rif (pwmValue \u0026lt; 1500-PWM_CENTER_EPSILON) {\r#ifdef ENABLE_SERIAL_OUTPUT\rif (ledMode != LED_MODE_ON)\rSerial.println(\u0026#34;Setting LED to ON\u0026#34;);\r#endif\rledMode = LED_MODE_ON;\r}\relse if (pwmValue \u0026gt; 1500+PWM_CENTER_EPSILON) {\r#ifdef ENABLE_SERIAL_OUTPUT\rif (ledMode != LED_MODE_OFF)\rSerial.println(\u0026#34;Setting LED to OFF\u0026#34;);\r#endif\rledMode = LED_MODE_OFF;\r}\relse {\r#ifdef ENABLE_SERIAL_OUTPUT\rif (ledMode != LED_MODE_BLINK)\rSerial.println(\u0026#34;Setting LED to BLINK\u0026#34;);\r#endif\rledMode = LED_MODE_BLINK;\r}\r}\r}\r License This library is free software; you can redistribute it and/or modify it under the terms of the GNU Lesser General Public License as published by the Free Software Foundation; either version 3.0 of the License, or (at your option) any later version.\nThis library is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License (LGPL-3.0) for more details.\nYou should have received a copy of the GNU Lesser General Public License along with this library; if not, write to the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA\nDISCLAIMER:\nThis software is furnished \u0026ldquo;as is\u0026rdquo;, without technical support, and with no warranty, express or implied, as to its usefulness for any purpose.\nDownload You can download the RcReceiverSignal arduino library by clicking on the following link:\n [ Download \u0026quot;RcReceiverSignal arduino library v1.1.203\u0026quot; RcReceiverSignal-v1.1.203.zip - Downloaded 664 times - 59 KB ](http://www.end2endzone.com/download/1792/)\r",
    "ref": "/rcreceiversignal-an-arduino-library-for-retreiving-the-rc-transmitter-value-from-an-rc-receiver-pulse/"
  },{
    "title": "Mapping RC Transmitter PWM signal to actual transmitter values",
    "date": "",
    "description": "",
    "body": "Introduction If you ever need to use an RC Transmitter \u0026amp; receiver for a personal project, an easy way to retrieve the signal is to connect the receiver to a micro-controller.\nHowever, decoding the signal to get actual transmitter values is not as easy as it sounds. You need to know the correct encoding and searching on the internet about the subject gives erratic results.\nHere is the full article that explains how to correctly map an RC Transmitter PWM signal to actual transmitter values.\nHow does it works? The receiver signal is encoded with a Pulse Width Modulation. In other way, the transfer of the signal is analog and not digital. This means there is no direct method to read the signal. To accurately read the signal, you need to know the given length of the pulse for each unique transmitter values.\nUsing benchmark data, I managed to find approximation functions that works for most transmitter values. Multiple benchmark data is available for multiple combination of transmitter and receiver.\nWhat is expected If you search on the internet, you will find information regarding servos which typically uses the same \u0026ldquo;kind\u0026rdquo; of PWM signal. However, as you will see in the next section, the minimum and maximum values for a servo does not match their counterpart on a RC transmitter.\nTheoretical values Most information sources about servo control states that generally the minimum pulse will be about 1 ms wide and the maximum pulse will be 2 ms wide.\nThe following table shows the theoretical pulse length for each transmitter values:\n**Expected Transmitter Pulses**\r\r**Length (µS)**\r**Value**\r\r\r1000\r-100%\r\r\r1500\r0%\r\r\r2000\r100%\r\r\rExtrapolation Knowing that a pulse delta time of 1000 µS (from 1000 µS to 2000 µS) is required to identify 200 different steps (from -100% to +100%), it is then safe to assume that each step is 5 µS. With this calculation, the theoretical pulse length of other values should be identified as follows:\n**Extrapolated Transmitter Pulses**\r\r**Length (µS)**\r**Value**\r\r\r750\r-150%\r\r\r875\r-125%\r\r\r1125\r-75%\r\r\r1250\r-50%\r\r\r1375\r-25%\r\r\r1625\r25%\r\r\r1750\r50%\r\r\r1875\r75%\r\r\r2125\r125%\r\r\r2250\r150%\r\r\rWRONG!\n Theoretical values is never as good as real world observations.\nCapture methodology For the data capture, I used an Arduino Nano V3 micro-controller. With the help of multiple libraries, I created a program to capture each pulse length of critical target point for a given amount of time. Since the length of each pulse is not perfectly constant, I extracted the average pulse length. Matching different points, I calculated multiple trend line formulas in polynomial format. I then calculate each formula performance against all other points. Finally, I identify the best formula to be used in real projects.\nNote that all raw data capture are available for download as Excel files (*.xlsx) in sections below.\rRequired Libraries PinChangeInt This library allows the arduino to attach interrupts on multiple pins.\neRCaGuy_Timer2_Counter This library configures the arduino\u0026rsquo;s timer2 to 0.5µs precision. It is used for a \u0026ldquo;micros()\u0026rdquo; function replacement and allows times calculations that are far more precise (8 times!) than the default\u0026rsquo;s 4µs resolution.\nPWM capture code Here is the final arduino code that allowed raw data capture to extract average pulse length for each critical target point:\n#include \u0026lt;PinChangeInt.h\u0026gt;\r#include \u0026lt;eRCaGuy_Timer2_Counter.h\u0026gt;\r//project\u0026#39;s contants\r#define RECEIVER_AUX1_IN_PIN 2 // we could choose any pin\r#define BUFFER_SIZE 250\r//project\u0026#39;s switches\r#define ENABLE_SERIAL_OUTPUT\r//DECLARE_RECEIVER_SIGNAL(receiver_aux1_handler);\rvolatile unsigned long risingTime; //time in micros() on last pin rise\rvolatile unsigned long fallingTime; //time in micros() on last pin fall\rvolatile unsigned long pwmValue; //PWM value expected from 1000 us to 2000 us\runsigned long prevPwmValue; //previous value of pwmValue\runsigned long readingsBuffer[BUFFER_SIZE];\runsigned long numReadings = 0;\runsigned long getPwmValue() {\ruint8_t pushedSREG = SREG; // save interrupt flag\rcli(); // disable interrupts\runsigned long pwmCopy = pwmValue; // access the shared data\rSREG = pushedSREG; // restore the interrupt flag\rreturn pwmCopy;\r}\rbool hasChanged() {\runsigned long currentValue = getPwmValue();\rbool changed = (currentValue != prevPwmValue);\rprevPwmValue = currentValue;\rreturn changed;\r}\rvoid onPinChanged() {\rif(PCintPort::pinState == HIGH)\r{\r//this is a rising edge\r//record time\rrisingTime = timer2.get_count(); //count units of 0.5us each\r}\relse\r{\r//this is a falling edge\r//read elapsed time since RISING\rfallingTime = timer2.get_count(); //count units of 0.5us each;\rpwmValue = (fallingTime - risingTime)/2; //to a precision of 1us\r}\r}\rvoid setup() {\rrisingTime = 0;\rfallingTime = 0;\rpwmValue = 0;\r//setup interrupts\rpinMode(RECEIVER_AUX1_IN_PIN, INPUT);\rdigitalWrite(RECEIVER_AUX1_IN_PIN, HIGH); //use the internal pullup resistor\r//prepare first interruption on pin CHANGE\rPCintPort::attachInterrupt(RECEIVER_AUX1_IN_PIN, \u0026amp;onPinChanged, CHANGE);\r//configure Timer2\rtimer2.setup(); //this MUST be done before the other Timer2_Counter functions work; Note: since this messes up PWM outputs on pins 3 \u0026amp; 11, as well as //interferes with the tone() library (http://arduino.cc/en/reference/tone), you can always revert Timer2 back to normal by calling //timer2.unsetup()\r#ifdef ENABLE_SERIAL_OUTPUT\rSerial.begin(115200);\rSerial.println(\u0026#34;ready\u0026#34;);\r#endif\r}\rvoid loop() {\r//detect when the receiver AUX1 value has changed\rif (hasChanged())\r{\runsigned long pwmValue = getPwmValue();\r//add value to reading buffer\rreadingsBuffer[numReadings] = pwmValue;\rnumReadings++;\rif (numReadings == BUFFER_SIZE)\r{\r//flush\r#ifdef ENABLE_SERIAL_OUTPUT\rchar pwnStr[10];\runsigned long sum = 0;\rfor(unsigned long i=0; i\u0026lt;BUFFER_SIZE; i++)\r{\rpwmValue = readingsBuffer[i];\rsum += pwmValue;\rsprintf(pwnStr, \u0026#34;%04d\u0026#34;, pwmValue);\rSerial.println(pwnStr);\r}\rdouble avg = sum/double(BUFFER_SIZE);\r//Serial.print(\u0026#34;sum=\u0026#34;);\r//Serial.println(sum);\r//Serial.print(\u0026#34;avg=\u0026#34;);\r//Serial.println(avg);\r#endif\rnumReadings = 0;\r//ignore the next change since serial printing may have impacted the timing...\rwhile( !hasChanged() )\r{\r}\r}\r}\r}\r Download the arduino source code: RC Transmitter PWM Reader (*.ino) (278 downloads) .\nBenchmark results The following section show the results of all my data capture sessions. Each device combination show the following information:\nTable 1\n A given transmitter value. Average pulse length (in µs) for the given transmitter value. Minimum and Maximum pulse length for the given transmitter value. Width of pulses in µs (difference between maximum and minimum length) Middle pulse length. Middle point between minimum and maximum pulses.  **Table 2\n**Table 2 shows selected control points and the polynomial function for the selected points. Multiple polynomial functions are found using different control points.\nNote that pulse length from most devices are not perfectly linear. This means that most of the time, more than 2 control points are required to get a polynomial function that is accurate.\r**Table 3\n**Table 3 shows each function\u0026rsquo;s performance trying to properly predict a transmitter value from a pulse length. The function that offers the best performance is selected as the final function.\nNote that some devices are low quality products and are not always constant or does not provide constant transmitter value.\rDevices Spektrum DX9 Tx \u0026amp; Orange R620X Rx         250x250   250x250    **Table 1\n**The Spektrum DX9 Tx \u0026amp; Orange R620X Rx shows a PWM range from 827 µs to 2194 µs. The following table shows the details of my data capture session:\n  Spektrum DX9 Tx \u0026\u0026nbsp;Orange R620X Rx\r\rTx\rAvg PWM\rMin\rMax\rWidth\rMiddle\r\r\r150\r2187.85\r2181\r2194\r13\r2187.5\r\r\r149\r2180.73\r2175\r2186\r11\r2180.5\r\r\r148\r2178.54\r2173\r2184\r11\r2178.5\r\r\r147\r2173.86\r2168\r2180\r12\r2174\r\r\r146\r2167.92\r2163\r2173\r10\r2168\r\r\r100\r1961.01\r1956\r1966\r10\r1961\r\r\r50\r1732.35\r1727\r1738\r11\r1732.5\r\r\r\r1505.40\r1499\r1512\r13\r1505.5\r\r\r-50\r1277.65\r1273\r1284\r11\r1278.5\r\r\r-100\r1050.22\r1045\r1055\r10\r1050\r\r\r-120\r959.43\r954\r964\r10\r959\r\r\r-135\r891.52\r887\r896\r9\r891.5\r\r\r-146\r841.55\r835\r848\r13\r841.5\r\r\r-147\r836.76\r832\r843\r11\r837.5\r\r\r-148\r832.02\r827\r837\r10\r832\r\r\r-149\r827.47\r822\r833\r11\r827.5\r\r\r-150\r826.80\r821\r832\r11\r826.5\r\r\r**Table 2\n**From these values, I extracted the following polynomial functions:\n   Polynomial Equation Py1 Px1 Py2 Px2 a2 a1 a0      150 2187.85 -150 826.80  0.220417088 -332.2399666   1 146 2167.92 -135 891.52  0.220149733 -331.2670095   2 100 1961.01 -100 1050.22  0.219590069 -330.6178825   3 148 2178.54 -148 832.016  0.219825269 -330.8981407   4 146 2167.92 -146 841.548  0.2201494 -331.2662873   5 149 2180.73 -149 827.468  0.220208326 -331.2153431   6     -8.0E-08 0.2203 -331.37    **Table 3\n**The following table shows details for calculating the performance of each polynomial functions:\n   Tx Avg PWM Eq0 Diff 0 Eq1 Diff 1 Eq2 Diff 2 Eq3 Diff 3 Eq4 Diff 4 Eq5 Diff 5 Eq6 Diff 6     150 2187.85 150  150 0.39 150 0.19 150 0.05 150 0.39 151 0.57 150 0.23   149 2180.73 148 0.57 149 0.18 148 0.75 148 0.52 149 0.18 149  149 0.34   148 2178.54 148 0.05 148 0.34 148 0.23 148  148 0.34 149 0.52 148 0.18   147 2173.86 147 0.08 147 0.31 147 0.26 147 0.03 147 0.31 147 0.49 147 0.15   146 2167.92 146 0.39 146  145 0.56 146 0.33 146  146 0.18 146 0.15   100 1961.01 100  100 0.45 100  100 0.18 100 0.45 101 0.61 100 0.33   50 1732.35 50 0.4 50 0.11 50 0.21 50 0.08 50 0.11 50 0.26 50 0.03    1505.41  0.42  0.15  0.05  0.03  0.15  0.29  0.09   -50 1277.65 -51 0.62 -50 0.01 -50 0.06 -50 0.04 -50 0.01 -50 0.13 -50 0.03   -100 1050.22 -101 0.75 -100 0.06 -100  -100 0.03 -100 0.06 -100 0.05 -100 0.09   -120 959.43 -121 0.76 -120 0.05 -120 0.06 -120 0.01 -120 0.05 -120 0.06 -120 0.08   -135 891.52 -136 0.73 -135  -135 0.15 -135 0.08 -135  -135 0.1 -135 0.03   -146 841.55 -147 0.75 -146  -146 0.18 -146 0.1 -146  -146 0.1 -146 0.03   -147 836.76 -148 0.8 -147 0.05 -147 0.13 -147 0.04 -147 0.05 -147 0.05 -147 0.09   -148 832.02 -149 0.85 -148 0.1 -148 0.08 -148  -148 0.1 -148  -148 0.13   -149 827.47 -150 0.85 -149 0.1 -149 0.09 -149  -149 0.1 -149  -149 0.13   -150 826.8 -150  -149 0.75 -149 0.94 -149 0.85 -149 0.75 -149 0.85 -149 0.72      8.05  3.04  3.94  2.37  3.04  4.26  2.85    The table above shows two polynomial functions (see highlighted columns) that offers the best performance :\n Function #3 (which has an order of 1) and a sum of 2.37. Function #6 (which has an order of 2) and a sum of 2.85.  Even if function #6 has a sum higher than function #3, the accuracy of function #3 is better since only a single control point does not match the expected values. For example, function #3 evaluates a pwm of 2180.73 µs to 148 while function #6 evaluates to 149 which is correct.\nThe following polynomial function offers the best performance to compute the Spektrum DX9 RC Transmitter value from the Orange R620X Rx pulse length:\nf(x) = -8.0e-8x2 + 0.2203x – 331.37\nDownload the Spektrum DX9 Tx \u0026amp; Orange R620X Rx (402 downloads)  full data capture.\nSpektrum DX9 Tx \u0026amp; Spektrum AR8000 Rx         250x250   250x250    **Table 1\n**The Spektrum DX9 Tx \u0026amp; Spektrum AR8000 Rx shows a PWM range from 921 µs to 2129 µs. The following table shows the details of my data capture session:\n  Spektrum DX9 Tx \u0026\u0026nbsp;Spektrum AR8000 Rx\r\rTx\rAvg PWM\rMin\rMax\rWidth\rMiddle\r\r\r150\r2123.57\r2119\r2129\r10\r2124.0\r\r\r149\r2119.40\r2113\r2124\r11\r2118.5\r\r\r148\r2115.38\r2109\r2121\r12\r2115.0\r\r\r147\r2111.07\r2105\r2116\r11\r2110.5\r\r\r146\r2106.94\r2101\r2111\r10\r2106.0\r\r\r100\r1923.78\r1918\r1929\r11\r1923.5\r\r\r50\r1724.52\r1720\r1729\r9\r1724.5\r\r\r\r1525.23\r1520\r1531\r11\r1525.5\r\r\r-50\r1325.74\r1319\r1331\r12\r1325.0\r\r\r-100\r1126.63\r1122\r1132\r10\r1127.0\r\r\r-120\r1047.06\r1041\r1051\r10\r1046.0\r\r\r-135\r987.40\r983\r992\r9\r987.5\r\r\r-146\r943.40\r939\r948\r9\r943.5\r\r\r-147\r939.48\r935\r944\r9\r939.5\r\r\r-148\r935.34\r929\r940\r11\r934.5\r\r\r-149\r931.24\r926\r936\r10\r931.0\r\r\r-150\r927.43\r921\r932\r11\r926.5\r\r\r**Table 2\n**From these values, I extracted the following polynomial functions:\n   Polynomial Equation Py1 Px1 Py2 Px2 a2 a1 a0      150 2123.57 -150 927.43  0.25080676 -382.605213   1 146 2106.94 -135 987.40  0.25099594 -382.8344   2 100 1923.78 -100 1126.63  0.25089444 -382.665703   3 148 2115.38 -148 935.34  0.25083895 -382.619708   4 146 2106.94 -146 943.40  0.25095742 -382.75323   5 149 2119.40 -149 931.24  0.25080797 -382.563419   6     -1.0E-07 0.2513 -382.95    **Table 3\n**Again, calculating the performance of each polynomial functions:\n   Tx Average PWM Eq0 Diff 0 Eq1 Diff 1 Eq2 Diff 2 Eq3 Diff 3 Eq4 Diff 4 Eq5 Diff 5 Eq6 Diff 6     150 2123.57 150  150 0.17 150 0.13 150 0.05 150 0.17 150 0.04 150 0.25   149 2119.40 149 0.04 149 0.13 149 0.08 149 0.01 149 0.13 149  149 0.21   148 2115.38 148 0.05 148 0.12 148 0.07 148  148 0.12 148 0.01 148 0.2   147 2111.07 147 0.14 147 0.04 147 0.01 147 0.08 147 0.03 147 0.09 147 0.12   146 2106.94 146 0.17 146  146 0.05 146 0.12 146  146 0.13 146 0.08   100 1923.78 100 0.11 100 0.03 100  100 0.06 100 0.03 100 0.06 100 0.13   50 1724.52 50 0.08 50 0.01 50 0.01 50 0.04 50 0.03 50 0.04 50 0.13    1525.23  0.07  0.01  0.01  0.03  0.02  0.02  0.11   -50 1325.74 -50 0.1 -50 0.08 -50 0.04 -50 0.07 -50 0.05 -50 0.06 -50 0.03   -100 1126.63 -100 0.04 -100 0.05 -100  -100 0.02 -100 0.02 -100  -100 0.05   -120 1047.06 -120  -120 0.03 -120 0.04 -120 0.02 -120 0.01 -120 0.05 -120 0.07   -135 987.40 -135 0.04 -135  -135 0.07 -135 0.06 -135 0.04 -135 0.09 -135 0.09   -146 943.40 -146 0.01 -146 0.04 -146 0.03 -146 0.02 -146  -146 0.05 -146 0.04   -147 939.48 -147 0.02 -147 0.03 -147 0.05 -147 0.04 -147 0.02 -147 0.07 -147 0.05   -148 935.34 -148 0.02 -148 0.07 -148 0.01 -148  -148 0.02 -148 0.03 -148 0.01   -149 931.24 -149 0.04 -149 0.1 -149 0.02 -149 0.03 -149 0.05 -149  -149 0.02   -150 927.43 -150  -150 0.05 -150 0.02 -150 0.02 -150 0.01 -150 0.04 -150 0.03      0.93  0.95  0.62  0.67  0.75  0.78  1.59    The table above shows two polynomial functions (see highlighted columns) that offers the best performance :\n Function #2 (which has an order of 1) and a sum of 0.62. Function #6 (which has an order of 2) and a sum of 1.59.  Function #2 offers the best performance. It is even better than the polynomial function with an order of 3. All control points matches the expected values. This means that Spektrum AR8000 Rx delivers near-perfect and linear PWM values for all given transmitter values.\nThe following polynomial function offers the best performance to compute the Spektrum DX9 RC Transmitter value from the Spektrum AR8000 Rx pulse length:\nf(x) = 0.25089444*x – 382.665703\nDownload the Spektrum DX9 Tx \u0026amp; Spektrum AR8000 Rx (365 downloads)  full data capture.\nTactic TTX600 Tx \u0026amp; Tactic TR624 Rx         250x250   250x250    **Notes:\n**The TTX600 transmitter is not digital. This means that it is hard to reproduce the exact behavior every time. As you can see the result are pretty erratic. Each different channel has a different behavior.\nFor extracting the data, I assumed that moving any sticks to the top, bottom, left and right position would always match a perfect 100% (or -100%). Other values (+60%, -60%) are based on the documentation manual which states that high and low dual rates are based on a 100% and 60% ratio.\nNote that each channel section are identified by a unique color which helps to identify the source of each Polynomial Equation.\r**Table 1\n**The Tactic TTX600 Tx \u0026amp; Tactic TR624 Rx shows a PWM range from 984 µs to 2030 µs. The following table shows the details of my data capture session:\n  Tactic TTX600 tx \u0026\u0026nbsp;Tactic TR624\r\rTx\rAvg PWM\rMin\rMax\rWidth\rMiddle\rComment\r\r100\r1969.01\r1962\r1973\r11\r1967.5\rCH1 +100\r\r60\r1793.74\r1789\r1800\r11\r1794.5\rCH1 +60\r\r\r1502.62\r1498\r1508\r10\r1503.0\rCH1 0\r\r-60\r1214.30\r1209\r1219\r10\r1214.0\rCH1 -60\r\r-100\r1042.41\r1037\r1046\r9\r1041.5\rCH1 -100\r\r100\r2022.89\r2017\r2030\r13\r2023.5\rCH2 +100\r\r60\r1838.71\r1834\r1844\r10\r1839.0\rCH2 +60\r\r\r1530.52\r1526\r1536\r10\r1531.0\rCH2 0\r\r-60\r1230.26\r1226\r1235\r9\r1230.5\rCH2 -60\r\r-100\r1048.09\r1043\r1052\r9\r1047.5\rCH2 -100\r\r100\r2010.15\r2004\r2016\r12\r2010.0\rCH5 +100\r\r-100\r989.31\r985\r995\r10\r990.0\rCH5 -100\r\r100\r2010.39\r2004\r2016\r12\r2010.0\rCH6 +100\r\r-100\r989.40\r984\r994\r10\r989.0\rCH6 -100\r\r\r**Table 2\n**From these values, I extracted the following polynomial functions:\n  Polynomial Equation\rPy1\rPx1\rPy2\rPx2\ra2\ra1\ra0\r\r\r100\r2010.152\r-100\r989.308\r\r0.19591632\r-293.821583\r\r1\r100\r2010.392\r-100\r989.402\r\r0.1958883\r-293.81228\r\r2\r100\r2022.892\r-100\r1048.088\r\r0.20516945\r-315.035638\r\r3\r60\r1838.708\r-60\r1230.256\r\r0.1972218\r-302.633306\r\r4\r100\r2022.892\r-60\r1230.256\r\r0.2018581\r-308.337143\r\r5\r60\r1838.708\r-100\r1048.088\r\r0.20237282\r-312.104526\r\r\r6\rall control points\r9.00E-06\r0.1755\r-287.34\r\r\r7\rCH1 control points\r-3.00E-06\r0.2221\r-327.22\r\r8\rCH2 control points\r-3.00E-06\r0.2135\r-318.97\r\r\r**Table 3 (for CH1)\n**The following table shows details for calculating the performance of each polynomial functions:\n   Tx Avg PWM Eq2 Diff 2 Eq3 Diff 3 Eq4 Diff 4 Eq5 Diff 5 Eq6 Diff 6 Eq7 Diff 7 Eq8 Diff 8     100 1969.01 89 11.05 86 14.3 89 10.88 86 13.63 93 6.89 98 1.53 90 10.22   60 1793.74 53 7.02 51 8.87 54 6.26 51 9.1 56 3.58 62 1.52 54 5.66    1502.62 -7 6.74 -6 6.28 -5 5.02 -8 8.02 -3 3.31  0.26 -5 4.93   -60 1214.30 -66 5.9 -63 3.15 -63 3.22 -66 6.36 -61 0.96 -62 1.95 -64 4.14   -100 1042.41 -101 1.17 -97 2.95 -98 2.08 -101 1.15 -95 5.38 -99 1.04 -100 0.32      31.88  35.55  27.46  38.26  20.12  6.3  25.28    **Table 3 (for CH2)\n**The following table shows details for calculating the performance of each polynomial functions:\n   Tx Avg PWM Eq2 Diff 2 Eq3 Diff 3 Eq4 Diff 4 Eq5 Diff 5 Eq6 Diff 6 Eq7 Diff 7 Eq8 Diff 8     100 2022.89 100  96 3.67 100  97 2.73 105 4.51 110 9.79 101 0.64   60 1838.71 62 2.21 60  63 2.82 60  66 5.78 71 11.01 63 3.45    1530.52 -1 1.02 -1 0.78 1 0.61 -2 2.37 2 2.35 6 5.68 1 0.77   -60 1230.26 -63 2.62 -60  -60  -63 3.13 -58 2.19 -59 1.48 -61 0.85   -100 1048.09 -100  -96 4.07 -97 3.23 -100  -94 6.49 -98 2.26 -98 1.5      5.85  8.53  6.66  8.23  21.31  30.23  7.21    The two tables above shows two polynomial functions (see highlighted columns) that offers the best performance:\n Function #7 (which has an order of 2) and a sum of 6.3. Function #8 (which has an order of 2) and a sum of 7.21. All polynomial function which has an order of 1 shows terrible prediction performance.  Note that best function for channel 1 (function #7) shows terrible results when used in calculations of channel 2. That is also for function 8. This means that there is no generic function that can be used for all channel situations. As a proof, function #6 which is based on all observed values for all channels shows terrible results.\rIn other words, reading the PWM length or the Tactic TTX600 Tx \u0026amp; Tactic TR624 Rx combination can only be used for detecting if the sticks are \u0026ldquo;up\u0026rdquo;, \u0026ldquo;centered\u0026rdquo; or \u0026ldquo;down\u0026rdquo; but not really \u0026ldquo;how much up or down\u0026rdquo;.\nThe following polynomial functions offers the best performance to compute the Tactic TTX600 Tx transmitter value from the Tactic TR624 Rx pulse length:\nChannel 1 :\nf(x) = -3.0E-6x2 + 0.2221x – 327.22\nChannel 2 :\nf(x) = -3.0E-6x2 + 0.2135x – 318.97\nDownload the Tactic TTX600 Tx \u0026amp; Tactic TR624 Rx (390 downloads)  full data capture.\nCCPM Servo Tester         250x250    Table 1\nThe CCPM Servo Tester shows a PWM range from 900 µs to 2210 µs. The following table shows the details of my data capture session:\n  CCPM Servo Tester\r\rValue\rAvg PWM\rMin\rMax\rWidth\rMiddle\rComment\r\r\r100\r2103.82\r2098\r2110\r12\r2104\rCW\r\r\r\r1504.75\r1501\r1511\r10\r1506\rCENTER\r\r\r-100\r903.77\r900\r909\r9\r904.5\rCCW\r\r\rNote that values for the CCPM Server Tester (100, -100) are assumptions and represents clockwise and counterclockwise positions of the potentiometer. In fact, based on the observed PWM values, the values should be more in the (133, -133) range according the Spektrum DX9 Tx \u0026amp; Orange R620X Rx results or in (150, -150) range according the Spektrum DX9 Tx \u0026amp; Spektrum AR8000 Rx results.\rTable 2\nFrom these values, I extracted the following polynomial functions:\n   Polynomial Equation Py1 Px1 Py2 Px2 a2 a1 a0      100 2103.82 -100 903.77  0.16665945 -250.62214   1 100 2103.824  1504.752  0.16692484 -251.180493   2  1504.752 -100 903.772  0.16639489 -250.383041   3     4.0E-07 0.1653 -249.78    Table 3\nThe following table shows details for calculating the performance of each polynomial functions:\n   Value Avg PWM Eq0 Diff 0 Eq1 Diff 1 Eq2 Diff 2 Eq3 Diff 3     100 2103.82 100  100  100 0.32 100 0.25    1504.75  0.16      0.14   -100 903.77 -100  -100 0.32 -100  -100 0.06      0.16  0.32  0.32  0.45    Note that only 3 control points are available which means that all performance calculations will always match 2/3 controls points (since the equation is derived from these 2 points). Performance calculations are irrelevant in this particular situation.\rEven if the performance of function #3 seem to be the worst, it seems like it is the one that is the most promising since it takes into account all control points.\nThe following polynomial function offers the best performance to compute the CCPM Servo Tester pulse length:\nf(x) = 4.0E-07x2 + 0.1653x – 249.78\nDownload the CCPM Servo Tester (384 downloads)  full data capture.\n",
    "ref": "/mapping-rc-transmitter-pwm-signal-to-actual-transmitter-values/"
  },{
    "title": "BitReader – An arduino library for reading & writing data as chunks of bits",
    "date": "",
    "description": "",
    "body": "Introduction Here is another arduino library that I have written.\nAs a desktop developer, I am not used to have memory (or even CPU) requirements as most developers will not look at memory consumption as an arduino developer would. Memory \u0026amp; CPU is cheap. If your application is struggling to run on today\u0026rsquo;s computer, it will run smoothly in 1-2 years.\nAs most arduino developers have faced, the amount of memory available on embedded devices is pretty limited. Having a way to save bits or our precious memory is interesting.\nBitReader is an arduino library that allows one to read or write data as chunks of bits.\nSkip to the download section for quick download.\nPurpose This BitReader library allows one to read data which is not necessarily aligned on 8, 16 or 32 bits structures.\nNote that since you are encoding data in binary format (bits), the trade-off is that more code is required to process/decode the data and there is a small performance delay required for decoding the data\rThe library is useful for storing or decoding data in binary format using the minimum amount of bits. For examples\u0026hellip;\n Shorter text strings Shorter structures Shorter data arrays  Library features Possible use are:\n Reduces size of data (strings, structures, arrays) in memory to the minimum amount of bits required. Help reading/updating bit-field structures. Handles bit serialization data to/from buffers.  Usage Create an instance of BitReader, BitWriter or BitAddress depending on the following optimization switches:\n USE_BITADDRESS_SETTER_GETTER USE_SINGLEBIT_MACROS USE_BITADDRESS_READ_WRITE  Then assign a reading or writing buffer using the setBuffer() method.\nThen call the write() method for writing bits to the assigned buffer or call the read() method for reading bits from the assigned buffer. Each method allows one to specify the amount of bits to read or write.\nMaking text strings shorter Storing words composed of only lower case letters, spaces and dots requires only 5 bits per characters instead of 8 bits (which saves 3 bits per character). The phase \u0026ldquo;hello my name is antoine. i wrote the bitreader library.\u0026rdquo; takes 56 bytes as an array of char but uses 35 bytes as 5 bits chunks.\nAllow 6 bits per characters and you can also include capital letters and numbers: \u0026ldquo;Hello my name is Antoine. I wrote the BitReader library when I was 34 years old.\u0026rdquo; takes 80 bytes as an array of char but only requires 60 bytes as 6 bits chunks.\nShorter structures definition The library is particularly useful for dealing with bit-field structures. Consider the following:\n1struct Person { 2 char name[10]; 3 char birthDay; 4 char birthMonth; 5 short birthYear; 6 bool maried; 7 char children; 8}; The Person structure requires 16 bytes in memory (10+1+1+2+1+1) or 128 bits. However, using bit-field structure, the Person structure can be defined as the following:\n1struct Person2 { 2 uint8_t name[10]; //keep 8 bits per letters for compatibility. 3 union 4 { 5 struct //aligned on 8 bits 6 { 7 uint8_t birthDay : 5; //from 1 to 31 8 uint8_t children : 3; //from 0 to 7. 9 uint8_t birthMonth : 4; //from 1 to 12 10 uint8_t maried : 1; //true or false 11 //uint8_t : 3; //birthYear (low) 12 //uint8_t : 8; //birthYear (high) 13 }; 14 struct //aligned on 32 bits 15 { 16 uint32_t padding1 :13; //padding for birthDay, children, birthMonth, maried 17 uint32_t birthYear :12; //allows years from 0 to 4095. 18 //uint16_t : 4; //unused 19 }; 20 }; 21}; The Person2 structure contains the same information as the Person structure but instead of using 128 bits in memory it only requires 105 bits (80+5+3+4+1+12).\nA Person could also be defined with masks:\n1struct Person3 { 2 uint8_t name[10]; 3 uint32_t buffer; 4}; 5static const uint32_t MASK_BIRTHDAY = (1\u0026amp;lt;\u0026amp;lt;4 | 1\u0026amp;lt;\u0026amp;lt;3 | 1\u0026amp;lt;\u0026amp;lt;2 | 1\u0026amp;lt;\u0026amp;lt;1 | 1\u0026amp;lt;\u0026amp;lt;0); 6static const uint32_t MASK_CHILDREN = (1\u0026amp;lt;\u0026amp;lt;7 | 1\u0026amp;lt;\u0026amp;lt;6 | 1\u0026amp;lt;\u0026amp;lt;5); 7static const uint32_t MASK_BIRTHMONTH = (1\u0026amp;lt;\u0026amp;lt;11 | 1\u0026amp;lt;\u0026amp;lt;10 | 1\u0026amp;lt;\u0026amp;lt;9 | 1\u0026amp;lt;\u0026amp;lt;8); 8static const uint32_t MASK_MARIED = (1\u0026amp;lt;\u0026amp;lt;12); 9static const uint32_t MASK_BIRTHYEAR = (1\u0026amp;lt;\u0026amp;lt;24 | 1\u0026amp;lt;\u0026amp;lt;23 | 1\u0026amp;lt;\u0026amp;lt;22 | 1\u0026amp;lt;\u0026amp;lt;21 | 1\u0026amp;lt;\u0026amp;lt;20 | 1\u0026amp;lt;\u0026amp;lt;19 | 1\u0026amp;lt;\u0026amp;lt;18 | 1\u0026amp;lt;\u0026amp;lt;17 | 1\u0026amp;lt;\u0026amp;lt;16 | 1\u0026amp;lt;\u0026amp;lt;15 | 1\u0026amp;lt;\u0026amp;lt;14 | 1\u0026amp;lt;\u0026amp;lt;13); 10static const uint32_t MASK_PADDING = (1\u0026amp;lt;\u0026amp;lt;31 | 1\u0026amp;lt;\u0026amp;lt;30 | 1\u0026amp;lt;\u0026amp;lt;29 | 1\u0026amp;lt;\u0026amp;lt;28 | 1\u0026amp;lt;\u0026amp;lt;27 | 1\u0026amp;lt;\u0026amp;lt;26 | 1\u0026amp;lt;\u0026amp;lt;25); In the last 2 scenarios (Person2 and Person3), the BitReader library allows one to decode a Person structure from a binary buffer.\nMake data arrays much shorter Consider an algorithm that plays a Morse code. Morse code defines 3 symbols that can be played: dots, dashes and pauses.\nFor example, the following string \u0026ldquo;Hello my name is Antoine. I wrote the BitReader library when I was 34 years old.\u0026rdquo; (56 bytes) translate into Morse code as\n.... . .-.. .-.. --- / -- -.-- / -. .- -- . / .. ... / .- -. - --- .. -. . .-.-.- / .. / .-- .-. --- - . / - .... . / -... .. - .-. . .- -.. . .-. / .-.. .. -... .-. .- .-. -.-- / .-- .... . -. / .. / .-- .- ... / ...-- ....- / -.-- . .- .-. ... / --- .-.. -.. .-.-.-\raccording to this translator. The whole code takes 267 bytes in memory. However, using 2 bits per code, the whole string can be encoded in a char buffer with only 534 bits (~67 bytes).\nThe same concept applies to all numeric array.\nDemo The following demo show how to use the library:\n(download the BitReader v1.0.70 benchmark demo.ino (596 downloads) )\n#include \u0026lt;bitreader.h\u0026gt;\r/**\r* Encoding \u0026#34;text\u0026#34; as 5 bits characters using the following:\r* A -\u0026gt; 0\r* Z -\u0026gt; 26\r* -\u0026gt; 27\r* . -\u0026gt; 28\r* 0 -\u0026gt; 29\r* 1 -\u0026gt; 30\r* 2 -\u0026gt; 31\r*/\r#define BUFFER_SIZE 600\runsigned char sourceBuffer[BUFFER_SIZE];\runsigned char targetBuffer[BUFFER_SIZE];\rvoid setup() {\rSerial.begin(9600);\r#ifdef USE_BITADDRESS_SETTER_GETTER\rSerial.println(\u0026#34;#define USE_BITADDRESS_SETTER_GETTER\u0026#34;);\r#endif\r#ifdef USE_SINGLEBIT_MACROS\rSerial.println(\u0026#34;#define USE_SINGLEBIT_MACROS\u0026#34;);\r#endif\r#ifdef USE_BITADDRESS_READ_WRITE\rSerial.println(\u0026#34;#define USE_BITADDRESS_READ_WRITE\u0026#34;);\r#endif\r//copy all characters from sourceBuffer to targetBuffer using 1 to 16 bits block.\rfor(int numBits = 1; numBits\u0026lt;=16; numBits++) {\r#ifndef USE_BITADDRESS_READ_WRITE\rBitReader bitreader;\rBitWriter bitwriter;\r#else\rBitAddress bitreader;\rBitAddress bitwriter;\r#endif\rbitreader.setBuffer(sourceBuffer);\rbitwriter.setBuffer(targetBuffer);\r//initialize sourceBuffer\rfor(int i=0; i\u0026lt;BUFFER_SIZE; i++) {\rsourceBuffer[i] = i+numBits;\r}\r//start counter\runsigned long timeStart = millis();\r//proceed with buffer copy\rint totalBits = BUFFER_SIZE*BITS_PER_BYTE;\rint numBlocks = totalBits / numBits;\rint temp = 0;\rfor(int i=0; i\u0026lt;numBlocks; i++) {\rbitreader.read(numBits, \u0026amp;temp);\rbitwriter.write(\u0026amp;temp, numBits);\r}\r//stop timer\runsigned long timeEnd = millis();\runsigned long timeElapsed = timeEnd - timeStart;\r//make sure both buffer are equals (that bit copy operation worked as expected)\rbool equal = true;\rfor(int i=0; i\u0026lt;BUFFER_SIZE; i++) {\r// Do not validate the last 2 bytes of the buffer\r// With certain numBits size, the remaining bits\r// of the source buffer are not copied to the // target buffer. The same as would 3, 6 and 7 bits\r// would not copy the totality of a byte (8 bits)\rif (i \u0026gt;= BUFFER_SIZE-2) {\rcontinue;\r}\rif (sourceBuffer[i] != targetBuffer[i]) {\requal = false;\r}\r}\r//outputting benchnmark test values\rif (!equal) {\rSerial.println(\u0026#34;*** Warning! Both buffers are not equals!\u0026#34;);\r}\rchar msg[65];\rsprintf(msg, \u0026#34;Copied %d bytes using blocks of %d bits in %d milliseconds.\u0026#34;, BUFFER_SIZE, numBits, timeElapsed);\rSerial.println(msg);\r}\r}\rvoid loop() {\r}\r License This library is free software; you can redistribute it and/or modify it under the terms of the GNU Lesser General Public License as published by the Free Software Foundation; either version 3.0 of the License, or (at your option) any later version.\nThis library is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License (LGPL-3.0) for more details.\nYou should have received a copy of the GNU Lesser General Public License along with this library; if not, write to the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA\nDISCLAIMER:\nThis software is furnished \u0026ldquo;as is\u0026rdquo;, without technical support, and with no warranty, express or implied, as to its usefulness for any purpose.\nDownload You can download the BitReader arduino library by clicking on the following link:\n [ Download \u0026quot;BitReader v1.1.110 arduino library\u0026quot; BitReader-v1.1.110.zip - Downloaded 404 times - 10 KB ](http://www.end2endzone.com/download/1688/)\r",
    "ref": "/bitreader-an-arduino-library-for-reading-writing-data-as-chunks-of-bits/"
  },{
    "title": "NonBlockingRTTTL – A non-blocking arduino library for playing RTTTL melodies",
    "date": "",
    "description": "",
    "body": "Introduction The following article is about my first Arduino library that I have written. NonBlockingRTTTL is a non-blocking arduino library for playing RTTTL data.\nEDIT: The NonBlockingRtttl arduino library is now moved to GitHub. Source code can be downloaded from the project’s GitHub page.\rEDIT: NonBlockingRTTTL library is now available on the Arduino Library Manager.\rSkip to the download section for quick download.\nPurpose Most code that can be found on the internet that allows you to \u0026ldquo;play\u0026rdquo; an RTTTL string is build the same way: sequential calls to the tone() function followed by a delay() function. This type of implementation might be good for robots but not for realtime application or projects that needs to monitor pins while the song is playing.\nThis library is non-blocking which make it suitable to be used by more advanced algorithm. The non-blocking RTTTL library is a port of the RTTTL example from the Tone library.\nQuick recall of the RTTTL format I recently discovered the Ring Tone Text Transfer Language (RTTTL) audio format which is an audio format for storing single tone (monolithic) melodies. Each melody is composed of successive tone frequencies.\nThe RTTTL format is human readable and usually more compressed than note \u0026amp; duration arrays which helps reduce its memory footprint.\nIn the arduino world, melodies are usually written as an array of notes (frequencies) followed by the note\u0026rsquo;s duration (note1, duration1, note2, duration2, \u0026hellip; , noteX, durationX).\nThe format is really suitable for embedded device that are limited in memory which can\u0026rsquo;t store PCM (wav) or even MP3 data.\nNote that RTTTL can also be spelled RTTL (Ringtone Text Transfer Language). According to my Samsung phone, a ringtone can also be spelled as a single word\u0026hellip;\rMore information on the RTTTL format is available on its Wikipedia acticle.\nLibrary features Possible use are:\n Really small increase in memory \u0026amp; code footprint compared to the usual blocking algorithm. Allows your program to read/write IOs pins while playing. Implementing a \u0026ldquo;stop\u0026rdquo; or \u0026ldquo;next song\u0026rdquo; push buttons is a breeze!  Usage Call rtttl::begin() to setup the non-blocking RTTTL library. Then call rtttl::play() to update the library\u0026rsquo;s state and play notes as required.\nUse rtttl::done() or rtttl::isPlaying() to know if the library is done playing the given song. Anytime playing, one can call rtttl::stop() to stop playing the current song.\nDefine RTTTL_NONBLOCKING_INFO to enable the debugging of the library state on the serial port. Use NONBLOCKINGRTTTL_VERSION to read the current version of the library.\nDemo The following demo show how to use the library:\n(download the NonBlockingRtttl demo sample (738 downloads) )\n1#include \u0026lt;NonBlockingRtttl.h\u0026gt;2 3//project\u0026#39;s contants 4#define BUZZER_PIN 8 5const char * tetris = \u0026#34;tetris:d=4,o=5,b=160:e6,8b,8c6,8d6,16e6,16d6,8c6,8b,a,8a,8c6,e6,8d6,8c6,b,8b,8c6,d6,e6,c6,a,2a,8p,d6,8f6,a6,8g6,8f6,e6,8e6,8c6,e6,8d6,8c6,b,8b,8c6,d6,e6,c6,a,a\u0026#34;; 6const char * arkanoid = \u0026#34;Arkanoid:d=4,o=5,b=140:8g6,16p,16g.6,2a#6,32p,8a6,8g6,8f6,8a6,2g6\u0026#34;; 7const char * mario = \u0026#34;mario:d=4,o=5,b=100:16e6,16e6,32p,8e6,16c6,8e6,8g6,8p,8g,8p,8c6,16p,8g,16p,8e,16p,8a,8b,16a#,8a,16g.,16e6,16g6,8a6,16f6,8g6,8e6,16c6,16d6,8b,16p,8c6,16p,8g,16p,8e,16p,8a,8b,16a#,8a,16g.,16e6,16g6,8a6,16f6,8g6,8e6,16c6,16d6,8b,8p,16g6,16f#6,16f6,16d#6,16p,16e6,16p,16g#,16a,16c6,16p,16a,16c6,16d6,8p,16g6,16f#6,16f6,16d#6,16p,16e6,16p,16c7,16p,16c7,16c7,p,16g6,16f#6,16f6,16d#6,16p,16e6,16p,16g#,16a,16c6,16p,16a,16c6,16d6,8p,16d#6,8p,16d6,8p,16c6\u0026#34;; 8byte songIndex = 0; //which song to play when the previous one finishes 9 10void setup() { 11 pinMode(BUZZER_PIN, OUTPUT); 12 13 Serial.begin(115200); 14 Serial.println(); 15} 16 17void loop() { 18 if ( !rtttl::isPlaying() ) 19 { 20 if (songIndex == 0) 21 { 22 rtttl::begin(BUZZER_PIN, mario); 23 songIndex++; //ready for next song 24 25 //play for 5 sec then stop. 26 //note: this is a blocking code section 27 //use to demonstrate the use of stop 28 unsigned long start = millis(); 29 while( millis() - start \u0026lt; 5000 ) 30 { 31 rtttl::play(); 32 } 33 rtttl::stop(); 34 35 } 36 else if (songIndex == 1) 37 { 38 rtttl::begin(BUZZER_PIN, arkanoid); 39 songIndex++; //ready for next song 40 } 41 else if (songIndex == 2) 42 { 43 rtttl::begin(BUZZER_PIN, tetris); 44 songIndex++; //ready for next song 45 } 46 } 47 else 48 { 49 rtttl::play(); 50 } 51} License The following code was written by Antoine Beauchamp. The non-blocking RTTTL library is a port of the RTTTL example from the Tone library which is licensed with the MIT License.\nThe code \u0026amp; updates for the library can be found at http://end2endzone.com.\nFor the original source code for the RTTTL player see: http://code.google.com/archive/p/rogue-code/wikis/ToneLibraryDocumentation.wiki.\nDownload Please note that download links are now deprecated. Binary version of NonBlockingRtttl library can be downloaded from the project’s Release page.\rEDIT: NonBlockingRTTTL library can now be installed from the Arduino Library Manager.\r",
    "ref": "/nonblockingrtttl-a-non-blocking-arduino-library-for-playing-rtttl-melodies/"
  },{
    "title": "Demystifying RC Transmitter Mixing",
    "date": "",
    "description": "",
    "body": "Introduction If you look on the internet for \u0026ldquo;mixing\u0026rdquo;, you will usually find posts and articles of people asking for things like \u0026ldquo;what is the best mix I should use for this or that\u0026rdquo; which I think is not helpful. I think it is far more helpful to actually understand what mixing is and how it can help you improve your skills as a pilot. Lately I wanted to understand how mixing could help me in a personal project. I took this opportunity to learn something new and try to demystifying RC Transmitter Mixing.\nEDIT: To make all mixing pre-calculations easier, do not hesitate to use my Mixing Calculator for R/C Transmitter (it\u0026rsquo;s an Excel Sheet!)\rI am really new to mixing. I have flown all my planes without ever used any mix. This is mostly because I have never had the need to use some (I\u0026rsquo;ve always been trying to make adjustment manually with the sticks to improve my skills).\nAs a side note, I have never touch anything related to helicopter mixing which looks more complicated and is not covered here.\rWhat is mixing ? According to the\nUser Manual of the Spektrum DX9 Instruction Manual, this is the definition of Mixing:\nMixing allows control input for a channel to affect more than one channel at a time. Mixing functions support:\n Mixing a channel to another channel.   Mixing a channel to itself.\n  Assigning offset to a channel\n  Linking primary to secondary trim. These mixes are available for each model memory. Select a channel for master and slave. Inputs for the Master Channel control both the master and Slave Channels. For example, Elevator to Flap makes elevator the Master Channel and flap the Slave Channel. Change the offset value to move the effective center position of the Slave Channel. Positive or negative value determines the direction of the offset. Offset is not available for curve mixes. In other words, mixing allows you to affect a Slave Channel based on the input of another (master). By mastering the art of mixing, you will reduce the amount of small corrections you make to get the desired flight pattern. A mix is composed of the following:\n  Master \u0026amp; Slave Channels.\n  High and Low rates value.\n  An offset value.\n  A trim value (not always, not covered in this article) All mix properties shall be in the following range:\n  High and Low rates shall be in the range -125 to +125.\n  Offset shall be in the range -100 to +100.\n  Minimum calculated mix value shall be -150.\n  Maximum calculated mix value shall be +150. Mixes can also be enabled or disabled based on a switch. This is useful to get different behavior based for instance on a flight mode. Multiple mixes can also be combined (see\n    Combining mixes) into the same Slave Channel to get different effects.\nWhen to not use mixes There is a lot of situations where using mixes is not recommended:\n If you are flying a \u0026ldquo;trainer\u0026rdquo;. It is called a trainer for a reason. It means you should train yourself as a pilot to make the corrections yourself. If you are a new pilot (flying for less than 2-3 years). Using mixes wont make you a better pilot. In fact it will make things worst. Is is only recommended to learn to fly first without any help from your transmitter and then experiment at a higher skill level. Using mixes is not the best thing for the development of your skills. Learn to fly without any mix first to learn the proper technique. As for personal development, it is far more rewarding to not use mixes at all. It will pay off and you will thank yourself in the future. Keep in mind that mixes does not solve everything. In fact, the more mixes you have, the bigger your problem could get. If you add a Ailerons to Rudder mix to get good coordinated turns, imagine trying to land in a cross wind situation or flying inverted. Things can get ugly pretty quick. It is also strongly suggested to assign a switch to a mix in order to toggle the mix ON and OFF. This way, if something is wrong with the mix, you can get back to the normal behavior of your transmitter.  Basic mixes There are some basic mixes that you may be interested into. Here are some example:\nThrottle to Elevator In order to keep the same altitude, the amount of elevator may differ depending on your true air speed. By mixing a certain amount of Throttle into the Elevator, this can be adjusted automatically by the transmitter.\nRudder to Ailerons When turning, you usually add a little bit of Rudder to keep the same altitude and make a good coordinated turn. Adding a Rudder to Aileron mix will reduce this effect. This configuration also keeps the ailerons from moving free for greater turns. Keep in mind that this mix may not be recommended. Most trained pilot does not use this kind of mix. Using this mix in calm or medium breeze wind will help but as soon as the wind condition change you will still require good rudder skills to make those turns look nice. I personally never used this one. IMO what defines a good pilot from a great pilot is how he masters the rudder.\nAdvanced Mixes Differential Thrust This is for a twin engine plane where each ESC is controlled by a separate channel: left engine channel and right engine channel. Throttle is assigned to Left Engine Channel, a mix is used to drive the Right Engine Channel from Throttle. Another mix is used to mix Rudder into Left or Right Engine Channel. When Rudder is centered, both throttle channels are equals. When Rudder is moved to right, the left engine channel increase power. When Rudder is moved to left, the right engine channel increase power.\nAilerons to Flaps This one is only available if your flaps can move up. It wont work if your flaps only goes down. Mixing your ailerons to your flaps will allow your flaps to follow its matching aileron effectively turning the whole trailing edge of the wing into one long aileron. This is useful for some high aerobatic maneuvers.\nFlaps to Elevator Mix a small amount of Flaps in Elevator (the opposite way) to prevent the \u0026ldquo;bump\u0026rdquo; caused by enabling the flaps.\nUseful mixes Cancelling a switch A mix can also be used to cancel a switch assigned to a channel. If you need to invalidate/ignore a switch, a mix can cancel out the effect. In other words, the assigned channel will be reset to 0 (center position) what ever the switch position is. Use the following mix values to cancel a switch:\n          High = 100%   Low = -100%   Offset = 0%   This trick can come valuable in some situation.      Forcing a value A mix can be used to force a given value to a channel. A typical use is triggering Failsafe flight mode. Say you have the following flight modes:\n[gps] [failsafe] [attitude] [failsafe] [manual]. Assuming that the first Failsafe mode is identical to the second Failsafe, you need to assign two 2-position switches to implement all possible modes. In this case, no mix is required. Another way of implementing this is to use a 3-position switch and assign the [gps], [attitude] and [manual] flight modes to this switch and use a second 2-position switch as a \u0026ldquo;panic\u0026rdquo; switch that triggers [Failsafe] (while also disabling the flight mode switch). A mix is required to cancel out the first switch and a second mix to force the flight mode channel to move to [Failsafe] position. See also Cancelling a switch.\nThrottle cut mix By combining\nCancelling a switch and Forcing a value mixes, one can create mixes slaved to Throttle to achieve a Throttle Cut safety by forcing the Throttle channel to -150 which disables the Throttle stick and prevents propeller injuries.\nGeneric mixes Positive only mix Use the following mix to cancel the negative portion of a switch resulting in an effective range of 0% to 100%.\n          High = 50%   Low = 0%   Offset = -100%    Parabolic mix Use the following to get an effective range of 100% to 0% to 100%.\n          High = 100%   Low = -100%   Offset = 0%   In other words:       A knob will show 100% when completely clockwise or counter clockwise but show 0% when halfway turned. A 3-position switch will show 100% in Position 0 and Position 2 but 0% in Position 1. A 2-position switch will always show 100%.  Inverted polarity mix Use the following to invert the polarity of a switch or a knob resulting in an effective range from +100 to -100 instead of -100 to +100.\n          High = 100%   Low = -100%   Offset = 0%   This feature may be required if a transmitter does not support native inverting for the desired switch. A possible use to this kind of mix is for handling ailerons when each aileron have their own servo and channel.      The Mathematical calculations The equation Note: The following is an extract of how the Spektrum transmitters calculate mixes. Please note that your mileage could vary if you use a different kind of transmitter.\rA 3-position switch will define 3 values for a given mix: Position 0, Position 1 and Position 2 while a 2-position switch will define 2 values for a mix: Position 0 and Position 1. Position 0 of a 2-position switch matches Position 0 of a 3-position switch and Position 1 of a 2-position switch matches Position 2 of a 3-position switch. The following table list position matches:\nSwitch types\r\r3-position\r2-position\r\r\rPosition 0\rPosition 0\r\r\rPosition 1\r\r\r\rPosition 2\rPosition 1\r\r\rThe following equation will help you solve an endless issue: How to calculate a mix boundaries: OffsetTravel = (switch default travel (see below)) - Offset if OffsetTravel \u0026lt; 0 SwitchMixValue = OffsetTravel / 100 * Low rate else SwitchMixValue = OffsetTravel / 100 * High rate A 3-position switch has the following default travel values:\n          Position 0 : -100%   Position 1 : 0%   Position 2 : +100%   And a 2-position switch has the following default travel values:                Position 0 : -100%   Position 1 : +100%   For instance, the following mix:                High = 50%   Low = 50%   Offset = 0%   assigned to a 3-position switch, will add the following values to its Slave Channel:                Position 0 : +50%   Position 1 : 0%   Position 2 : -50%   The easiest way to calculate a mix boundaries is to use this      Excel Worksheet.\nCombining mixes Mixes of the same Slave Channel are combined All mixes assigned to the same Slave Channel are combined (added to each other). In other words, if a first mix ranges from -100 to +100 is assigned to AUX1 and a second mix which is also assigned to AUX1 ranges from -25 to +25, then AUX1 effective range will be -125 to +125.\nMixes are combined with assigned switches If a switch is assigned to the same Slave Channel as other mixes, they will be combined. In other words, if switch G is assigned to AUX1 and has travel set to range from -130 to +130 and a mix that ranges from -20 to +20 is also assigned to AUX1, then AUX1 effective range will be -150 to +150.\nCombining mixes to multiplex multiple switches Mixes can also be used to multiplex multiple inputs into a single channel. This procedure is covered in its own article:\n[ARTICLE TO BE PUBLISHED SOON].\nOther lectures Here is more information to better understand mixing:\n Solving the DX8 spectrum mix setting mystery (or here) Mixing - DX9 Wiki - Wikia ",
    "ref": "/demystifying-rc-transmitter-mixing/"
  },{
    "title": "RC Transmitter Mix Calculator",
    "date": "",
    "description": "",
    "body": "This is an Excel worksheet I created based on the calculations I found for calculating most R/C Transmitter mixes. It is designed to help you identify the effective range of a mix (finding the low, medium and high values).\nSee my post on Demystifying RC Transmitter Mixing for more details.\nPlease note the following calculator is valid on Spektrum Transmitters. I did not verified it\u0026rsquo;s validity or accuracy on other transmitters.\nRC Transmitter Mix Calculator Usage Only white cells should be modified.\nCells in light blue are the final mix values.\nScreenshot **MIXING\nCALCULATOR**\r\rSwitch Pos\r\r\r1\r2\r\r**Travel**\r100\r\r-100\r\r**Rates**\r**High**\r**Low**\r**Offset**\r\r50\r50\r\r\r**Offset Values**\r100\r\r-100\r\r**Intermediate\nValues**\r50\r\r-50\r\r\u0026nbsp;\r\r\r**\u0026nbsp;**\r\r**Final Values**\r**50**\r\r**-50**\r\r\rDownload [ Mixing Calculator for R/C Transmitter (1107 downloads) ](http://www.end2endzone.com/download/1255/ \u0026quot;Version 2.0\u0026quot;)\r Enjoy!\n",
    "ref": "/rc-transmitter-mix-calculator/"
  },{
    "title": "Maintenance of Hobbico TorqMaster 90 deluxe 12 Volt RC starter",
    "date": "",
    "description": "",
    "body": "This article is about how I did the maintenance on my Hobbico Torqmaster 90 deluxe which is a 12 Volt starter for remote controlled (RC) aircraft. I wanted to change the rubber nose to get a better grip on my Avistar Elite spinner. I ended up disassembling the whole unit before understanding what I should have done.\nThis guide documents the steps and tricks I used to reassemble the unit. I hope it may help someone that have the same issue. If not, then I shall use this article as a way for me to remember how I did the maintenance on the starter and which tool I used\u0026hellip;\nGeneral information This is a Hobbico Torqmaster 90 Deluxe 12 Volt Starter. It is designed for starting Glow Engines up to .90 cubic inches in size. This starter features an aluminum starter cone with V-Groove for boat starter belts and round rubber insert for airplane spinner cones. The starter has self-adjusting carbon brushes for longer lasting usage and constant contact with the armature. Easy-Press start switch makes starting easy without requiring heavy finger pressure and a built-in finger-guard promises safe starts. Pre-attached alligator clips for easy attachment to a 12 volt battery. The starter is a regular DC brushed motor. Most parts of the starter can be modded or replaced. The switch and the\nbrushes are the one that may need attention.\nRequired tools  8 mm and 10 mm hex sockets 2 metal paper clips 1 pair of long nose pliers  Maintenance Replace the rubber insert adapter for aircraft                  Hobbico TorqMaster Rubber Insert (Air) | | [![Hobbico TorqMaster Rubber Insert (Air)](http://www.end2endzone.com/wp-content/uploads/2015/09/IMG_6803_LR5.jpg)](http://www.end2endzone.com/wp-content/uploads/2015/09/IMG_6803_LR5.jpg)\rHobbico TorqMaster Rubber Insert (Air) |\r The rubber insert can be changed\nwithout dissembling the whole unit. The insert is not glued or screwed into the drive cone but is inserted by pressure. Removing the insert can be done using one of the following ways: If the old rubber insert can be disposed, then the easiest way is to use long nose pliers and try to \u0026ldquo;pluck\u0026rdquo; the rubber material around the hex screw until the insert can be removed with your hands. Here is a picture of the insert removed with this method:\n\nHobbico TorqMaster old / used Rubber Insert Another way is to try to unscrew the Drive Cone from the shaft of the unit. Use the 10 mm hex socket and try to push against the rubber to force the socket to get between the nut and the rubber and unscrew. Once you removed the screw from the cone, you will have enough free space for the rubber insert to be pushed to the inside of cone and then you can \u0026ldquo;pinch\u0026rdquo; it with long nose pliers and pull it out. The new Hobbico TorqMaster Rubber Insert (Air) can be inserted by pressure into the Driver Cone without difficulty.\nOpening the case The case is held in place by 2 screws. Both screws are 4 inches long (goes through the whole body) and have a 8 mm hexadecimal head. To open the case, remove the 2 screws then pull out the back cover.\nWarning: removing the back cover will disconnect the brushes from the rotor and you will need to assemble the unit again.\nA fixed front cover For an unknown reason the front cover of the unit seems to be fixed to the rotor. Even if you remove the Driver Cone, you will not be able to detach the front cover from the rotor. This was unexpected but I never found out why I wasn\u0026rsquo;t able to split the part.\nReplacing the motor\u0026rsquo;s brushes In the RC world, people usually prefer using brushless motors since they do not have brushes. The main disadvantages of using a brushed motor is that the brushes will wear down and you will eventually need to replace them. In most cases you should not have to change the brushes on a 12 volt RC starter since the motor is not used more than a few seconds each time you go to the field. The brushes should last for a very long time if you take care of the starter by:\n Not using the starter for a too long period of time. Not applying too much power (voltage or amperage outside the specifications boundaries). Not using the motor in harsh conditions like sand, dust or water. If the starter gets damage however, you may need to replace the brushes. Here is zoomed picture of the brushes on the Hobbico TorqMaster 90 deluxe:  \nHobbico TorqMaster 90 with brushes removed There are multiple sites online where you can buy these brushes but I wont specify any here (google it!). Install the new brushes on the back cover of the unit.\n\nHobbico TorqMaster 90 with brushes removed\nAssembling the unit Here is a few tricks that may help you assemble the unit. What you need to do is squeeze the front and back cover between the stator (cylinder) and the switch.\nThe switch Use masking tape and tape the switch to keep all the moving parts into a single piece. Once the unit is assembled, you can pull on the tape which will slide under the switch and easily be removed without leaving a greasy or sticky finish.\nThe brushes Installing the brushes back on the rotor is probably the hardest part to do. The problem is that the spring of the brush must be compressed almost completely to be able to insert the rotor between the two brushes. I am also suspecting that you may need a special tool for doing it. However, I found out a nice and easy trick for keeping the springs compressed while having your hands free for putting the rotor back in place: use paperclips. The goal is to use small and easily bendable paper clips to \u0026ldquo;hold\u0026rdquo; the compressed brushes leaving enough free space for the rotor. Then, you bend each clips so they go through the bolt hole of the back cover. The following image shows the paper clips in place:\n\nPaper clips blocking the Hobbico TorqMaster 90 brushes Align the rotor on the back cover bearing and slide it in place. Do not forget to add the switch before assembling the unit. Once completed, use long nose pliers to pull out the clips from the hole which will release the brushes:\n\nPaper clips through the bolt hole of the back cover Hobbico TorqMaster 90\nThe driver cone                  Hobbico TorqMaster 90 Old / Used Drive Cone | | [![Hobbico TorqMaster 90 Drive Cone](http://www.end2endzone.com/wp-content/uploads/2015/07/Hobbico-TorqMaster-90-Drive-Cone.jpg)](http://www.end2endzone.com/wp-content/uploads/2015/07/Hobbico-TorqMaster-90-Drive-Cone.jpg)\rHobbico TorqMaster 90 Drive Cone |\r The Driver Cone does not require any explanation. Simply push the cone on the motor\u0026rsquo;s shaft while aligning the pin on the shaft until it is fully inserted into the cone. Then screw the cone in place using the 10 mm hex socket. Here is a picture of the shaft without the Driver Cone inserted:\n\nHobbico TorqMaster Shaft without Driver Cone\nNote: If you actually changed the rubber insert, it is much wiser to screw the Driver Cone in place before installing a new rubber insert.\r",
    "ref": "/maintenance-of-hobbico-torqmaster-90-deluxe-12-volt-rc-starter/"
  },{
    "title": "Best way to remove ads from HDHomeRun recordings (no intermediate file required)",
    "date": "",
    "description": "",
    "body": "Introduction This guide is a follow up to the post called\nHow to remove ads from HDHomeRun recordings and still encode with Handbrake. I record lots of TV shows using the HDHomeRun. I sometime want to keep recordings on a disk for archiving or to watch later. The following article explains how to remove ads from HDHomeRun recordings and encode the final video with Handbrake without quality loss. The whole process is executed using only FREE tools!\nWith all TV shows comes a bunch of TV ads that I do not want to keep and waste time and disk space for. I encode all my videos using\nHandbrake because it supports quality based H264 encoding and 5.1 surround sounds but unfortunately, it does not support removing ads.\nWhat\u0026rsquo;s the trick ? The trick is to use VirtualDub\u0026rsquo;s frame server ability and other software to create a virtual file instead of an intermediate file as\nmy old guide suggests. This option is much faster (takes 1 minute instead of hours) and uses much less disk space (2 KB instead of 8 GB) since there is no intermediate file to encode. VirtualDub is still required to cut ads as you would normally do. The process is also lossless (it does not add any quality degradation). Once the virtual file is generated (mounted), use Handbrake to encode the final video for best results.\nDownload \u0026amp; Install required software The following software must be downloaded and installed:\n VirtualDub 1.10.4 Virtualdub FFMpeg Input Plugin Avisynth 2.6 AVFS 1.0.0.5 - Avisynth Virtual File System Pismo File Mount Audit Package (build 173) Handbrake 0.10.2  Register VirtualDub AVIFile handler For the process to work, you must register the AVIFile handler on your computer. After installing VirtualDub, run the following file:\nauxsetup.exe. The following dialog will be displayed:\n\nVirtualDub auxsetup.exe Dialog Click on the\nInstall handler button and the following dialog will be displayed:\n\nVirtualDub Installing AVIFile frameclient Click on\nOK button and you should get the following confirmation message: AVIFile frameclient install successful.\nVirtualDub FFMpeg Input Plugin By default, VirtualDub is only able to read AVI files which is not helpful because my local channels are broadcasting in MPEG2 format. For instance, Montreal\u0026rsquo;s CBFT-DT is broadcasting in HDV 720p, MPEG layer 2, with two AC-3 audio channels. Full\nNFO available here. This plugin allows reading files that are not AVI and works perfectly with Montreal\u0026rsquo;s CBFT-DT MPEG 2 files. The installation is pretty strait forward, simply run the installer and select the location of where VirtualDub is installed. Once the process is completed, you should see the plugin available (*.vdf) within the plugins32 folder.\nAvisynth Avisynth as its name implies is an AVI file generator. The Avisynth web site describes their tool as \u0026quot;\na scripting language and a collection of filters for simple (and not so simple!) non-linear video editing tasks. It frameserves video to applications\u0026quot;. In this scenario, Avisynth is used to parse VirtualDub\u0026rsquo;s frame server reference file (*.vdr) and wrap the results as an AVI file for AVFS to use. To install, run the installer and follow the on-screen instructions.\nPismo File Mount Audit Package \u0026quot;\nPismo File Mount is an operating system extension that enables application controlled virtual and user mode file systems. Using Pismo File Mount, applications can expose all kinds of program and user data through the file system interface\u0026quot;. This software does not have any interaction with the user but it is required by AVFS to create the virtual folder containing the virtual files (*.AVI, *.WAV).\n\nPismo File Mount Audit Package Install To install, run\npfmap-173-win.exe and following the on-screen instructions.\nAVFS AVFS is the heart of the whole process. It allows the user to create a virtual file from an Avisynth script file using the\nPismo File Mount system extension. \u0026ldquo;AVFS is a virtual file system that exposes the output of Avisynth scripts through the file system as a set of virtual media files. This allows Avisynth to feed media applications and converters that do not use the VFW API\u0026rdquo;. In this scenario, AVFS is used to create the virtual AVI file for Handbrake to use.\nInstalling version 1.0.0.5 (and previous versions) Version 1.0.0.5 (and previous versions) are released with\navfs.dll. To install, run the following commands:\n  Copy avfs.dll to a folder of your choosing. The c:\\windows folder will work or use any other folder.\n  Open a cmd prompt by clicking on the Start Menu and enter cmd.exe and press Enter.\n  Type pfm register c:\\windows\\avfs.dll. This will register avfs.dll to the Prismo File Mount application. To uninstall, run the following commands:\n  Open a cmd prompt by clicking on the Start Menu and enter cmd.exe and press Enter.\n  Type pfm unregister c:\\windows\\avfs.dll.\n  Delete the c:\\windows\\avfs.dll file.\n  Installing version 1.0.0.6 (and previous versions) AVSF 1.0.0.6 is not compatible with build 173 of Pismo File Mount. Build 178 must be downloaded to be able to create a virtual file. Version 1.0.0.6 (and future versions) are released with\navfs.exe. To install, run the following commands:\n Copy avfs.exe to a folder of your choosing. The c:\\windows folder will work or use any other folder. To uninstall, delete the  c:\\windows\\avfs.exe file.\nInstructions Chaining application The basic principle in this procedure is to chain application one after the other. The output from a software becomes the input of the next and so on until the video \u0026amp; audio streams reaches handbrake. The process is as follows:\nMPEG2 recording VirtualDub Editing VirtualDub .vdscript file (Editing backup) VirtualDub frame serving (.vdr file) Avisynth script (*.avs) AVSF Virtual *.AVI file Handbrake encoding.\nOpen video file in Virtualdub \nVirtualDub default video\n Click on File menu. Click on Open video file\u0026hellip; Browse to your MPEG2 video file.  Cut ads / video section Virtualdub is the best video editing application I know. It supports video resizing, splitting, joining, filters but mostly removing ADS!\n  Move the cursor to the first frame of an ad. Note: you can use your keyboard arrows to move 1 frame forward or backward to set the cursor at the exact desired frame.\n  Click on Edit menu and select Set Selection Start to mark the beginning of the ad. You can also press the  button.\n  Move the cursor to the last frame of the same ad.\n  Click on Edit menu and select Set Selection End to mark the end of the ad. You can also press the  button.\n This will highlight the area that will be cut out of the final video:   Virtualdub Selection\nClick on Edit menu and select Delete to remove the selection from the video. You can also press the Delete key on your keyboard. Repeat all steps for each ads. Once all ad sections are removed, save your modifications in case something happens. Click on File menu and select Save processing settings\u0026hellip; Save your modifications to a VirtualDub script file (*.vdscript) file    Video codec selection Since we are chaining application one into the other, there is no need to use video codec compression between application. Compressing frames between application will only slow down the speed at which each frames are pushed in the chain. You computer is more than capable dealing with uncompressed frames even in full HD resolution. You also reduce the risk of loosing quality between applications so leave the video compression to \u0026quot;\nUncompressed RGB/YCbCr\u0026quot;. The final video compression will occur within Handbrake.\n\nVirtualdub Uncompressed RGB Video Codec Selection\n Click on Video menu and select Compression\u0026hellip; Select _Uncompressed RGB/YCbCr _  Audio codec There is no need to use any compression codec for the audio. A typical TV show is 45 minutes long which only takes ~2.9 GiB (66 MiB / min) for 5.1 Surround sound and ~495 MiB (11 MiB / min) for Stereo sound. Transferring this amount of data within memory should not be an issue. The final audio compression codec selection will occur within Handbrake.\n Click on Audio menu and select Full Processing Mode.  Start VirtualDub\u0026rsquo;s frame server Now that your are done editing and removing ads from your video, you need to enable VirtualDub\u0026rsquo;s frame server.\n Click on File menu. Select Start frame server\u0026hellip; Enter a location for the VirtualDub AVIFile signpost (*.vdr) file. Click here for a sample file generated by VirtualDub. The following dialog should be displayed:  \nVirtualDub Frameserver Options Window\n Leave options as is. It does not matter what you put here. Click on Start button to start the frame server. The following dialog will be displayed:  \nVirtualDub Frameserver Mode The frameserver is now ready to provide frames to other applications. Leave the dialog running until the encoding with handbrake is complete. Press\nStop serving button to return to VirtualDub\u0026rsquo;s editing mode. A safe way to know if VirtualDub is done serving frames is to look at the \u0026ldquo;Number of frames served\u0026rdquo; value. If it stopped increasing, it means that Handbrake and the frameclient is done processing all frames. *** Warning:** Pressing _Stop serving_ button while the frame server is serving frames to Handbrake might corrupt your output (compressed) video.\nMissing frameclients issue ? Note: if you see \u0026ldquo;Frameclients installed: AVIFile only\u0026rdquo;, you can skip this section. What ? My screenshot says \u0026ldquo;Frameclients installed: None\u0026rdquo;. What does that means ? This message means that your system does not have a valid AVIFile handler installed. You probably missed a step in the Register VirtualDub AVIFile handler section.\nAviSynth Custom Script Now that VirtualDub is ready to server frames to the next application, you need to create an AviSynth file that will wrap the VirtualDub AVIFile signpost (*.vdr) file and generate a valid AVI stream.\n Create a text file next to the VirtualDub AVIFile signpost (*.vdr) file with the avs file extension (*.avs). It is a good practice to use the same path \u0026amp; filename as the *.vdr file. Enter the following text in the file: AviSource(\u0026ldquo;full_path_to_vdr\u0026rdquo;) (replace full_path_to_vdr by the actual full path to your vdr file). Save the file. Here is an example of a valid AviSynth Script file (*.avs):  1AviSource(\u0026#34;G:\\Movies\\TV\\1021_20150405183000\\1021_20150405183000.vdr\u0026#34;) Workspace Your workspace should contains 4 files:\n The original MPEG2 recording file (*.mpg) The AviSynth Script file (*.avs) The VirtualDub AVIFile signpost file (*.vdr) The VirtualDub editing backup file (*.vdscript)  \nRemove ADS From TV Recording Workspace\nMounting Mount the *.avs file as a virtual folder containing the virtual AVI file.\nUsing AVFS 1.0.0.5  From the File Explorer, right click the AviSynth Script file (*.avs). Select the Mount option. The following dialog will be displayed.  \nAVFS Mounting Options\n\rSelect your desired options. The following options is suggested: \r\rForce read-only mount.\r\r* Open after mount.\r\r\r  Click the Mount button. If the mounting is successful, the AviSynth Script file (*.avs) should be removed from the file system and be replaced by a folder with the same name as the file. The new folder contains multiple virtual files:\n  a copy of the AviSynth Script file (*.avs).\n  an error log (error.log) containing errors found during the mount operation. If there is no error, this file contains video and audio codec properties.\n  multiple audio file (*.wav, *.w64) with the same encoding. As far as I know, they are all identical.\n  an uncompressed video file in the Audio Video Interleave (*.avi) format. If you selected the option\n  Open after mount, the following window will be displayed:\n\nAVFS 375 GB Virtual AVI File\nUsing AVFS 1.0.0.6 Mounting with AVFS 1.0.0.6 requires a different process.\n Open a new Command Prompt.  Change the current directory to the location where you installed AVFS 1.0.0.6. For example, if AVFS is installed in F:\\Apps\\avfs_1.0.0.6, enter the following command in the prompt: cd /d F:\\Apps\\avfs_1.0.0.6   Enter the command to mount the file. For example, if the AVS file is located in folder G:\\TV, enter the following command in the prompt: avfs.exe G:\\TV\\1021_20150405183000.avs If command is executed properly, the application should display the following message: Press CTRL+C to exit. Leave the application running until the file is completely encoded in Handbrake. Press CTRL+C to stop the application properly.  \nAVFS 1.0.0.6 running\n*** Warning:** Pressing _CTRL+C_ key while the frame server is serving frames to Handbrake might corrupt your output (compressed) video.\nTest the virtual AVI file Make sure that the virtual AVI file is valid. Open the AVI file with a standard video player. The file may take longer than usual to open. While the file is opening or playing, take a look at the VirtualDub Frameserver window. You should see the value of\nNumber of frames served increasing:\n\nVirtualDub Frameserver Mode\nEncode final video with Handbrake The AVI file is now ready for encoding using Handbrake. Enjoy your TV show episode without any ads. Just open the file in Handbrake and encode using your favorite video parameters.\n\nHandbrake video settings\nWhat you get In the end, you get a perfectly encoded video without any ADS! A 1 hour recording of Montreal\u0026rsquo;s CBFT-DT which is in 720p MPEG 2 format is 7.72 GB. Removing ads from this recording and encoding with Handbrake using a quality based profile will reduce the file size to 1.20 GB.\n",
    "ref": "/best-way-to-remove-ads-from-hdhomerun-recordings-no-intermediate-file-required/"
  },{
    "title": "How to remove ads from HDHomeRun recordings and still encode with Handbrake",
    "date": "",
    "description": "",
    "body": "Introduction I record lots of TV shows using the HDHomeRun. I sometime want to keep recordings on a disk for archiving or to watch later. The following article explains how to remove ads from HDHomeRun recordings and encode the final video with Handbrake without quality loss. The whole process is executed using only FREE tools!\nWith all TV shows comes a bunch of TV ads that I do not want to keep and waste time and disk space for. I encode all my videos using Handbrake because it supports quality based H264 encoding and 5.1 surround sounds but unfortunately, it does not support removing ads.\nNote that this process is now deprecated as I have a new workflow which does not requires an intermediate file. The new workflow is available at the following address: http://www.end2endzone.com/best-way-to-remove-ads-from-hdhomerun-recordings-no-intermediate-file-required/.\rWhat\u0026rsquo;s the trick ? The trick is to use a temporary (intermediate) file to cut ads and encode this file with a lossless video codec to prevent any quality degradation. Then use Handbrake to encode the final video for best results.\nDownload \u0026amp; Install required software The following software must be downloaded and installed:\n VirtualDub 1.10.4 Virtualdub FFMpeg Input Plugin Lagarith Lossless Video Codec v1.3.27 Handbrake 0.10.2  Virtualdub FFMpeg Input Plugin By default, VirtualDub is only able to read AVI files which is not helpful because my local channels are broadcasting in MPEG2 format. For instance, Montreal\u0026rsquo;s CBFT-DT is broadcasting in HDV 720p, MPEG layer 2, with two AC-3 audio channels. Full NFO available here.\nThis plugin allows reading files that are not AVI and works perfectly with Montreal\u0026rsquo;s CBFT-DT MPEG 2 files.\nInstructions Open video file in Virtualdub \nVirtualDub default video\n Click on File menu. Click on Open video file\u0026hellip; Browse to your MPEG2 video file.  Cut ads / video section Virtualdub is the best video editing application I know. It support video resizing, splitting, joining, filters but mostly removing ADS!\n  Move the cursor to the first frame of an ad. Note: you can use your keyboard arrows to move 1 frame forward or backward to set the cursor at the exact desired frame.\n  Click on Edit menu and select Set Selection Start to mark the beginning of the ad. You can also press the  button.\n  Move the cursor to the last frame of the same ad.\n  Click on Edit menu and select Set Selection End to mark the end of the ad. You can also press the  button.\n This will highlight the area that will be cut out of the final video:   Virtualdub Selection\nClick on Edit menu and select Delete to remove the selection from the video. You can also press the Delete key on your keyboard. Repeat all steps for each ads.    Lossless video codec You need to select an appropriate video codec for saving the temporary file. You may be aware that most video codec makes approximation and even tries to encode \u0026ldquo;movement\u0026rdquo; in the stream to maximize compression. However, they loose quality (some less than other) during each encoding. To prevent any quality loss, a lossless video codec must be selected. As it\u0026rsquo;s name implies, the Lagarith video codec is lossless which means that it does not loose quality each time you re-encode a new video.\n\nVirtualdub Lagarith Lossless Video Codec Selection\n Click on Video menu and select Compression\u0026hellip;  \rSelect Lagarith Lossless Video Codec:\n\r\rAudio codec There is no need to use any compression codec for the audio. A typical TV show is 45 minutes long which only takes ~2.9 GiB (66 MiB / min) for 5.1 Surround sound and ~495 MiB (11 MiB / min) for Stereo sound. With today\u0026rsquo;s disk space, no compression is as good as lossless compression.\n Click on Audio menu and select Full Processing Mode.  Save a temporary file \nVirtualdub encoding\n Click on File menu and select Save as AVI\u0026hellip; Wait for the process to complete.  Encode final video with Handbrake Now you got a nice TV show episode without any ads. Just open the file in Handbrake and encode using your favorite video parameters.\n\nHandbrake video settings\nWhat you get In the end, you get a perfectly encoded video without any ADS!\n",
    "ref": "/how-to-remove-ads-from-hdhomerun-recordings-and-still-encode-with-handbrake/"
  },{
    "title": "Lune de Sang / Blood moon",
    "date": "",
    "description": "",
    "body": "Je vous présente l\u0026rsquo;éclipse totale de lune ou plus communément appelée \u0026ldquo;lune de sang\u0026rdquo;.\nUne photo d\u0026rsquo;une éclipse lunaire est très différent d'une photo traditionnelle de la lune. Il y a beaucoup moins de lumière disponible! Il faut donc compenser avec un temps d\u0026rsquo;exposition plus long et une sensibilité ISO beaucoup plus haute. Dans ce cas ci, 1.3 secondes et ISO 400. En conséquence, la photo est un peu plus flou et granuleuse qu\u0026rsquo;une photo traditionnelle.\nCette photo a été prise le 27 septembre 2015 à 23h13 à l\u0026rsquo;aide d\u0026rsquo;un objectif 250mm. L\u0026rsquo;origine du point de vue est situé à Blainville au Québec.\nJ\u0026rsquo;espère que vous appréciez le résultat:\n\nBlood moon / Lune de sang\n",
    "ref": "/lune-de-sang-blood-moon/"
  },{
    "title": "Visualiser la rotation de la terre en image (Star Trails)",
    "date": "",
    "description": "",
    "body": "Suite à ce vidéo, j\u0026rsquo;ai aussi fusionné (ou plutôt cumulé) toutes les images en une seule. Le résultat est ce que l\u0026rsquo;on appelle une image \u0026ldquo;Star Trails\u0026rdquo; (ou Filé d\u0026rsquo;étoiles en français).\nVous pouvez voir que les étoiles semblent tourner autour d\u0026rsquo;un même point. Il s\u0026rsquo;agit de l\u0026rsquo;étoile polaire. Cette étoile est fixe dans le ciel peut importe l\u0026rsquo;heure à laquelle vous regarder le ciel. C\u0026rsquo;est à dire qu\u0026rsquo;elle est parfaitement alignée avec l\u0026rsquo;axe de rotation de la terre. Donc pour obtenir ce type d\u0026rsquo;image, il suffit d’aligner la camera vers le Nord (polaire) et cadrer le tout pour obtenir un bel effet.\nContrairement au vidéo, je ne peux pas utiliser tout l\u0026rsquo;ensemble des photos car les dernières sont trop vives à cause du levé du soleil.\nQuelques statistiques:\n Duré de la séance 2h38. 297 photos cumulées.  Voici le résultat:\n\nStar Trails over the woods of Mirabel\n",
    "ref": "/visualiser-la-rotation-de-la-terre-en-image-star-trails/"
  },{
    "title": "Visualiser la rotation de la terre en vidéo",
    "date": "",
    "description": "",
    "body": "Je caresse depuis longtemps l\u0026rsquo;idée de faire des photos du ciel et des étoiles. J\u0026rsquo;ai récemment réussi à faire de bonnes photos du ciel de Mont-Tremblant. Par contre, je me suis vite rendu compte que la rotation de la terre était vraiment apparente dans chacune de mes photographies. Plutôt qu\u0026rsquo;essayer de la combattre, j\u0026rsquo;ai essayé de mieux la faire ressortir.\nJ\u0026rsquo;ai donc décidé de sortir en douce de la maison une fois de plus pour pouvoir aller prendre de bonnes photos. La pollution lumineuse des villes environnantes est très nuisible pour se type de projet. Par contre, j\u0026rsquo;ai réussi à trouver un endroit à Mirabel qui est suffisamment loin de St-Jérôme et de Blainville.\nUne fois sur le site, j\u0026rsquo;ai installé tout mon équipement et pointé la caméra vers le Nord. J\u0026rsquo;ai capturé des photos des étoiles de façon continue de 1h13 am jusqu\u0026rsquo;au levé de soleil à 4h30 am.\nQuelques statistiques:\n Duré de la séance 3h17. 372 photos. 30 secondes d\u0026rsquo;exposition chacune.  Afin de bien voir la rotation de la terre (ou des étoiles selon de notre point de vue), j\u0026rsquo;ai animé toutes images les une à la suite des autres en video timelapse à l\u0026rsquo;aide de ce guide.\nVoici le résultat!\n(Pour une meilleur immersion/expérience, vous devez visualiser le vidéo en haute définition 1080p)\n",
    "ref": "/visualiser-la-rotation-de-la-terre-en-video/"
  },{
    "title": "Canards sauvages à Val-David",
    "date": "",
    "description": "",
    "body": "Les parents de ma conjointe ont aménagés un étang artificiel près de la résidence. À chaque été, un couple de canard sauvages viennent se reposer à l\u0026rsquo;étang pendant leur migration.\n                     ",
    "ref": "/canards-sauvages-a-val-david/"
  },{
    "title": "Levé de soleil sur le Club Amidair",
    "date": "",
    "description": "",
    "body": "Il est 5 heures du matin. Tout est calme et on entend quelque fois le crie d\u0026rsquo;un oiseau. Au loin, un nuage de brume surplombe le champ de légumes lui donnant l\u0026rsquo;aspect d\u0026rsquo;un lac en mouvement. Le soleil colore au ciel avec un teint rosé puis orangé.\nUne belle journée de vol s\u0026rsquo;annonce.\n        1620x1080   1620x1080   ",
    "ref": "/leve-de-soleil-sur-le-club-amidair/"
  },{
    "title": "Fleurs de la cours",
    "date": "",
    "description": "",
    "body": "Voici d\u0026rsquo;autres photos de fleurs que j\u0026rsquo;ai capturé pas plus loin que la cours de la maison.\n                    ",
    "ref": "/fleurs-de-la-cours/"
  },{
    "title": "Promenades en forêt",
    "date": "",
    "description": "",
    "body": "Voici une galerie de photos que j\u0026rsquo;ai capturé au cours de mes promenades en forêt.\nD\u0026rsquo;autre photos seront ajouté au fil du temps.\n               ",
    "ref": "/promenades-en-foret/"
  },{
    "title": "Rayons de soleil à travers les feuilles",
    "date": "",
    "description": "",
    "body": "Des fois, il faut seulement s\u0026rsquo;arrêter et regarder tout autour de nous pour voir où l\u0026rsquo;on se trouve. Vous verrez parfois la beauté où vous ne vous y attendiez pas\u0026hellip;\n\n",
    "ref": "/rayons-de-soleil-a-travers-les-feuilles/"
  },{
    "title": "Ciel étoilé au Parc Nationale du Mont-Tremblant",
    "date": "",
    "description": "",
    "body": "Le même jour où j\u0026rsquo;ai capturé ce merveilleux couché de soleil, je me suis levé au beau milieu de la nuit pour aller prendre des photos du ciel et des étoiles.\nIl s\u0026rsquo;agit du même point d\u0026rsquo;observation du Lac Monroe d\u0026rsquo;où j\u0026rsquo;ai capturé le couché de soleil. Plus précisément, la plage est situé aux coordonnées 46°20'2″ N 74°30'25\u0026quot; W.\nJ\u0026rsquo;ai rapidement compris la différence entre un appareil de loisir et un appareil professionnel. Aux même réglages la quantité de bruit (noise) est beaucoup moins élevé avec un appareil professionnel. Dans mon cas, le Canon EOS Rebel SL1 est un excellent appareil\u0026hellip; de loisir.\nAfin de réduire le bruit, je dois compenser avec un temps d\u0026rsquo;exposition plus élevé. En contre partie, on peut observer une \u0026ldquo;trainée\u0026rdquo; des étoiles beaucoup plus longue. Les étoiles se déplacent dans le ciel beaucoup plus vite qu\u0026rsquo;on le croit.\nLa lentille utilisée pour faire ces photos est une Sigma 18-35mm f1.8 DC HSM de la série Art.\nLe résultats est quand même très jolie pour une première tentative mais mes prochaines photos du ciel seront faites avec un stabilisateur.\n          \n      La vue du Lac Monroe. Au loin, les montagnes et un peu de nuages. La grande ourse dans le ciel. On peut aussi apercevoir en bas à gauche la pollution lumineuse provenant du Village du Mont-Tremblant. | [\u0026lt;br /\u0026gt; ![Le ciel observé à plus de 60 degrés d'inclinaison. 30 secondes d'exposition au total. Les étoiles sont plus brillantes mais aussi plus élongées. Le ciel est aussi plus clair. On peut distinguer des teintes orangées et bleutées](http://www.end2endzone.com/wp-content/uploads/2015/08/IMG_5303-853x480.jpg)\u0026lt;br /\u0026gt; ](https://www.flickr.com/photos/154618444@N05/36933665833/in/album-72157687682410954/)\u0026lt;/p\u0026gt;\rLe ciel observé à plus de 60 degrés d’inclinaison. 30 secondes d’exposition au total. Les étoiles sont plus brillantes mais aussi plus élongées. Le ciel est aussi plus clair. On peut distinguer des teintes orangées et bleutées |\r | \n Toujours une inclinaison de plus de 60 degrés mais avec seulement 20 secondes d’exposition au total. Les étoiles sont moins brillantes mais surtout moins élongées. Le ciel est sombre. On distingue les mêmes teintes orangées et bleutées. Certainement le meilleur rapport temps versus qualité. | |\r",
    "ref": "/ciel-etoile-au-parc-nationale-du-mont-tremblant/"
  },{
    "title": "Chutes Croches au Parc nationale du Mont-Tremblant",
    "date": "",
    "description": "",
    "body": "Une des attractions du Parc nationale de Mont-Tremblant sont les Chutes Croches qui coulent le long de la rivière de la Diable. Les Chutes Croches sont situés plus précisément aux coordonnées 46°22'10.1″ N 74°31'00.0″ W à 398 mètres d\u0026rsquo;altitude.\n                  ",
    "ref": "/chutes-croches-au-parc-nationale-du-mont-tremblant/"
  },{
    "title": "Barrage du Lac-Escalier Nord",
    "date": "",
    "description": "",
    "body": "Voici une formidable photo du Barrage du Lac-Escalier Nord. Il est situé dans le Parc nationale du Mont-Tremblant plus précisément aux coordonnées 46°25'14.7″ N 74°29'32.9″ W à 436 mètres d\u0026rsquo;altitude.\n\nBarrage du Lac-Escalier Nord (Parc nationale du Mont-Tremblant)\n",
    "ref": "/barrage-du-lac-escalier-nord/"
  },{
    "title": "Éclairage de nuit sous la tente – Tent at night",
    "date": "",
    "description": "",
    "body": "Lorsque nous partons en camping, nous apportons toujours une lanterne à bougie de camping avec nous. Il s\u0026rsquo;agit en fait d\u0026rsquo;une lanterne servant à réduire l\u0026rsquo;humidité pendant la nuit. La beauté de la chose c’est que vue de l\u0026rsquo;extérieur, la tente émet une belle lumière.\nSe lever au beau milieu de la nuit pour voir ce décors, PRICELESS!\nUne image vaut mille mots!\n\nTent at night\n",
    "ref": "/eclairage-de-nuit-sous-la-tente-tent-at-night/"
  },{
    "title": "Couché de soleil au Parc nationale du Mont-Tremblant",
    "date": "",
    "description": "",
    "body": "Nous sommes partis en camping cet été au Parc Nationale du Mont-Tremblant. J\u0026rsquo;ai naturellement apporté ma caméra avec moi puisque je ne vais plus nulle part sans elle. Une fois installé, j\u0026rsquo;ai décidé d\u0026rsquo;aller faire un tour à la plage et j\u0026rsquo;ai capturé un merveilleux couché de soleil\u0026hellip;\nLe point d\u0026rsquo;observation est depuis l\u0026rsquo;une des nombreuses plages du Lac Monroe. Plus précisément, la plage est situé aux coordonnées\n46°20'2″ N 74°30'25\u0026quot; W.\nVoici de quoi la plage a l\u0026rsquo;air!\n         Sunset at Parc nationale du Mont-Tremblant #1 Sunset at Parc nationale du Mont-Tremblant #2   ",
    "ref": "/couche-de-soleil-au-parc-nationale-du-mont-tremblant/"
  },{
    "title": "La Fête nationale du Québec – Soyez fier d’être Québécois!",
    "date": "",
    "description": "",
    "body": "Le jour de Fête nationale, les Québécois n\u0026rsquo;hésite pas à faire la fête (ou des folies) afin de démontrer tous ensemble qu\u0026rsquo;ils sont fier de leur racines.\nVoici donc un symbole patriotique afin de vivifier votre flamme et votre amour de la Belle province.\nEn ce 24 juin, dites-le haut et fort: \u0026ldquo;Je suis fier d\u0026rsquo;être Québécois\u0026rdquo;\n                     ",
    "ref": "/la-fete-nationale-du-quebec-soyez-fier-detre-quebecois/"
  },{
    "title": "Flou d’hélice / Propeller blur",
    "date": "",
    "description": "",
    "body": "J\u0026rsquo;ai apporté mon appareil photo lors d\u0026rsquo;une séance de vol à mon club d\u0026rsquo;aviation. Lorsqu\u0026rsquo;un collègue était au \u0026ldquo;pit\u0026rdquo;, j\u0026rsquo;ai tenté de faire une photo de son avion avec un beau flou d\u0026rsquo;hélice.\nUn peu d\u0026rsquo;explication Il existe deux moyen de faire un flou d\u0026rsquo;hélice. Le premier étant un peu plus traditionnelle correspond à faire une photo avec une longue exposition (typiquement dans les 1/30 seconde). Cette méthode permet de bien voir la dimension des pales de l\u0026rsquo;hélice et forme d\u0026rsquo;impressionnants cercles homogènes complets. Le résultat est d\u0026rsquo;autant plus beau lorsque les hélices ont des motifs de couleur ce qui rend les cercles encore plus beaux.\n](https://www.flickr.com/photos/154618444@N05/37279895100/in/album-72157687655209073/)\nNotez la courbure de l\u0026rsquo;hélice! La photo qui suit correspond à 1/3200 de seconde (0.0003125 seconde). Notez que l\u0026rsquo;hélice n’apparaît pas comme droite mais courbée avec un angle d\u0026rsquo;environ 135 dégrées. Cela se produit lorsque l\u0026rsquo;on prend en photo un objet qui se déplace rapidement et un temps d\u0026rsquo;exposition très court.\nCela signifie que l\u0026rsquo;hélice a eu le temps de tourner pendant la capture de l\u0026rsquo;image! Bref, le moment où la lumière a atteint le bas du capteur de la caméra n\u0026rsquo;est pas identique au moment où la lumière atteint le haut du capteur!\n\nFlou d\u0026rsquo;hélice / Propeller blur\n",
    "ref": "/flou-dhelice-propeller-blur/"
  },{
    "title": "Beauté florale",
    "date": "",
    "description": "",
    "body": "Le soleil et le temps chaud est de nouveau de retour parmi nous. Encore une fois, j\u0026rsquo;ai apporté mon appareil pour prendre des photos.\nJe suis donc parti à la chasse rechercher des fleurs dignes d\u0026rsquo;être observés pendant plus de 15 minutes avec mon appareil, mon trépied ainsi que des tubes d\u0026rsquo;extension (21mm).\nVoici le résultat de ma séance photo:\n                                   ",
    "ref": "/beaute-florale/"
  },{
    "title": "DIY Bricoler soi-même un éclairage au LED sous le lit de la chambre à coucher",
    "date": "",
    "description": "",
    "body": "Introduction\nCombien de fois avez-vous réveiller votre partenaire au lit parce que vous deviez allumer une lampe pour voir quelque chose? Avez-vous jamais eu envie d\u0026rsquo;avoir une lampe de chevet qui ne prenait pas trop de place sur la table ? Que diriez-vous d\u0026rsquo;être en mesure d\u0026rsquo;éteindre une lampe qui a été allumé par votre partenaire sans avoir à quitter votre lit?\nDans cet article, je vais vous expliquer comment j\u0026rsquo;ai créé moi-même un éclairage au DEL sous le lit de la chambre à coucher qui peut remplacer votre lampe de chevet existante.\nAprès avoir terminé mon projet de bricoler soi-même un éclairage au DEL sous les armoires de cuisine, j\u0026rsquo;avais encore quelque pièces de rechange pour ce projet qui traînaient ici et là. J\u0026rsquo;ai compris que j\u0026rsquo;avais tout le matériel nécessaire pour mettre en œuvre quelque chose de similaire pour la chambre à coucher.\nLa raison pour laquelle je commencé ce projet était que je voulais être en mesure d\u0026rsquo;allumer une lumière de faible luminosité pendant la nuit afin que je puisse voir où je vais. Dans un même ordre d\u0026rsquo;idée, je ne vais pas toujours au lit en même temps que ma partenaire. Avoir une lumière qui peut éclairer la chambre lorsqu\u0026rsquo;elle va se coucher et qui peut être laissée allumée sans l’empêcher de s\u0026rsquo;endormir est une caractéristique très intéressante.\nLe circuit électrique est presque identique à celui de l\u0026rsquo;éclairage aux DEL sous les armoires de cuisine. Cependant, cette conception utilise deux commutateurs au lieu d\u0026rsquo;un seul. Ce changement est nécessaire afin que chaque partenaire ait le contrôle pour allumer ou éteindre les lumières depuis son chevet.\nL\u0026rsquo;installation de lumière DEL sous votre lit est vraiment différent par rapport à la configuration habituelle (une lampe de chevet de chaque côté du lit). Cette option fournit les avantages suivants dans une chambre à coucher:\n La lumière produit par les DEL n\u0026rsquo;est pas une lumière trop éblouissante. Le gradateur permet aussi d\u0026rsquo;ajuster l\u0026rsquo;intensité pour quelle soit agréable pour les yeux la nuit. Cela permet de voir où vous mettez les pieds. Être en mesure de bien voir le passage dans le corridor entre la chambre et la salle de bain est aussi très intéressant. Le système d\u0026rsquo;éclairage peut être activé sans déranger le sommeil de l\u0026rsquo;autre partenaire. Donne une belle lumière ambiante pour les activités nocturnes\u0026hellip;  Dans cet article, je vais vous expliquer comment j\u0026rsquo;ai créé moi-même un éclairage au DEL sous la base de mon lit de ma chambre à coucher.\nRemarque:\nLa manipulation de l\u0026rsquo;électricité murale peut être dangereux. Si vous ne avez pas les compétences de base nécessaire pour manipuler de l\u0026rsquo;électricité, je recommande fortement que vous ne procédez pas à l\u0026rsquo;installation de ce projet. Procéder à vos propres risques.\nDonnées du projet Équipment Les matériaux nécessaires pour ce projet sont les suivants:\n Une bande d\u0026rsquo;éclairage DEL de 5 mètres. Connecteur à 2 broches (1 seule couleur) pour bande DEL SMD 3528 (5 fois) Une alimentation 36 Watts (12 volts, 3 ampères). Un cordon d’alimentation avec une prise murale à 3 broches. Un module gradateur pour DEL. 2 interrupteurs mural à 3 voies (à 3 positions). 2 à 3 mètres de fil de couleur (rouge et noir). Un couple de connecteurs RCA (male et femelle) Un multimètre (pour tester les connexions) Vis Un tournevis cruciforme Ruban à mesurer flexible  Équipement habituel Comme je l\u0026rsquo;ai expliqué précédemment, l\u0026rsquo;équipement est presque identique à celui utilisé dans l\u0026rsquo;article Bricoler soi-même un éclairage au DEL sous les armoires de cuisine. Je ne vais pas entrer dans les détails sur la façon de connecter le tout ensemble ou quel est le meilleur type de DEL. Pour connaître ce genre de détails, veuillez consulter l\u0026rsquo;autre article.\nCommutateur à 3 voies La seule pièce d\u0026rsquo;équipement qui est différent est le type de commutateurs utilisés. Pour ce projet, il y a deux interrupteurs soit un pour chaque partenaire. Le type de commutateurs est également différent et nécessite des interrupteurs à 3 voies. Bref, il devrait y avoir 3 bornes (vis) de visible sur chaque commutateur au lieu de 2. Ce type de commutateur permet de contrôler les lumières sur les deux côtés du lit: un partenaire peut allumer les lumières et l\u0026rsquo;autre peut les désactiver ou vice-versa.\nConnecteur RCA Les connecteur RCA sont nécessaires afin de pouvoir déconnecter la bande DEL du reste du circuit. La tête de lit et la base de mon lit ne sont pas attachés ensemble. La base est parfois éloigné de la tête pour nettoyer le sol ou changer les draps. Puisque la bande est collée sous la base de lit et que le circuit principal est fixé en arrière de la tête du lit, j\u0026rsquo;ai besoin d\u0026rsquo;un moyen de séparer les deux pour fins d\u0026rsquo;entretien (sans devoir arracher la bande!) J\u0026rsquo;ai décidé d\u0026rsquo;utiliser des connecteur RCA à cette fin parce qu\u0026rsquo;ils sont pour la plupart disponibles dans tous les magasins électroniques. Ils peuvent être récupérés à partir de nombreuses sources. Si vous ne disposez pas connecteur RCA, n\u0026rsquo;importe lequel autre type de connecteur qui se débranche lorsque l\u0026rsquo;on tire dessus peut faire l\u0026rsquo;affaire.\nCoût total du projet Tout comme le projet de la cuisine, celui-ci peut être complété à petit budget. Le coût total est inférieur à 35$.\nVoici le prix détaillée de chacun des éléments:\n $8.13 - Bande d\u0026rsquo;éclairage DEL achetée sur eBay. Voir la capture d\u0026rsquo;écran ici. $2.29 - Connecteur à 2 broches (1 seule couleur) pour bande DEL SMD 3528 acheté sur eBay. Voir la capture d\u0026rsquo;écran ici. $7.15 - Alimentation 36 Watts achetée sur eBay. Voir la capture d\u0026rsquo;écran ici. $0.00 - Cordon d’alimentation avec une prise murale à 3 broches. (J\u0026rsquo;en ai souvent plusieurs à la maison. Je récupère souvent plusieurs pièce et morceau avant de jeter un appareil aux ordures. $6.02 - Module gradateur pour DEL acheté sur eBay. Voir la capture d\u0026rsquo;écran ici. $3.98 - Deux interrupteurs mural à 3 voies acheté à la quincaillerie. $4.00 - Fil électrique de couleur (j\u0026rsquo;ai utilisé du calibre 18) du magasin à un dollar. $0.00 - 1x connecteur RCA male et 1x connecteur RCa femelle. J\u0026rsquo;en ai plusieurs à la maison.  Coût total: $31.57\n Le coût des éléments habituels tels que des vis et la colle n\u0026rsquo;est pas inclus dans le coût du projet.  Preparation time Le temps de préparation est simple, il nécessite de tester tous le circuit avant de fixer la bande au lit. Le tout prend environ une demi-heure à compléter et confirme que tous les composants fonctionnent comme prévu. Aucune soudure est nécessaire pour cette étape. Le circuit est assez basique. Reportez-vous à la section suivante pour les détails du circuit.\nÉtapes de construction Les étapes de construction sont tout aussi simple. Voici une photo du circuit en entier:\n\nTester le tout La première chose sur laquelle vous devez vous concentrer est de tester le tout avant de fixer le module derrière la tête de lit. La dernière chose que vous voulez est de commencer à brancher tous les fils et de vous rendre compte qu\u0026rsquo;un d\u0026rsquo;entre eux est endommagé ou que les gradateurs (qui sont collés à la tête de lit) sont défectueux.\nComme mentionné précédemment, toutes les questions concernant la façon de raccorder le cordon d\u0026rsquo;alimentation à l\u0026rsquo;alimentation ou comment connecter le gradateur, sont expliqués dans l\u0026rsquo;article Bricoler soi-même un éclairage au DEL sous les armoires de cuisine.\nChoisir où mettre les composants Cette section définit les raisons fondamentales qui conduisent à la conception finale.\nOrientation des DEL \nL\u0026rsquo;emplacement des DEL est évident. Cependant, je ne savais pas si je devais coller les DEL sur la plateforme et les orienter vers le bas ou les collés sur la base et les orienter vers l\u0026rsquo;extérieur. Si vous choisissez la deuxième option (vers l\u0026rsquo;extérieur), toute la partie inférieure de la chambre sera illuminé et la lumière ne sera pas aussi élevée que si les DEL sont orientés vers le bas.\nIl s\u0026rsquo;avère que pour moi, la meilleure méthode était de les coller vers le bas. Naturellement, choisissez l\u0026rsquo;option qui vous convient le mieux.\nRemarque:\nChacune des deux options n\u0026rsquo;éclairent pas les gens lorsqu\u0026rsquo;ils dorment et ne perturbe pas le sommeil de votre partenaire.\nCommutateurs \nJ\u0026rsquo;ai eu de la difficulté à déterminer où je est-ce que je mettrais les interrupteurs et le gradateur. Ils devaient être facilement disponibles et ne devraient pas trop encombrer la tête du lit. Je voulais être capable de trouver les interrupteurs avec seulement mes mains, sans avoir à regarder d\u0026rsquo;avances où ils se trouvaient. Vous aurez justement besoin de les retrouver rapidement au milieu de la nuit lorsque que vous n\u0026rsquo;êtes pas tout à fait réveillé!\nMa première idée était d\u0026rsquo;installer l\u0026rsquo;interrupteur à travers la tête de lit en perçant de petits trous de la taille de l\u0026rsquo;interrupteur et d\u0026rsquo;utiliser des plaques d\u0026rsquo;interrupteur pour tout couvrir. Cela n\u0026rsquo;a pas été accepté comme une solution viable parce que nous trouvions cela trop intrusif. Il serait également difficile de trouver l\u0026rsquo;interrupteur dans l\u0026rsquo;obscurité.\nJ\u0026rsquo;ai opté de positionner le circuit des commutateurs au même niveau que la tête de lit. La partie mobile de l\u0026rsquo;interrupteur est soulevée un peu au-dessus de la tête. Cette option est parfait parce qu\u0026rsquo;elle facilite vraiment l\u0026rsquo;allumage des lumières, même lorsque l\u0026rsquo;on est couché sur le lit. Vous avez simplement à glisser votre main sur le dessus de la tête de lit de gauche à droite (ou de droite à gauche).\nGradateur \nLe gradateur n\u0026rsquo;est pas souvent utilisé. La plupart du temps, vous voulez que l\u0026rsquo;intensité de la lumière soit à son niveau de luminosité minimum. Dans certains scénarios, vous voulez obtenir plus de lumière et c\u0026rsquo;est là que le gradateur est utile.\nPour cette raison, j\u0026rsquo;ai décidé de positionner le gradateur derrière la tête de lit. Il ne peut pas être atteint lorsque l\u0026rsquo;on est couché sur le lit mais il peut être atteint lorsque l\u0026rsquo;on est assis ou debout face à la tête de lit.\nInstallation de la bande DEL Coupe \nLa bande doit être coupée en trois sections soit une pour chaque côté de la base de lit. La bande peut être coupée en toute sécurité à tous les 3 DEL. Chaque point de coupe est identifié par les points de contact en cuivre. Il suffit de couper au milieu des points de contact et de laisser assez de cuivre pour les connecteurs à 2 broches.\nUtilisez un ruban à mesurer pour calculer la longueur de chaque côté de la base du lit. Si la longueur de la base ne correspond pas à un point de coupure exact, n\u0026rsquo;hésitez pas à calculer une plus petite longueur puisque 3 DEL manquants ne feront pas une différence notable. De plus n\u0026rsquo;oubliez pas de laisser de l\u0026rsquo;espace entre 2 banques perpendiculaires afin d\u0026rsquo;avoir assez d\u0026rsquo;espace pour les connecteurs.\nCollage \nC\u0026rsquo;est maintenant le temps de coller les DEL à la base du lit. Le côté opposé de la bande est adhésif et peut être utilisée pour coller la bande sur une surface. Assurez-vous que la surface de montage est propre et sec puisque vous ne pourrez pas plusieurs essais avant que la bande perdre sa capacité à adhérer à la paroi. Si la bande ne correspond pas exactement à la longueur de la base, n\u0026rsquo;oubliez pas de centrer la bande pour obtenir l\u0026rsquo;éclairage approprié.\nJ\u0026rsquo;ai décidé d\u0026rsquo;utiliser de la colle chaude pour fixer le début de la bande à la base du lit. C\u0026rsquo;est une très bonne idée et cela aide à prévenir les incidents. La colle tient la bande en place et d\u0026rsquo;évite tout dommage. Dans le cas où l\u0026rsquo;on aurait oublié de débrancher le circuit, si l\u0026rsquo;on déplace la base de lit loin de la tête, la bande sera suffisamment collée pour résister au coup et s\u0026rsquo;est le connecteur RCA qui se déconnectera.\nConnexion entre les bandes Utilisez les connecteurs pour relier ensemble chacune des bandes. Les connecteurs sont spécifiquement conçus pour connecter des bandes DEL ensemble. Vous avez juste à ouvrir une porte, faites glisser la bande en place et fermez la porte ce qui tiendra la bande en place. Lors de la liaison, assurez-vous que vous alignez la borne positive (rouge) et la borne négative (noire) de la bande avec le code de couleur appropriée du connecteur.\nJ\u0026rsquo;ai également utilisé de la colle chaude pour maintenir le connecteur collé à la base afin d\u0026rsquo;éviter d\u0026rsquo;avoir des fils suspendus. J\u0026rsquo;ai 2 chats à la maison et c\u0026rsquo;est une bonne idée de s\u0026rsquo;assurer que tous ces fils ne ressemblent pas à un jouet pour chat 🙂\nRésultat final Voici une photo du résultat final:\n\nDIY Bedroom under the bed led lighting\nRefaire les choses différemment? Ceci est mon deuxième projet impliquant des bandes d\u0026rsquo;éclairage DEL. Je ne pense pas que je ferais les choses différemment. Tout est généralement tel que je le voulais. Je pourrais éventuellement ajouter un capteur de mouvement comme indiqué ici (en version anglophone) afin de détecter automatiquement lorsque je me lève la nuit de sorte que la chambre s\u0026rsquo;allume automatiquement, mais c\u0026rsquo;est peut-être trop extrême. Après tout, il me suffit de lever la main et de la glissez sur la tête de lit.\nNotes aucune\n",
    "ref": "/diy-bricoler-soi-meme-un-eclairage-au-led-sous-le-lit-de-la-chambre-a-coucher/"
  },{
    "title": "DIY Bricoler soi-même un éclairage au LED sous les armoires de cuisine",
    "date": "",
    "description": "",
    "body": "Introduction Il manque quelque chose dans la plupart des cuisines que j\u0026rsquo;ai vus dans ma vie et ce ne est pas un énorme espace de travail pour couper vos légumes ou un réfrigérateur intelligent. Ce qu\u0026rsquo;il manque souvent est beaucoup plus simple: c\u0026rsquo;est un éclairage adéquat. Toutes les cuisines que j\u0026rsquo;ai utilisé avait un éclairage décent lorsqu\u0026rsquo;elles sont utilisés pendant le jour (beaucoup de fenêtre, une bonne lumière ambiante) mais c\u0026rsquo;est souvent pas le cas pendant les jours pluvieux ou la nuit. La plupart des cuisines manquent aussi d\u0026rsquo;un bon éclairage sous les armoires de cuisine.\nCela fait bien longtemps que je voulais avoir plus de lumière disponible sous les armoires de cuisine. Malheureusement, je n\u0026rsquo;ai jamais eu le courage d\u0026rsquo;installer des lumières supplémentaires pour plusieurs raisons. Une d\u0026rsquo;entre elles est que je n\u0026rsquo;avais pas les bons outils et que je manquais de connaissances. Je n\u0026rsquo;aimais, non plus , aimé l\u0026rsquo;idée de percer des trous dans les armoires ou à travers le comptoir pour apporter de l\u0026rsquo;électricité et finalement, lorsque l\u0026rsquo;on installe des lumières sous les armoires, cela produit beaucoup trop de chaleur (certaines lumières peuvent aussi vous brûler!). Ce projet était donc en attente jusqu\u0026rsquo;à ce qu\u0026rsquo;une solution facile à installer a jaillit dans mon esprit: des bandes d\u0026rsquo;éclairage au DEL.\nLes bandes de lumières au DEL sont une très bonne alternative au lumières fluorescentes, halogènes ou les lumières aux xénon. Les DEL deviennent de plus en plus populaire et sont souvent facile à installer et à adapter à plusieurs situations. Certaines bandes peuvent aussi être utilisées à l\u0026rsquo;extérieur (mais ça c\u0026rsquo;est pour une autre histoire). Ils procurent les avantages suivant dans une cuisine:\n Abordable! Donne un bon éclairage. Peut être atténués à de faible intensité. Disponible en plusieurs couleurs comme le blanc chaud blanc ou froid. Ne produit pas de chaleur (ou presque). Ne brûle pas, ils ont une durée de vie beaucoup plus longue que les lampes normales. Fonctionne à 12 volts. Pas besoin de courant murale qui pourrait conduire à des accidents. Utilise moins d\u0026rsquo;électricité (beaucoup moins de courant que d\u0026rsquo;autres options d\u0026rsquo;éclairage).  Dans cet article, j\u0026rsquo;explique comment se bricoler soi-même un éclairage au DEL sous les armoires de cuisine.\nRemarque: La manipulation de l\u0026rsquo;électricité murale peut être dangereux. Si vous ne avez pas les compétences de base nécessaire pour manipuler de l\u0026rsquo;électricité, je recommande fortement que vous ne procédez pas à l\u0026rsquo;installation de ce projet. Procéder à vos propres risques.\rDonnées du projet Équipment Les matériaux nécessaires pour ce projet sont les suivants:\n Une bande d\u0026rsquo;éclairage DEL de 5 mètres. Connecteur à 2 broches (1 seule couleur) pour bande DEL SMD 3528 (5 fois) Une alimentation 36 Watts (12 volts, 3 ampères). Un cordon d’alimentation avec une prise murale à 3 broches Un module gradateur pour DEL. Un interrupteur mural. 2 à 3 mètres de fil de couleur (rouge et noir). Ruban adhésif double face Gomme autocollante Un multimètre (pour tester les connexions) Vis Un tournevis cruciforme Ruban à mesurer flexible  Bloc d\u0026rsquo;alimentation Théoriquement, une alimentation de seulement 24 watts est nécessaire pour alimenter l\u0026rsquo;ensemble de la bande. Cependant, je me sens souvent plus à l\u0026rsquo;aise quand je dispose de plus de puissance que j\u0026rsquo;en ai besoin. Il est également préférable pour l\u0026rsquo;alimentation de ne pas toujours alimenter la bande à intensité maximale pendant une longue période de temps.\nModule gradateur Le module gradateur est facultatif mais je recommande vivement d\u0026rsquo;en utiliser un. Sans le module gradateur, la bande est trop lumineuse pour de nombreuses situations. La luminosité maximale est requise uniquement pour des activités au comptoir. Pour tous les autres scénarios, vous aurez besoin de réduire l\u0026rsquo;intensité de la lumière si vous voulez créer un éclairage d\u0026rsquo;ambiance pendant la nuit ou si vous avez besoin d\u0026rsquo;une faible lumière dans la matinée. Même un blanc chaud (par rapport à un blanc froid) est trop lumineux lorsque je viens de sortir du lit. Quoi qu\u0026rsquo;il en soit, le prix du module est si bas que vous ne devriez même pas vous poser la question.\nNotez qu\u0026rsquo;un gradateur murale \u0026ldquo;normale\u0026rdquo; ne peux être utilisé pour alimenter la bande de DEL. Les bandes ne peuvent être alimentées que par un \u0026ldquo;circuit à modulation de largeur de bande\u0026rdquo; (module PWM) et non par une résistance variable dans le circuit.\rBande SMD 3528 ou SMD 5050 ? J\u0026rsquo;ai décidé d\u0026rsquo;utiliser des DEL SMD 3528 au lieu des SMD 5050. Le code numérique pour les DEL correspond à la dimension en millimètres de chaque DEL soit 50mm ou 35mm. Les DELs SMD 5050 sont plus brillants, mais ils utilisent plus d\u0026rsquo;électricité. Puisque je n\u0026rsquo;ai pas besoin de la luminosité des DEL 5050 et je voulais utiliser le moins d\u0026rsquo;électricité que possible alors les DEL SMD 3528 étaient le meilleur choix. Assurez-vous que vous achetez 600 DELs par bande de 5 mètres au lieu de 300 DELs par brande car les bandes avec 300 DELs peuvent ne pas être suffisamment lumineuse.\nVoici un bon article (anglophone) sur les différences entre eux: Comparison between 3528 LEDs and 5050 LEDs.\nConnecteurs Vous avez seulement besoin de 3 connecteurs DEL pour ce projet. Deux connecteurs sont nécessaires pour relier les trois armoires ensemble et un troisième pour connecter la bande DEL aux connecteurs \u0026ldquo;OUT\u0026rdquo; du gradateur. Cependant, j\u0026rsquo;en ai acheté cinq puisqu\u0026rsquo;ils sont moins cher en lot que d\u0026rsquo;acheter 3 connecteurs séparément.\nCoût total du projet Comme je l\u0026rsquo;ai déjà dit, ce projet peut être réalisé avec un petit budget. Le coût total du projet est inférieur à 30 $. Je dois dire que j\u0026rsquo;ai acheté tous les éléments majeurs (bandes DEL, alimentation et gradateur) sur eBay pour vraiment pas très cher. Ne faites pas l\u0026rsquo;erreur et acheter ce genre de choses dans un magasin d\u0026rsquo;éclairage (Rona, Multi Luminaire) parce que vous pourriez facilement doubler ou même tripler le coût du projet!\nVoici le prix détaillée de chacun des éléments:\n $8.13 - Bande d\u0026rsquo;éclairage DEL achetée sur eBay. Voir la capture d\u0026rsquo;écran ici. $2.29 - Connecteur à 2 broches (1 seule couleur) pour bande DEL SMD 3528 acheté sur eBay. Voir la capture d\u0026rsquo;écran ici. $7.15 - Alimentation 36 Watts achetée sur eBay. Voir la capture d\u0026rsquo;écran ici. $0.00 - Cordon d’alimentation avec une prise murale à 3 broches. (J\u0026rsquo;en ai souvent plusieurs à la maison. Je récupère souvent plusieurs pièce et morceau avant de jeter un appareil aux ordures. $6.02 - Module gradateur pour DEL acheté sur eBay. Voir la capture d\u0026rsquo;écran ici. $1.25 - Interrupteur mural acheté à la quincaillerie. $2.00 - Fil électrique de couleur (j\u0026rsquo;ai utilisé du calibre 18) du magasin à un dollar. $1.00 - Ruban adhésif double face.  Coût total: $27.84 * Le coût des éléments habituels tels que des vis et la colle n\u0026rsquo;est pas inclus dans le coût du projet.\nTemps de préparation Le temps de préparation est assez court. Il nécessite de tester tout le circuit avant de fixer la bande aux armoires. Vous ne voulez pas commencer à percer des trous dans vos armoires et découvrir par la suite qu\u0026rsquo;un des composant est défectueux! Le circuit prend environ une demi-heure à compléter et vérifie que tous les composants fonctionnent comme prévu. Aucune soudure n\u0026rsquo;est nécessaire pour cette étape. Le circuit est assez simple. Reportez-vous à la section suivante pour les détails du circuit.\nÉtapes de construction Les étapes de construction sont très simple. Il suffit de visser et de relier le tout. Voici une photo du circuit que vous devez assembler:\nLe gradateur dispose de 2 connexions d\u0026rsquo;entrée et deux connexions de sortie. Les connexions d\u0026rsquo;entrée sont étiquetés comme \u0026ldquo;In V- et In V+ \u0026quot; et les connexions de sortie sont étiquetés comme \u0026ldquo;Out V+ et V-\u0026rdquo;. Il suffit de connecter une alimentation 12 volts sur la borne d\u0026rsquo;entrée et vous obtenez un \u0026ldquo;pulse\u0026rdquo; (pulsation) variable de 12 volts à la sortie. Pour le reste, je crois que c\u0026rsquo;est assez évident et ne nécessite pas d\u0026rsquo;explication.\nTester le tout Cette section définit comment connecter tous les composants ensemble.\nBranchez le cordon d\u0026rsquo;alimentation avec l\u0026rsquo;alimentation. Visser les fils du bloc d\u0026rsquo;alimentation tel que décrit ci-dessus. Ne pas brancher le cordon d\u0026rsquo;alimentation au mur jusqu\u0026rsquo;à ce que le circuit complet soit assemblé.\nConnecter la sortie positive du bloc d\u0026rsquo;alimentation électrique à un côté de l\u0026rsquo;interrupteur. Vissez un autre fil de l\u0026rsquo;autre côté de l\u0026rsquo;interrupteur sur le connecteur \u0026ldquo;IN V+\u0026rdquo; du gradateur. Visser ensuite un autre fil sur le connecteur \u0026ldquo;IN V-\u0026rdquo; du gradateur jusqu\u0026rsquo;à la borne d\u0026rsquo;alimentation négative du bloc d\u0026rsquo;alimentation.\nConnectez la borne \u0026ldquo;OUT V+\u0026rdquo; du gradateur à la borne positive de la bande DEL et connecter le câble négatif de la bande vers la borne \u0026ldquo;OUT V-\u0026rdquo; du gradateur.\nBranchez le cordon d\u0026rsquo;alimentation dans le mur, allumez l\u0026rsquo;interrupteur et votre bande DEL devrait s\u0026rsquo;illuminer. Tournez le bouton du gradateur pour tester l\u0026rsquo;intensité.\nChoisir où mettre les composants \r[![DSC04072](http://www.end2endzone.com/wp-content/uploads/2014/08/DSC04072.jpg)](http://www.end2endzone.com/wp-content/uploads/2014/08/DSC04072.jpg) [![DSC04068](http://www.end2endzone.com/wp-content/uploads/2014/08/DSC04068.jpg)](http://www.end2endzone.com/wp-content/uploads/2014/08/DSC04068.jpg) [![DSC04060](http://www.end2endzone.com/wp-content/uploads/2014/08/DSC04060.jpg)](http://www.end2endzone.com/wp-content/uploads/2014/08/DSC04060.jpg) [![DSC04062](http://www.end2endzone.com/wp-content/uploads/2014/08/DSC04062.jpg)](http://www.end2endzone.com/wp-content/uploads/2014/08/DSC04062.jpg)\r\rJe voulais placer l\u0026rsquo;interrupteur à un endroit où il peut être atteint facilement avec les doigts mais je voulais aussi le que le commutateur soit invisible à l\u0026rsquo;œil. J\u0026rsquo;ai décidé d\u0026rsquo;installer le commutateur sous les armoires, mais caché derrière les moulures avant. Pour les mêmes raisons, le gradateur est situé au même endroit. J\u0026rsquo;ai utilisé du ruban adhésif double face pour coller le gradateur et l\u0026rsquo;interrupteur d\u0026rsquo;alimentation en place. Le ruban adhésif est assez fort pour garder le l\u0026rsquo;interrupteur en place même lorsque quelqu\u0026rsquo;un est en train d\u0026rsquo;allumer ou d\u0026rsquo;éteindre le commutateur.\nJ\u0026rsquo;ai aussi décidé de positionner l\u0026rsquo;alimentation sous l\u0026rsquo;armoire, à l\u0026rsquo;arrière. Cet emplacement est à proximité de l\u0026rsquo;interrupteur et du gradateur et c\u0026rsquo;est aussi bien aéré. L\u0026rsquo;alimentation possède 2 trous pour être visser à une surface. J\u0026rsquo;ai utilisé des petites vis pour visser le bloc d\u0026rsquo;alimentation au panel de bois des armoires.\nVoici une vue du dessous de l\u0026rsquo;armoire:\n\nPuisque j\u0026rsquo;ai trois armoires de cuisine, j\u0026rsquo;ai dû couper trois longueurs de bande DEL. La bande peut être coupé en toute sécurité à tous les 3 DEL. Chaque point de coupure est identifié par les points de contact en cuivre exposés. Il suffit de couper avec des ciseaux perpendiculairement à la bande (au milieu des points de contact) en s\u0026rsquo;assurant de laisser suffisamment de cuivre de chaque côté pour bien fixer les connecteurs.\nUtilisez un ruban à mesurer souple pour calculer la longueur de chaque section de cabinet et couper une longueur de bande pour chaque sections de cabinet. Si la longueur de l\u0026rsquo;armoire ne correspond pas exactement à un point de coupure, ne hésitez pas à réduire la longueur de la bande car un manque de 3 DEL ne fera pas une différence perceptive au niveau la luminosité totale. Vous avez juste à centrer la bande dans l\u0026rsquo;armoire pour avoir un éclairage adéquat.\nPerçage \r[![DSC04086](http://www.end2endzone.com/wp-content/uploads/2014/08/DSC04086.jpg)](http://www.end2endzone.com/wp-content/uploads/2014/08/DSC04086.jpg) [![DSC04085](http://www.end2endzone.com/wp-content/uploads/2014/08/DSC04085.jpg)](http://www.end2endzone.com/wp-content/uploads/2014/08/DSC04085.jpg)\r\rAfin d\u0026rsquo;obtenir de l\u0026rsquo;électricité d\u0026rsquo;une armoire à l\u0026rsquo;autre, j\u0026rsquo;ai dû parfois percer des trous dans le fond des l\u0026rsquo;armoire. C\u0026rsquo;était nécessaire pour passer les fils dessus de la hotte de cuisine et au dessus de l\u0026rsquo;évier. C\u0026rsquo;est le seul changement intrusif que j\u0026rsquo;avais à faire pour ce projet.\nCollage \nRefaire les choses différemment? Je ne pense pas que je ferais les choses différemment. Tout est généralement comme je le voulais. J\u0026rsquo;ai pris mon temps pour préparer ce projet. Je veux aussi éventuellement peindre les fils en blanc pour les rendre invisibles. Pour le moment, lorsque j\u0026rsquo;ouvre mes armoires, je ne vois pas vraiment les fils parce qu\u0026rsquo;elles sont toutes bien remplies alors je vais peut-être les laisser tel quel.\nNotes aucune\n",
    "ref": "/diy-bricoler-soi-meme-un-eclairage-au-led-sous-les-armoires-de-cuisine/"
  },{
    "title": "Lune de Pâques / Easter moon",
    "date": "",
    "description": "",
    "body": "Je vous présente la lune de Pâques.\nLa photo a été prise le 5 avril 2015 à 23h37 à l\u0026rsquo;aide d\u0026rsquo;un objectif 250mm. L\u0026rsquo;origine du point de vue est situé à Blainville au Québec.\nJ\u0026rsquo;espère que vous appréciez le résultat:\n\nLune de Pâques\n",
    "ref": "/lune-de-paques-easter-moon/"
  },{
    "title": "Unboxing the Avistar Elite .46 a timelapse video",
    "date": "",
    "description": "",
    "body": "Hi.\nFor those interested, here is the first sequence of images I captured with my Canon EOS SL1 in order to make a timelapse video of the unpacking of the aircraft RC Avistar Elite .46.\nAt the time, I didn\u0026rsquo;t know the basic principles that were required to capture good pictures for a timelapse video. So I proceeded with the exact opposite of what was required: Auto Focus, auto exposure adjustment, automatic white balance, use of the flash and capture with low batteries. In short, I was a beginner.\nI have since gained experience and I wrote a guide that describes timelapse good practices and the steps to achieve a good timelapse video: How to make a time-lapse video with free tools and a DSLR camera.\nI decided to share the video anyway. I hope you appreciate\u0026hellip;\nAntoine\nCaptured June 13th, 2014 between 3:49 p.m. and 10:00 p.m. with 556 photos and 15 second interval between each picture displayed at 10 frames per second.\n",
    "ref": "/unboxing-the-avistar-elite-46-a-timelapse-video/"
  },{
    "title": "Déballage du Avistar Elite .46 un vidéo timelapse",
    "date": "",
    "description": "",
    "body": "Bonjour.\nPour les intéressés, voici la première séquence d\u0026rsquo;images que j\u0026rsquo;ai capturé avec ma Canon EOS SL1 dans le but de faire un vidéo timelapse du déballage de l\u0026rsquo;avion téléguidée Avistar Elite .46.\nÀ l\u0026rsquo;époque, je ne connaissais pas les principes de base afin de faire de bonne prises pour faire un vidéo timelapse. J\u0026rsquo;ai donc procédé en faisant tout le contraire de ce qu\u0026rsquo;il faut faire: Focus automatique, ajustement de l\u0026rsquo;exposition automatique, balance des blancs automatique, activer le flash et débuter la séance avec des piles déchargées. Bref, j\u0026rsquo;étais débutant.\nDepuis, j\u0026rsquo;ai acquis de l\u0026rsquo;expérience et j\u0026rsquo;ai écris un guide (en anglais) qui décrit les bonnes pratiques et les étapes à suivre pour réaliser un bon vidéo timelapse: How to make a time-lapse video with free tools and a DSLR camera{.row-title}.\nJ\u0026rsquo;ai tout de même décidé de partager le vidéo. J\u0026rsquo;espère que vous apprécierai\u0026hellip;\nAntoine\nCapturé le 13 juin 2014 entre 15h49 et 22h00 avec 556 photos et 15 secondes d\u0026rsquo;intervalle entre chaque photo visualisé à 10 images par seconde.\n",
    "ref": "/deballage-du-avistar-elite-46-un-video-timelapse/"
  },{
    "title": "extTools: a windows shell extension to help you with common Windows File Explorer tasks.",
    "date": "",
    "description": "",
    "body": "What is extTools extTools is a fast and innovative FREEWARE (for non-commercial use) software suite to help you executing common tasks in Windows File Explorer more easily.\nIt\u0026rsquo;s main features are:\n Advanced clipboard support (copy, append or modify). File operation queuing (batch copy or paste). Better \u0026amp; quicker file deletions. Powerful file renaming algorithms. XP like search tool (simple search tool). Extends Windows File Explorer by registering as a Shell Extension.  extTools allows its users to execute tasks that are not available in a default Windows environment. extTools is also designed to replace existing task that are badly designed, annoying to execute or simply missing.\nDownload You can download extTools by clicking on the following links:\n extTools v1.4.501 (win32 portable) (316 downloads)  extTools v1.4.501 (win32 setup) (151 downloads)  (for Windows XP) extTools v1.4.501 (x64 portable) (352 downloads)  extTools v1.4.501 (x64 setup) (143 downloads)  (for Windows 7 and over)  Note: Please note that portable versions does not contain the shell extension module to register menu option with the File Explorer context menu.\rScreenshots         660x150   468x363   360x135   660x559   677x485   413x292   450x245   450x245   660x690   660x690   660x690   660x690   576x264   560x305   560x220   560x230   503x316    Application components\n Below is all the tools that are included in extTools. A quick description is available for each tool. Most applications are available when right clicking a file in Windows file Explorer (shell extension).\nextFileRenamer \nextFileRenamer screenshot (pattern #1)\nextFileRenamer is a powerful file renaming manager. This application can rename a bunch of files according to a pattern (with increasing numbers) or rename files using a \u0026ldquo;search \u0026amp; replace\u0026rdquo; technique to remove the same word(s) from multiple files.\nextFileRenamer has the following features:\n Allows you to rename files using a pattern or with a \u0026ldquo;search \u0026amp; replace\u0026rdquo; through the file names. Manually select target files to rename. Live preview of renamed files. Automatic detection of renaming conflict (before renaming files!)  Here is some typical pattern scenarios where extFileRenaming shines!\nPattern mode te\nst foobar Select the pattern mode to rename photos or videos from a camera phone:\nUsing a pattern like Trip to Hawaii with John (2007) ##.jpg you can rename the following files like this:\nIMG_8823.jpg Trip to Hawaii with John (2007) 01.jpg IMG_8824.jpg Trip to Hawaii with John (2007) 02.jpg\nIMG_8825.jpg Trip to Hawaii with John (2007) 03.jpg\n\u0026hellip;\nIMG_8899.jpg Trip to Hawaii with John (2007) 77.jpg\rAdding a prefix to all files is easy with the pattern Trip to Hawaii with John ???????????? which would rename all your files to something like:\nIMG_8823.jpg Trip to Hawaii with John IMG_8823.jpg\nIMG_8824.jpg Trip to Hawaii with John IMG_8824.jpg\nIMG_8825.jpg Trip to Hawaii with John IMG_8825.jpg\n\u0026hellip;\nIMG_8899.jpg Trip to Hawaii with John IMG_8899.jpg\rComplex renaming is also possible. With a pattern like ||||||||?????? trip?????????? and Bruce ###.jpg, you add Bruce to your picture set:\nTrip to Hawaii with John IMG_8823.jpg Hawaii trip with John and Bruce 001.jpg\nTrip to Hawaii with John IMG_8824.jpg Hawaii trip with John and Bruce 002.jpg\nTrip to Hawaii with John IMG_8825.jpg Hawaii trip with John and Bruce 003.jpg\n\u0026hellip;\nTrip to Hawaii with John IMG_8899.jpg Hawaii trip with John and Bruce 077.jpg\rSearch \u0026amp; Replace mode To change all file extensions from DAT to RAW, set replace from field to *.dat and set replace to field to *.raw. Click preview and you get:\nfile01.dat file01.raw\nfile02.dat file02.raw\nfile03.dat file03.raw\nfile04.dat file04.raw\nfile05.dat file05.raw\rTo change the prefix of picture files, set replace from to **IMG**_ (including underscore character) and set _replace to_ to _**Circus**_ (including a space character). Click preview and you get:\nIMG_8823.jpg Circus 8823.jpg\nIMG_8824.jpg Circus 8824.jpg\nIMG_8825.jpg Circus 8825.jpg\n\u0026hellip;\nIMG_8899.jpg Circus 8899.jpg\rTo remove the artist and album name from MP3 files, set replace from field to **Linkin_Park_album_Living_Things**_ and leave _replace to_ empty. Click preview and you get:\nLinkin_Park_album_Living_Things_01_Lost in the Echo.mp3 01_Lost in the Echo.mp3\nLinkin_Park_album_Living_Things_02_In My Remains.mp3 02_In My Remains.mp3\nLinkin_Park_album_Living_Things_03_Burn_It_Down.mp3 03_Burn_It_Down.mp3\n\u0026hellip;\nLinkin_Park_album_Living_Things_12_Powerless.mp3 12_Powerless.mp3\rextSearch \nextSearch screenshot\nextSearch is a file search application. It\u0026rsquo;s design is identical to Windows XP\u0026rsquo;s search application. If you are using Windows Vista or later and you miss the simplicity that the search application was giving, then extSearch is for you.\nextSearch allows searching for a file using multiple criteria:\n File name or file extension using wildcard characters such as ***** or ? Search for a specific word or phrase in a file (matching case or not). Searches sub-folders or not. Searches files based on its last modification date. Searches files based on its size.  Clipboard management All features of extTools are available through a shell explorer add-on. A nice feature of extTools is how the clipboard is managed:\n\nextTools screenshot (clipboard)\n Copy Full Path Copy File name only Copy Folder only Append to Copy Append to Cut  extBatchFileProcessor \nextBatchFileProcessor screenshot\nextBatchFileProcessor is a tool for queuing file operations (batch). This tools allows you to append a file operation (cut, copy or move) to a list of task to execute one after the other. In other words, you don\u0026rsquo;t have to wait for another operation to complete before queuing another.\nThis can be particularly handy when dealing with long operations like copying or moving a huge file or when dealing with slow peripherals like USB drives.\nEach queue item of extBatchFileProcessor uses default Windows API to process the operation so your data is safely processed.\nAs an example, imagine that you are copying multiple files to a USB drive. After the copying process is running for 10 minutes, you realize that you forgot to add another folder to the whole copy.\nThere is 2 options for solving this: Stop the copying process add start all over again (loosing your precious 10 minutes) or you could copy the missing file on a parallel copy (and reduce the performance/speed of both copy processes).\nWith extBatchFileProcessor, you can queue a copy operation of the missing folder that will run when the first copy is completed while keeping 100% performance.\nextDelete \nextDelete screenshot\nextDelete is a fast and secured file deletion application. It allows a user to quickly delete files and folders to recover free space as fast as possible.\nextDelete supports 3 deletion modes:\nNormal \nextDelete screenshot (normal delete mode)\nThis mode is the standard mode. It is really similar to the default Windows folder delete implementation. Before actually deleting files, it will first try to \u0026ldquo;discover\u0026rdquo; all the files within the target folder to compute the number of files to be deleted. A nice progress bar is also displayed to show the completion of the task.\nFast \nextDelete screenshot (fast delete mode)\nThis is the main feature of extDelete. This mode allow a user to retrieve the deleted space as soon as possible. A nice GUI shows the amount of files and the retrieved size from deleted files \u0026ldquo;so far\u0026rdquo;.\nIt is designed to be the opposite behavior of the default Windows delete process which has to \u0026ldquo;discover\u0026rdquo; all the files in the target folder to show the total space to be deleted and an accurate \u0026ldquo;remaining time\u0026rdquo;. The discovering process can take forever when dealing with folders that has many files.\nThis mode is convenient when your are copying a huge amount of files from a remote drive to a local drive and finding out that you may not have enough space left.\nNote that deleting a temporary folder would take forever using Windows delete API since the drive would already be busy copying.\rUsing extDelete would start deleting files and recovering space right away!\nSecure \nextDelete screenshot (secure delete mode)\nPlease note that extDelete secure deletion mode is not safe when deleting files on a Solid State Drive (SSD).\nThis mode allows a user to destroy the content of every file (Zeroisation) before deleting it preventing any file recovery (Undelete). Each file deleted in secured mode will see its data lost forever. If a user successfully undeletes a file, the content of the file will all be 0.\nNote: This mode has to \u0026ldquo;discover\u0026rdquo; the files first.\rextFileSplitter \nextFileSplitter screenshot (split)\nextFileSplitter is a file splitting and joining application. It allows you to split a file to multiple smaller parts for easier management and join them back together later.\nSupported split values are bytes, kilobytes, megabytes, gigabytes or \u0026ldquo;files\u0026rdquo; which split the file evenly into the specified amount of files.\nEach file is split into smaller files which have the same name as the original with a sequential number append at the end. For instance, big_file.mp4 will be split into big_file.mp4.001, big_file.mp4.002, big_file.mp4.003, big_file.mp4.004 and so forth.\n\nextFileSplitter screenshot (join)\nFor joining a file back together, just select the first split file (*.001) and let extFileSplitter automatically detect successive files. It will create a file with the same name without the .001 at the end. Joining big_file.mp4.001 will automatically detect successive files (big_file.mp4.002, big_file.mp4.003, etc) and create a joined file name big_file.mp4.\nextFileSplitter is really useful for splitting a huge file on multiple medias (CD or DVD) or send a file by email. Many email providers limit the size of each email preventing you to attach a big file to an email. Use extFileSplitter to split the file into multiple parts small enough to be accepted in an email. The recipient just have to join back all files to be able to rebuilt the original file.\nNote: extFileSplitter does not support splitting a file into more than 999 parts.\rextImageEncoder \nextImageEncoder screenshot\nextImageEncoder is an application that can hide a file/data into a picture. This process is called steganography.\nextImageEncoder does not simply append the data at the end of the image file but encodes the data into the actual pixels of the image by creating subtle change in pixel\u0026rsquo;s color. If an unsuspecting user opens an encoded image into an image editor or picture viewer, it won\u0026rsquo;t be able to see that a file is hidden within the image since that each change is so subtle that someone not specifically looking for it is unlikely to notice it.\nThe following features are supported:\n Automatically detect the appropriate encoding format to preserve the original image as much as possible (reduce the amount of modified pixels). Allows the encoding algorithm to keep modifying the pixels until the end of the image to evenly modify the image which hides the modified part.  extImageEncoder only supports lossless image file format (*.png or *.bmp) for saving the resulting image. Other image file format are lossy which means that some details are lost every time an image is saved. Since the data is encoded into pixels, a lossy image format would alterate or even destroy the data.\nextWebGet \nextWebGet screenshot\nextWebGet allows a user to download a file from a URL. Its usage is identical to UNIX wget application but wrapped with a nice GUI window.\nGood usage involves downloading file that would not be downloadable from an internet browser like html or rss files.\nextHashCalculator \nextHashCalculator screenshot (md5)\nextHashCalculator calculate hashes (message digests) for any kind of file.\nA file hash is the result of a file verification process that confirms the integrity of a file. Web sites that offers downloadable content mostly provide hash values to let users know that the downloaded file is not altered (incomplete, corrupted or modified by a virus).\nextHashCalculator supports the following hash algorithms:\n CRC32 MD5 SHA1  extGuid \nextGuid screenshot\nextGuid is tool for developers that allows a user to generate new GUID (Globally unique identifier) numbers.\nextGuid can format the GUID output in multiple forms which are:\nIMPLEMENT_OLECREATE(\u0026hellip;) // {A17F1F0D-6FCB-4DC1-83A1-22808A6B6501}\nIMPLEMENT_OLECREATE(\u0026laquo;class\u0026raquo;, \u0026laquo;external_name\u0026raquo;,\n0xa17f1f0d, 0x6fcb, 0x4dc1, 0x83, 0xa1, 0x22, 0x80, 0x8a, 0x6b, 0x65, 0x01);\nDEFINE_GUID(\u0026hellip;) // {A17F1F0D-6FCB-4DC1-83A1-22808A6B6501}\nDEFINE_GUID(\u0026laquo;name\u0026raquo;,\n0xa17f1f0d, 0x6fcb, 0x4dc1, 0x83, 0xa1, 0x22, 0x80, 0x8a, 0x6b, 0x65, 0x01);\nstatic const struct GUID = // {A17F1F0D-6FCB-4DC1-83A1-22808A6B6501}\nstatic const GUID \u0026laquo;name\u0026raquo; =\n{ 0xa17f1f0d, 0x6fcb, 0x4dc1, { 0x83, 0xa1, 0x22, 0x80, 0x8a, 0x6b, 0x65, 0x01 } };\nRegistry format {A17F1F0D-6FCB-4DC1-83A1-22808A6B6501}\nextAnsiPrinter \nextAnsiPrinter screenshot (apple)\nextAnsiPrinter a command prompt only application (no GUI). It is an implementation of the old DOS driver ANSI.SYS. This driver is not available anymore on recent windows operating systems. This tools bring back this functionality and allows you to render ANSI files (*.ans) on a windows command prompt (win32).\nUsage: extAnsiPrinter [ansi file]\nCompatible with extTools is only available for the following Windows platform:\n Windows XP Windows Vista Windows 7  extTools is still untested with Windows 8. If you do install it on Windows 8, please tell me!\nMinimum system requirements  100% PC compatible Pentium II, 300 mhz 256 Mb RAM 30 Mb free disk space Administrator rights (for installation)  History of changes Version 1.4 - First public release\n",
    "ref": "/exttools-a-windows-shell-extension-to-help-you-with-common-windows-file-explorer-tasks/"
  },{
    "title": "How to make a time-lapse video with free tools and a DSLR camera",
    "date": "",
    "description": "",
    "body": "Introduction Time-lapse photography is a wonderful effect to make your images alive instead of static because you can make a plain (or almost boring) event and make it so much more dramatic. However, it is something that usually needs a lot of time investment to get something acceptable.\nConsidering my family was planning to decorate the Christmas tree during the weekend, I decided to take my camera and capture the whole event in a time-lapse video.\nTo get a nice video, you need to prepare yourself before taking the shots because if you don’t, you can end up with a bad picture set and have a hard time merging all pictures together.\nThe following article will explains how I managed to make a nice time-lapse video with a DSLR using only free software.\nClick here to jump to the Final Results section and see the video.\nPrepare you gears Mandatory gears for time-lapse videos Tripod This one is obvious. You need a tripod to make sure that all images are aligned the same directions. The field of view must be identical for all captured images. You do not want to see the background of the event moving during the video but only your subject.\nIntervalometer An intervalometer is a remote trigger with the added capacity to trigger the camera shutter at regular intervals. It is mandatory if you want to do time-lapse image capturing. It is not used to reduce camera shake since the photographer does not take any actions on the camera during the capturing process.\nUseful stuff Calculator A calculator is useful if you go out in the field for your capturing session. For most time-lapse projects related to capturing the nature, it would be wise to bring a camera with you for calculating the perfect interval for your desired effect. See the section Calculating the best interval for details.\nTools you won’t need Flashes If you think you may need a flash for taking your shots, you might have to reconsider your project.\nIf your intervals are too short (the elapsed time between each photos), the flash might not have the time to recharge between each shots.\nIf your intervals are long enough to have your flash recharged, it means that the subject could be positioned differently in the scene resulting in great highlight changes which is really hard to correct in post-production.\nAnother issue that the flash might cause is flickering. If your scene is not well lighted, there is a high chance that you end up with lots of flickering during the merging phase. The exposition will vary a lot between each shots and that would not be pleasant to watch. Some plugins can help to reduce flickering but it is always better to think about this in pre-production than dealing with it in post-production.\nI am unable to think of a suitable scenario where a flash would be required that also requires long intervals like 5 minutes or more.\nCheck your calculations Don\u0026rsquo;t go out and try to shot anything as quickly as possible. I recommend that you take the time to think and evaluate what is the best interval (time between each photos) for your needs. Is it going to be seconds, minutes or even hours between each shots ? That would greatly change how you need to prepare yourself.\nSmooth or hard movement transitions? Smooth transitions Smooth transitions between each photos means a short interval between each capture. Is is used when you want your subject to move slowly or show few changes between each frame so the user can understand the subject movement over time.\nA high frame rate (at least 24 fps, 30 fps is best) in the final video is required for smooth transitions.\nIf you make your calculations for a video that is too smooth, the subject will appear frozen which is not something that we want on a time-lapse video.\nUsual examples are melting ice, clouds or sunsets/sunrise, or mostly any kind or subject movement.\nHard transitions As opposed to smooth transitions, hard transitions between each photos means a longer time interval between each capture. It is used in situation where the user do not have to follow movement like when you want to show the different steps or the increasing progress of a project.\nA low frame rate (between 1 fps to 15 fps) in the final video would result to a final video with hard transitions.\nIf you make your calculations for a video with too hard transitions, the viewer could get confused about what just happened since frames have a tendency to \u0026ldquo;jump\u0026rdquo; from one to another.\nUsual examples are building constructions or rotting fruits.\nCalculating the best interval Once you have defined what kind of transitions you want, and the \u0026ldquo;amount\u0026rdquo; of movement you want to show in your final video, here\u0026rsquo;s how to perfectly define the right interval time to get very smooth or hard transitions.\nYou first need to define the following:\n How long does the real event last ? How long the final video would be ? What is the final video frame rate ? That is 15 or less for hard and 24 and over for smooth.  Now open Photography time-lapse calculator (that\u0026rsquo;s an Excel sheet) and take a look at the \u0026ldquo;interval calculator\u0026rdquo;. Use the same number in the appropriate fields and the sheet will do the math to give you the perfect interval time for the desired smooth/hard transition effect.\nGear setup Use manual focus Set your camera in manual focus. This is also mandatory if your intervals are really close (less than 10 seconds).\nIf you set your camera in auto focus, lets say to capture the movement of your subject when it moves closer and away from the camera, you will end up with some pictures with a blurry background and some with a clear background and that would not be interesting to watch.\nAlso, the auto-focus of your camera can take as much as 1-2 seconds and that delay would be added to the intervals between each shots. You are much better to use a narrower aperture to increase the dept of field instead of using auto-focus.\nIt also saves battery power 🙂\nSet camera in manual mode You need to set your camera in manual mode.\nThe objective is to have an identical exposure over all your frames (pictures) during the whole capturing period. The only way to expect this is to use the manual mode in your DSLR. All other modes will make assumptions or estimation of what is the best value for ISO/Aperture/Shutter speed and you may not always get the same value which would create slight variations in the final image exposure.\nThe same applies for any priority modes.\nShutter speeds almost any shutter speed is good for doing time-lapse videos. However, make sure you select a shutter speed that is appropriate for the situation. If your shutter speed that is too fast/quick, all your images will appear frozen which would result in a consecutive list of frozen action images.\nIf your final video have a medium to low frame rate, you could make use of this by selecting a slow shutter speed (read 1/60th to 1/30th). That shutter speed range would create motion blur in your image and ease the transition between 2 video frames.\nAperture Set your aperture as wide as possible (that means the lowest f number as possible) to allows a maximum amount of light to enter the camera. Take consideration for allowing a proper depth of field for your video.\nIf your subject is close to the camera, a wider depth of field is required (to have both the background and the subject at focus) so a narrow aperture (high f number) would be better.\nIf you are capturing a background or a nature scene, the widest aperture would allow more light to come in without sacrificing anything at focus.\nISO As usual, set your ISO to the lowest possible value that is reasonable for giving the right exposure.\nShoot in JPG Set your camera to shoot in JPG not RAW. RAW is really nice for stills but it is way too heavy for multiple captures and considerably reduces your recording time. Besides, you don\u0026rsquo;t really need RAW for time-lapse videos.\nAn average RAW file takes about 26.75 MiB and considering you may be capturing stills at 15 seconds intervals, you will only be able to record 570 frames. In other words, you will only be able to record an event of 2 hours and 22 minutes before fulling the memory card. If you are capturing at 10 seconds interval, that\u0026rsquo;s only 1 hour and 35 minutes of real-time recording before fulling the memory card!\nHere\u0026rsquo;s the calculations:\n16 GB = 16000000000 bytes = 15258 MiB\n15258 MiB / 26.75 MiB per photo = 570 frames\n570 photos @ 1 frame per 15 seconds = 142.5 minutes = 02:22:30 of real-time recording.\n570 photos @ 1 frame per 10 seconds = 95 minutes = 01:35:30 of real-time recording.\nDuring this shooting, I use RAW captures without thinking much about this. I had to invest too much time converting and resizing images to JPG. I also had to change the 16 GB memory card for another one at the end of the video which explains why the view angle changes at the end. Save yourself the trouble and use the JPG captures.\nSet reduced image capture size This step is optional but doing so could reduce the amount of time in post-processing. If you already know the resolution of the final video (480p, 720p, 1080p, 4K), you can set the camera to automatically resize images to the appropriate resolution that matches the final video resolution.\nYou can also decide to skip this step and reduce images size during post-processing with your favorite image editor with the help of a batch plugin or use a live resize filter when importing images into the video software.\nTurn off Image stabilization (IS) As usual, since you are using a tripod, set Image Stabilization to off.\nConfigure appropriate white balance Turn off auto white balance. This is required to reduce flickering to a minimum. It is better to have flickering because the amount of light in the room was varying over time than having your camera trying to detect the best white balance on every capture. Try on auto once, look at the value and use the same for all other captures.\nIn other words, it is best to set all auto features of your camera to off for the same reasons.\nConnect your intervalometer Connect your intervalometer and configure the appropriate interval time calculated previously for capturing frames.\nCapture your scene Now is the time to take as much shoot as needed for properly capturing your subject\u0026rsquo;s movement or change over time. In the meantime, get yourself a coffee, start downloading required softwares or watch a movie and come back in a hour or so 🙂\nPrepare your image files After the capturing session is completed and you have transferred all your images to your PC, it is time to make sure your files are prepared for the final product.\nVerify the image sequence order In order to import the images to a video application, all images must have the same pattern: a common prefix with a sequential increasing number. All images have to be named in a continuous image sequence. However, in some scenarios, this list could be broken or require modifications.\nHere\u0026rsquo;s some situation that might happened which would require special attention.\nReordering, fixing image counter wrap around In the low probability that you started shooting pictures when your camera\u0026rsquo;s file name counter was close to wrapping around (say IMG_9xxx.jpg), you might end up with a broken sequence. That means you will have your first block which is IMG_9000.jpg to IMG_9999.jpg and your second block which is IMG_0000.jpg to IMG_2345.jpg. Most (if not all) video software will try to import each block as independent blocks. To prevent this, you need to reorder your images to a single continuous image sequence.\nIn other words, you basically need to reorder each block to the following:\n IMG_0000.jpg [\u0026hellip;] IMG_2345.jpg renamed to IMG_1000.jpg [\u0026hellip;] IMG_3345.jpg IMG_9000.jpg [\u0026hellip;] IMG_9999.jpg renamed to IMG_0000.jpg [\u0026hellip;] IMG_0999.jpg  to get the target range IMG_0000.jpg [\u0026hellip;] IMG_3345.jpg.\nThe easiest way to do this is to use the following script. Copy and paste the content of the following window and create a file located next to the images called \u0026ldquo;rename.vbs\u0026rdquo;.\nTake note that the .vbs file extension is mandatory for Windows to recognize the file as a runnable script.\r1defaultCaption = \u0026#34;Enter a value\u0026#34; 2 3prefix = askString(defaultCaption, \u0026#34;What is the prefix filename for your images?\u0026#34;, \u0026#34;IMG_\u0026#34;) 4postfix = \u0026#34;.jpg\u0026#34; 5 6block1Start = askNumber(defaultCaption, \u0026#34;What is the starting number for the first block?\u0026#34;, 9000) 7block1End = askNumber(defaultCaption, \u0026#34;What is the ending number for the first block?\u0026#34;, 9999) 8block2Start = askNumber(defaultCaption, \u0026#34;What is the starting number for the second block?\u0026#34;, 0) 9block2End = askNumber(defaultCaption, \u0026#34;What is the ending number for the second block?\u0026#34;, 2345) 10 11indexLength = Max(Len(block1Start), Max(Len(block1End), Max(Len(block2Start), Len(block2End) ) ) ) 12block1Size = block1End-block1Start+1 13block2Size = block2End-block2Start+1 14 15block1ImageStart = prefix \u0026amp; padNumber(block1Start, indexLength) \u0026amp; postfix 16block1ImageEnd = prefix \u0026amp; padNumber(block1End, indexLength) \u0026amp; postfix 17block2ImageStart = prefix \u0026amp; padNumber(block2Start, indexLength) \u0026amp; postfix 18block2ImageEnd = prefix \u0026amp; padNumber(block2End, indexLength) \u0026amp; postfix 19 20\u0026#39;0 to 3345 21newBlock1IndexStart = 0 22newBlock1IndexEnd = block1Size 23newBlock2IndexStart = block1Size+1 24newBlock2IndexEnd = block1Size+block2Size 25 26newBlock1ImageStart = prefix \u0026amp; padNumber(newBlock1IndexStart, indexLength) \u0026amp; postfix 27newBlock1ImageEnd = prefix \u0026amp; padNumber(newBlock1IndexEnd, indexLength) \u0026amp; postfix 28newBlock2ImageStart = prefix \u0026amp; padNumber(newBlock2IndexStart, indexLength) \u0026amp; postfix 29newBlock2ImageEnd = prefix \u0026amp; padNumber(newBlock2IndexEnd, indexLength) \u0026amp; postfix 30 31confirmationMessage = \u0026#34;The following script will rename block \u0026#34; \u0026amp; vbCrLf \u0026amp; _ 32 block1ImageStart \u0026amp; \u0026#34;--\u0026gt;\u0026#34; \u0026amp; block1ImageEnd \u0026amp; _ 33 \u0026#34; into \u0026#34; \u0026amp; _ 34 newBlock1ImageStart \u0026amp; \u0026#34;--\u0026gt;\u0026#34; \u0026amp; newBlock1ImageEnd \u0026amp; vbCrLf \u0026amp; _ 35 \u0026#34;and block \u0026#34; \u0026amp; vbCrLf \u0026amp; _ 36 block2ImageStart \u0026amp; \u0026#34;--\u0026gt;\u0026#34; \u0026amp; block2ImageEnd \u0026amp; _ 37 \u0026#34; into \u0026#34; \u0026amp; _ 38 newBlock2ImageStart \u0026amp; \u0026#34;--\u0026gt;\u0026#34; \u0026amp; newBlock2ImageEnd \u0026amp; vbCrLf \u0026amp; _ 39 vbCrLf \u0026amp; _ 40 \u0026#34;Is this what you want?\u0026#34; 41 42defaultCaption = \u0026#34;Confirm renaming\u0026#34; 43askYesOrDie defaultCaption, confirmationMessage 44askYesOrDie defaultCaption, \u0026#34;The process is permanent and can not be undone.\u0026#34; \u0026amp; vbCrLf \u0026amp; \u0026#34;Are you really sure?\u0026#34; 45 46\u0026#39;start with file renaming 47 48\u0026#39;Renaming all files with a \u0026#34;tmp_\u0026#34; prefix to prevent conflicts 49for i = block1Start to block1End 50 oldFilename = prefix \u0026amp; padNumber(i, indexLength) \u0026amp; postfix 51 newFilename = \u0026#34;tmp_\u0026#34; \u0026amp; oldFilename 52 renameFile oldFilename, newFilename 53next 54for i = block2Start to block2End 55 oldFilename = prefix \u0026amp; padNumber(i, indexLength) \u0026amp; postfix 56 newFilename = \u0026#34;tmp_\u0026#34; \u0026amp; oldFilename 57 renameFile oldFilename, newFilename 58next 59 60\u0026#39;Rename tmp_block1 61loopCount = 0 62for i = block1Start to block1End 63 oldFilename = \u0026#34;tmp_\u0026#34; \u0026amp; prefix \u0026amp; padNumber(i, indexLength) \u0026amp; postfix 64 newFilename = prefix \u0026amp; padNumber(loopCount+newBlock1IndexStart, indexLength) \u0026amp; postfix 65 renameFile oldFilename, newFilename 66 loopCount = loopCount + 1 67next 68 69\u0026#39;Rename tmp_block2 70loopCount = 0 71for i = block2Start to block2End 72 oldFilename = \u0026#34;tmp_\u0026#34; \u0026amp; prefix \u0026amp; padNumber(i, indexLength) \u0026amp; postfix 73 newFilename = prefix \u0026amp; padNumber(loopCount+newBlock2IndexStart, indexLength) \u0026amp; postfix 74 renameFile oldFilename, newFilename 75 loopCount = loopCount + 1 76next 77 78 79 80 81sub renameFile(oldFilename, newFilename) 82 Dim fso 83 Set fso = WScript.CreateObject(\u0026#34;Scripting.FileSystemObject\u0026#34;) 84 fso.MoveFile oldFilename, newFilename 85 Set fso = nothing 86end sub 87 88 89sub askYesOrDie(caption, prompt) 90 response = Msgbox(prompt, vbYesNo+vbExclamation, caption) 91 if (response = vbNo) Then WScript.Quit \u0026#39;Detect No 92end sub 93 94function askNumber(caption, prompt, defaultValue) 95 Dim response 96 Do 97 response = InputBox(prompt, caption, defaultValue) 98 If response = \u0026#34;\u0026#34; Then WScript.Quit \u0026#39;Detect Cancel 99 If IsNumeric(response) Then Exit Do \u0026#39;Detect value response. 100 MsgBox \u0026#34;You must enter a numeric value.\u0026#34;, 48, \u0026#34;Invalid Entry\u0026#34; 101 Loop 102 askNumber = response 103end function 104 105function askString(caption, prompt, defaultValue) 106 Dim response 107 Do 108 response = InputBox(prompt, caption, defaultValue) 109 If response = \u0026#34;\u0026#34; Then WScript.Quit \u0026#39;Detect Cancel 110 Exit Do \u0026#39;Detect value response. 111 Loop 112 askString = response 113end function 114 115function Max(a,b) 116 Max = a 117 If b \u0026gt; a then Max = b 118end function 119 120function Min(a,b) 121 Min = a 122 If b \u0026lt; a then Min = b 123end function 124 125function padNumber(value, numDigits) 126 value2 = value 127 do while(len(value2) \u0026lt; numDigits) 128 value2 = \u0026#34;0\u0026#34; \u0026amp; value2 129 loop 130 padNumber = value2 131end function  The script will ask for the required parameters and take care of the issue and all the renaming. Once executed, you will have a single block of continuous images: IMG_0000.jpg [\u0026hellip;] IMG_3345.jpg.\nNote: This script is only available for the Windows platform.\rDeleting erroneous images If you see an erroneous image or an image that would break the flow of movement, you may have to delete an image from the sequence. Let say that during the capturing session, you had to check your camera and accidentally moved your hand in front of the lens. IMG_3400.jpg is now a nice black picture of your hand\u0026hellip;\nIf you ever have to delete an image, you need to restore the natural sequence order for the video software to recognize the whole sequence. For every image deleted, you need to copy \u0026amp; paste the previous image and rename it using the name of the deleted image.\nIn the previous example, if you want to delete IMG_3400.jpg, you first delete IMG_3400.jpg, then copy IMG_3399.jpg and name it IMG_3400.jpg.\nIf you want to delete multiple frames, lets say IMG_3050.jpg to IMG_3069.jpg (20 frames), it is best to restore the sequence using both IMG_3049.jpg and IMG_3070.jpg to create a smaller hole/gap. That is deleting IMG_3050.jpg through IMG_3059.jpg and using IMG_3049.jpg for restoration of the first half and deleting IMG_3060.jpg through IMG_3069.jpg and using IMG_3070.jpg for restoration of the second half.\nPlease take note that deleting pictures actually creates an artificial hole/gap in the final video timeline and may result to a hard transition.\rResize your images This step is optional but it is suggested to resize your images to help Windows Movie Maker or VirtualDub to load all images into your project. It is a good idea to resize all your images to match the final resolution of your movie (that is 720p or 1080p pixels high).\nThe best way to resize your images is to use David\u0026rsquo;s Batch Processor 1.1.8 plugin for Gimp and follow theses steps:\n Open Gimp. Click on Filters\\Batch Process\u0026hellip; menu to launch David\u0026rsquo;s Batch Processor.  \rImport your images into David's Batch Processor: \r\rIn the _**Input tab**_, click the Add Files button and browse to your images location.\nie _G:\\Temp\\timelapse\\noel2014_\r\r* Select all your images and press the Add button. That will import all your images. This process may take some time. Please be patient.\r* Once completed, press the Close button to close the file dialog.\r\r\r\rEnable Resizing for all your images \r\rClick on the _**Resize tab**_.\r\r* Check the _**Enable**_ check box.\r* Select the _**Absolute**_ option. That will enable the second section.\r\rEnter the final resolution of your movie. \r\rUse a _Width_ of 1280 and a _Height_ of 720 for a 720p resolution or\r\r* Use a _Width_ of 1920 and a _Height_ of 1080 for a 1080p resolution.\r\r\r* Select **_Inside_** for the _Fit_ property.\r \r\r\rDefine where your resized images will be saved \r\rClick on the _**Rename tab**_.\r\r* Click on Select Dir button and select a new output folder.\nie: _G:\\Temp\\timelapse\\noel2014Resize_\r* Once completed, press the Open button to close the folder dialog.\r* You should see your target folder listed next to the field **_To Directory_**.\r\r\r\u0026lt;li\u0026gt;\rDefine the image format of the resized images \u0026lt;ol\u0026gt;\r\u0026lt;li\u0026gt;\rClick on the _**Output tab**_.\r\u0026lt;/li\u0026gt;\r\u0026lt;li\u0026gt;\rSelect the following values for each fields: \u0026lt;ol\u0026gt;\r\u0026lt;li\u0026gt;\rFormat: JPG\r\u0026lt;/li\u0026gt;\r* Quality: 0.85\r* Smoothing: 0.00\r* Optimize: checked.\r* Progressive: unchecked.\r* Sampling: 2x2\r* Baseline: checked.\r* Restarts: 0\r* Algorithm: Integer\r\u0026lt;/ol\u0026gt;\r\u0026lt;/li\u0026gt;\r\u0026lt;/ol\u0026gt;\r\u0026lt;/li\u0026gt;\r* Press the Start button to start resizing your images.\r* Wait for the process to complete.\r \r\r\nDavid Batch Processor Done\nCombining photos into a movie In the next sections, I will explain 2 methods that you can use to combine photos into a movie. Each methods has their own required list of software and has their pros and cons.\nWindows Movie Maker This sections explains how to process your captured images into a video using Windows Movie Maker.\n\nWindows Movie Maker screenshot\nDownload required files  Windows Movie Maker online installer / offline installer download.  or the older version Windows Movie Maker 2.6.    Download and install each software before processing to the next steps.\nAdd photos to movie timeline All your images are ready. Now is the time to import them in Windows Movie Maker by following theses steps:\n Open Windows Movie Maker.  \rImporting all images \r\rPress the _**Add videos and photos**_ button.\r\r* Select all your images and press the Open button.\r\r\r\rSet the appropriate frame rate \r\rRight-click on the _**timeline** _and select the option _**Select All**_.\r\r* Press _**Ctrl+A**_ key to select all.\r* Click on the _**Edit tab**_.\r* Locate the _**Duration**_ field. That is the time in seconds where the frame will remain visible.\r\rBased on the calculation you made in section [Calculating the best interval](#Calculating_the_bestinterval), set the appropriate duration to match your desired frame rate with the following formula:\nDuration = 1 / fps.\n\r\rHere are quick calculations:1 fps = 1 second\n2 fps = 0,5 second\n10 fps = 0,1 second\n15 fps = 0,066666667 second\n16 fps = 0,0625 second\n20 fps = 0,05 second\n24 fps = 0,041666667 second\n30 fps = 0,033333333 second\r\r\r\r\r\rAdding an audio track Windows Movie Maker supports adding an audio track to the video. You can use an audio file or the audio of another video as an audio track. To add an audio track, follow theses steps:\n Left-click on the timeline and move the cursor to the beginning of the timeline.   Click on Add Music button in the ribbon toolbar. Browse the audio or video file and click on Open button. You should see a new track with a green background on the timeline view.  If you do not have an audio file on your computer, you can try to find some on the Creative Commons Search (Music) site.\nSaving to MP4 file Now that your composition is complete, save your project into an MP4 video by following theses steps:\n Click on Save Movie button in the ribbon toolbar. Select the export settings that matches your needs and file size. For maximum quality, save your movie using the For high-definition display setting.  \nWindows Movie Maker Export Completed\nVirtualDub This sections explains how to process your captured images into a video using VirtualDub.\nDownload required files  VirtualDub (latest version). Lagarith Lossless Video Codec VirtualDub MSU Deflicker filter or Deflicker Filter for VirtualDub HandBrake FadeFX 1.2 - Fade Effects for VirtualDub  Download and install each software before processing to the next steps.\nImporting Importing your images as a video in VirtualDub is also really easy: simply follow theses steps:\n Start VirtualDub. Click on File/Open video file menu. In the Open file dialog, make sure that Automatically load linked segments is checked. Select the first image of the sequence and click the Open button. VirtualDub will automatically detect the next images and will update the timeline accordingly. Verify that the timeline length (in video frames) matches the total number of captured images in your project.  \nVirtualDub editing\nConfigure Frame Rate  Click on Video/Frame Rate menu. That will open the Video frame rate control dialog. Select Change frame rate to (fps) and enter the value you calculated in section Calculating the best interval.  Lossless video codec VirtualDub output uncompressed AVI files by default which is not an option considering the resolution of the video. It needs to be configured to use a video codec for compressing the video.\nSince this guide will handle re-encoding using Handbrake, it is suggested to use a lossless video codec to prevent loosing any quality while exporting your video from VirtualDub to Handbrake. The best lossless video codec available is Lagarith Lossless Video Codec.\nHere are the steps for configuring the codec:\n Click on **_Video/Compression _**menu. That will open the Select video compression dialog. Select Lagarith Lossless Codec and press the Configure button. Check Use Multithreading and Prevent Upsampling When Decoding.  Reducing flickering Flickering occurs when the exposition between each video frame is not identical which gives the fading effect that you may see. That is why your should shoot in manual: to reduce flickering to a minimum.\nIf you see flickering in your video, a filter can be applied to the video to reduce it. Here are the steps for configuring the filter:\n Click on **_Video/Filters _**menu. That will open the Filter dialog. Click on the Add button. That will open the Add Filter dialog. Click on the Load button and _browse _to the location where you extracted one of the deflicker filter (*.vdf) Press the OK Button. Configure the filter parameters and press the OK button.  \nVirtualDub Deflicker filter\nApplying additional filters (optional) If you want to add fade-in or fade-off effects you can use the FadeFX filter with the following:\n Click on **_Video/Filters _**menu. That will open the Filter dialog. Click on the Add button. That will open the Add Filter dialog. Click on the Load button and _browse _to the location where you extracted one of the fadefx filter (*.vdf) Press the OK Button. Configure the filter parameters and press the OK button.  \nVirtualDub Fade In Fade Out filter\nAdding an audio track VirtualDub also support adding an audio track from an external audio file. VirtualDub works best with WAV of MP3 audio file. Here are the steps for adding an audio file to your video:\n Click on **_Audio/Audio from other file _**menu. That will open the Open an audio file dialog. Browse to the location of the audio file add and click the Open button. If you are importing an MP3 file, select the type of bitrate of the file. That is CBR or VBR. In case you do not know, select Autodetect. Press the OK Button.  For free creative commons licensed music, visit the following link: Creative Commons Search (Music).\nSaving to temporary *.avi file As explained in the Lossless video codec section, VirtualDub is not the best software for encoding your video (compressing). It is better to use Handbrake for this task. To save your video without loosing any detail or data, a temporary AVI file must be created.\n Click on **_File/Save as AVI _**menu. That will open the Save file dialog. B_rowse _to the location where you want to save your video and enter a filename for saving. Click the Save button. Wait for the encoding to complete.  \nVirtualDub encoding\nRe-encoding using Handbrake Handbrake is the best video encoder to use for compressing your video because it supports constant quality encoding parameters. Here are the steps for compressing your video:\n Click on _Source _icon in the toolbar and select File. That will open the Open file dialog. B_rowse _to the location of the temporary video (*.avi) you created in the previous step. Click the Open button. Click on the Browse button. That will open the Save file dialog. B_rowse _to the location where you want to save your final video and enter a filename for saving. Click the Save button. Click on the Picture tab.  \rSelect the following values for each fields: \r\rAnamorphic: Strict\r\r* Cropping: Custom\r* Top, Bottom, Left, Right: 0\r\r\r Click on the Video tab.  \rSelect the following values for each fields: \r\rVideo codec: H.264 (x264)\r\r* x264 Preset: Slow\r* x264 Tune: None\r* Quality, Constant Quality: RF 22\r\r\r Click on the Audio tab. Select Auto Passthru for Codec. Click on the Start icon in the toolbar. Wait for the encoding to complete.  Final results The shots for this time-lapse were taken with my 18-55mm kit lens at 18mm, f/8.0, 1/30th shutter speed, ISO 1600 and 2 seconds between each shots. I accidentally left auto white balance turned on, which is what gives it that flicker.\nThe real-time event lasted for 1 hour and 16 minutes. A total of 2264 photos was required.\nHere is the final result video visualized at 30 frames per seconds:\n",
    "ref": "/how-to-make-a-time-lapse-video-with-free-tools-and-a-dslr-camera/"
  },{
    "title": "HDHomeRun TV Dump: Unleash the DVR capabilities of your free to air live TV stream",
    "date": "",
    "description": "",
    "body": "HDHomeRun TV Dump HdHomeRun TV Dump is a GUI that installs over the native HDHomeRun application and allows owners to quickly take control over the free to air live TV stream. Implementing DVR capabilities on your computer becomes a easy as 1-2-3.\nIt is designed to make interaction with the device easy by automating as much as possible any task a user would like to execute.\nIt\u0026rsquo;s main features are:\n Quicker \u0026amp; easier to understand and install than other DVR solutions like MythTV and Windows Media Center. Auto-detection of existing HDHomeRun devices on the network. Auto-detection of busy tuners. Automatic selection of an available tuner for watching or recording a live TV stream. Manual recording support. Scheduled recording support (enables DVR capabilities with the HDHomeRun) Watch live TV streams.  HDHomeRun TV Dump should also work with devices that supports the MPEG4/H.264 video codec but this functionality is still untested.\nScreenshots         295x260   260x360   295x225   677x342   504x270   260x360   433x367   295x260   438x291    Download You can download HDHomeRun TV Dump by clicking on the following link:\n HDHomeRun TV Dump v1.2.79 (x64 portable) (208 downloads)  HDHomeRun TV Dump v1.2.79 (x64 setup) (196 downloads)  HDHomeRun TV Dump v1.2.79 (win32 portable) (158 downloads)  HDHomeRun TV Dump v1.2.79 (win32 setup) (181 downloads)   Hardware \u0026amp; Software Requirements The following is required to take full control of HDHomeRun TV Dump:\n Users must have an existing network-attached HDHomeRun device. VLC must be installed on system to watch live TV. HDHomerun application must be installed on system to allow communication with the HDHomeRun device.  Usage Using HDHomeRun TV Dump is very easy, you just need to click the button that correspond to your desired activity: Scan, Watch, Record and Program.\nThe step by step instructions are as follows:\nScan On the first application launch, users must execute a scan by pressing the Scan button. The scan is required for detecting your local TV channels. During this time, the application may freeze until the scan is complete which should not take more than 2 minutes.\nWhen the scan is completed, the other activity buttons will activate and the Watch, Record and Program buttons will be available. The channel list will also be updated:\n\nHDHomeRun Tv Dump - Main Window showing channels\nWatch This button allows you to watch live TV using the VLC application. Select your desired device \u0026amp; channel in the available lists and press the Watch. The application will automatically select an available tuner and will initiate a request to the device.\nA VLC window will open which will play the live TV stream:\n\nHDHomeRun Tv Dump - VLC playing\nDuring this time, a play icon will be displayed on the HDHomeRun TV Dump window next to the selected tuner that is sending content to the VLC application:\n\nHDHomeRun Tv Dump - Watching Tuner 0\nRecord HDHomeRun TV Dump can also be used to start a recording of the TV stream. Select your desired device \u0026amp; channel in the available lists and press Record. The following user dialog will be displayed:\n\nHDHomeRun Tv Dump - Manual Recording Dialog\nThis dialog allows a user to enter the total recording time which HDHomeRun TV Dump is using to automatically stop the recording. Pressing the OK button to initiate a recording request to the device. A recording status windows will be displayed for each recording:\n\nHDHomeRun Tv Dump - Recording monitor\nThis window help users keep track of the recording program and shows the elapsed and remaining times.\nDuring this time, a busy icon will be displayed on the HDHomeRun TV Dump window next to the selected tuner that is used for recording:\n\nHDHomeRun Tv Dump - Tuner 0 Recording\nProgram The application can be used as a DVR helping users to program a recording based on a schedule. Press the Program button for displaying the scheduled recordings dialog:\n\nHDHomeRun Tv Dump - Scheduled Recording List\nNote: The scheduled recordings dialog can be configured to automatically reset tuner 0 and/or tuner 1 each day at midnight. Resetting each tuners fixes some issues for long recordings.\rTo add a new scheduled recording to the list, press the Add button. This will display the Add a new recording dialog which allows a user to select a specific recording schedule:\n\nHDHomeRun Tv Dump - New Scheduled Recording\nThis dialog allows a user assign a name to the recording for better future referencing. The user also have to press the \u0026hellip; button to setup virtually any kind of schedule:\n Unique:\nSimply specify a date and time. Repetitive:\nA value is used for repeating on minutes, hours, days, weeks and months starting on specified date and time. Daily:\nSpecify the type from Everyday, Week days and Week ends starting on the specified date and time. Weekly:\nSpecify individual recording days, starting on the specified date and time. Monthly:\nSelect individual recording months, starting on the specified date and time.  Press OK button to create the scheduled recording. A new entry will be listed on the scheduled recordings dialog.\nCompatible with HdHomeRun TV Dump is only available for the Windows platform and has been tested with the following software versions:\n Windows Vista Windows 7 HDHomeRun Setup application 20130117 VLC v2.1.2 (any future release should also be compatible)  Minimum system requirements  100% PC compatible Pentium II, 300 mhz 256 Mb RAM 20 Mb free disk space  License HDHomeRun TV Dump is being distributed as Freeware for personal, commercial use, non-profit organization, and educational purpose. It may be included with CD-ROM/DVD-ROM distributions. You are NOT allowed to make a charge for distributing this Software (either for profit or merely to recover your media and distribution costs) whether as a stand-alone product, or as part of a compilation or anthology, nor to use it for supporting your business or customers. It may be distributed freely on any website or through any other distribution mechanism, as long as no part of it is changed in any way.\nThe full license is available here.\nHistory of changes Version 1.2 - First public release\n",
    "ref": "/hdhomerun-tv-dump-unleash-the-dvr-capabilities-of-your-free-to-air-live-tv-stream/"
  },{
    "title": "Photographie Macro, je m’y suis lancé cet été",
    "date": "",
    "description": "",
    "body": "Pendant le début du mois de juillet, j\u0026rsquo;ai décidé de me lancer dans la photographie macro. Ce que j\u0026rsquo;ai découvert durant cette expérience est étonnant.\nComme tout le monde, j\u0026rsquo;ai naturellement décidé d\u0026rsquo;utiliser les fleurs comme sujet. Quoi de mieux que le mois de juillet, où les fleurs sont belles et épanouies, pour essayer de faire de la photographie.\nJe suis donc parti à la recherche de fleurs avec mon appareil, mon trépied ainsi que des tubes d\u0026rsquo;extension (21mm).\nVoici un exemple de ce que j\u0026rsquo;ai capturé:\n                              ",
    "ref": "/photographie-macro-je-my-suis-lance-cet-ete/"
  },{
    "title": "DNS-343 Monitor: Easily monitors disk space on your DNS-343 NAS.",
    "date": "",
    "description": "",
    "body": "DNS343Monitor DNS-343 Monitor is a tool for monitoring how much space is left on your DNS-343 NAS device.\nThe DNS-343 is a Network Attached Storage (NAS) device that can hold as much as 4 drives. Since all the drives are shared in a Network, each disk can quickly become full. This tools allows you to see the remaining space left on each individual drives.\nIt\u0026rsquo;s main features are:\n Show space left and used for each drives. GUI supported. Compatible with all firmware versions.  Note: This tool requires administrator privileges on the DNS-343 for retrieving free space left.\rUsage:\n Launch application Enters administrator credentials Press GET button  Screenshots \nDNS-343 Monitor (Idle)\n\nDNS-343 Monitor (Searching)\n\nDNS-343 Monitor (Usage)\nDownload You can download DNS-343 Monitor by clicking on the following links:\n DNS-343 Monitor v1.1.33 (win32 portable) (111 downloads)  DNS-343 Monitor v1.1.33 (win32 Setup) (126 downloads)  DNS-343 Monitor v1.1.33 (x64 portable) (122 downloads)  DNS-343 Monitor v1.1.33 (x64 Setup) (113 downloads)   Compatible with DNS343Monitor is only available for the Windows platform and has been tested with the following version of Windows:\n Windows XP Windows Vista Windows 7  Minimum system requirements  100% PC compatible Pentium II, 300 mhz 256 Mb RAM 30 Mb free disk space Administrator rights (for installation)  License DNS-343 Monitor is being distributed as Freeware for personal, commercial use, non-profit organization, and educational purpose. It may be included with CD-ROM/DVD-ROM distributions. You are NOT allowed to make a charge for distributing this Software (either for profit or merely to recover your media and distribution costs) whether as a stand-alone product, or as part of a compilation or anthology, nor to use it for supporting your business or customers. It may be distributed freely on any website or through any other distribution mechanism, as long as no part of it is changed in any way.\nThe full license is available here.\nHistory of changes Version 1.1 - First public release\n",
    "ref": "/dns-343-monitor-easily-monitors-disk-space-on-your-dns-343-nas/"
  },{
    "title": "MSBuildReorder: How to reorder a Visual Studio build log for easy reading",
    "date": "",
    "description": "",
    "body": "MSBuildReorder Please note that MSBuildReorder source code is now moved to GitHub. Source code can be downloaded from the project\u0026rsquo;s GitHub page.\rMSBuildReorder is a tool for \u0026ldquo;reordering\u0026rdquo; (buildorder) a multi-process C++ build log. It allows a developer to convert the build log as if it was generated with a single processor.\nBuilding a solution that has multiple projects can quickly become bloated with too many lines that are not related to each other. For this reason, finding the actual cause of a build fail is harder than it should be. MSBuildReorder is able to read the log and reorder the projects in a sequential order.\nIt\u0026rsquo;s main features are:\n Supports both msbuild and Visual Studio 2008 (and over) build logs. Useful for Continuous Integration (CI) servers (build servers). Allows quicker identification of the project that caused an error. Command line support.  **Usage:\n**msbuildreorder [input file] [output file]\n input file: Path to the input build log file to reorder. output file: Path of the output reordered build log file.  Screenshot \nmsbuildreorder screenshot\nDownload You can download MSBuildReorder by clicking on the following link:\nPlease note that download links are now deprecated. Binary version of msbuildreorder can be downloaded directly from the project\u0026rsquo;s GitHub page.\rSample The following shows a multi-process build log compiling libprotobuf. MSBuildReorder can be used to reorder the multi-threaded log on a Continuous Integration (CI) server.\n11\u0026gt;------ Build started: Project: libprotobuf, Configuration: Debug_MT_DLL Win32 ------ 22\u0026gt;------ Build started: Project: gtest, Configuration: Debug_MT_DLL Win32 ------ 33\u0026gt;------ Build started: Project: libprotobuf-lite, Configuration: Debug_MT_DLL Win32 ------ 42\u0026gt;Compiling... 53\u0026gt;Compiling... 61\u0026gt;Compiling... 73\u0026gt;cl : Command line warning D9035 : option \u0026#39;Wp64\u0026#39; has been deprecated and will be removed in a future release 81\u0026gt;cl : Command line warning D9035 : option \u0026#39;Wp64\u0026#39; has been deprecated and will be removed in a future release 92\u0026gt;gtest-all.cc 103\u0026gt;coded_stream.cc 111\u0026gt;coded_stream.cc 123\u0026gt;common.cc 131\u0026gt;common.cc 141\u0026gt;descriptor.cc 153\u0026gt;extension_set.cc 163\u0026gt;generated_message_util.cc 173\u0026gt;message_lite.cc 182\u0026gt;Creating library... 193\u0026gt;once.cc 202\u0026gt;Build log was saved at \u0026#34;file://c:\\Temp\\protobuf\\src\\gtest\\msvc\\protobuf\\Debug_MT_DLL\\gtest\\BuildLog.htm\u0026#34; 212\u0026gt;gtest - 0 error(s), 0 warning(s) 224\u0026gt;------ Build started: Project: gtest_main, Configuration: Debug_MT_DLL Win32 ------ 234\u0026gt;Compiling... 244\u0026gt;gtest_main.cc 251\u0026gt;descriptor.pb.cc 263\u0026gt;repeated_field.cc 273\u0026gt;stringprintf.cc 284\u0026gt;Creating library... 294\u0026gt;Build log was saved at \u0026#34;file://c:\\Temp\\protobuf\\src\\gtest\\msvc\\protobuf\\Debug_MT_DLL\\gtest_main\\BuildLog.htm\u0026#34; 304\u0026gt;gtest_main - 0 error(s), 0 warning(s) 311\u0026gt;descriptor_database.cc 323\u0026gt;wire_format_lite.cc 333\u0026gt;zero_copy_stream.cc 343\u0026gt;zero_copy_stream_impl_lite.cc 351\u0026gt;dynamic_message.cc 363\u0026gt;atomicops_internals_x86_msvc.cc 373\u0026gt;Generating Code... 381\u0026gt;extension_set.cc 393\u0026gt;Creating library... 403\u0026gt;Build log was saved at \u0026#34;file://c:\\Temp\\protobuf\\src\\vsprojects\\protobuf\\Debug_MT_DLL\\libprotobuf-lite\\BuildLog.htm\u0026#34; 413\u0026gt;libprotobuf-lite - 0 error(s), 1 warning(s) 421\u0026gt;extension_set_heavy.cc 431\u0026gt;generated_message_reflection.cc 441\u0026gt;generated_message_util.cc 451\u0026gt;gzip_stream.cc 461\u0026gt;importer.cc 471\u0026gt;message.cc 481\u0026gt;message_lite.cc 491\u0026gt;once.cc 501\u0026gt;parser.cc 511\u0026gt;printer.cc 521\u0026gt;reflection_ops.cc 531\u0026gt;repeated_field.cc 541\u0026gt;service.cc 551\u0026gt;Generating Code... 561\u0026gt;Compiling... 571\u0026gt;stringprintf.cc 581\u0026gt;structurally_valid.cc 591\u0026gt;strutil.cc 601\u0026gt;substitute.cc 611\u0026gt;text_format.cc 621\u0026gt;tokenizer.cc 631\u0026gt;unknown_field_set.cc 641\u0026gt;wire_format.cc 651\u0026gt;wire_format_lite.cc 661\u0026gt;zero_copy_stream.cc 671\u0026gt;zero_copy_stream_impl.cc 681\u0026gt;zero_copy_stream_impl_lite.cc 691\u0026gt;atomicops_internals_x86_msvc.cc 701\u0026gt;Generating Code... 711\u0026gt;Creating library... 721\u0026gt;Build log was saved at \u0026#34;file://c:\\Temp\\protobuf\\src\\vsprojects\\protobuf\\Debug_MT_DLL\\libprotobuf\\BuildLog.htm\u0026#34; 731\u0026gt;libprotobuf - 0 error(s), 1 warning(s) 745\u0026gt;------ Build started: Project: libprotoc, Configuration: Debug_MT_DLL Win32 ------ 755\u0026gt;Compiling... 765\u0026gt;cl : Command line warning D9035 : option \u0026#39;Wp64\u0026#39; has been deprecated and will be removed in a future release 775\u0026gt;code_generator.cc 785\u0026gt;command_line_interface.cc 795\u0026gt;cpp_enum.cc 805\u0026gt;cpp_enum_field.cc 815\u0026gt;cpp_extension.cc 825\u0026gt;cpp_field.cc 835\u0026gt;cpp_file.cc 845\u0026gt;cpp_generator.cc 855\u0026gt;cpp_helpers.cc 865\u0026gt;cpp_message.cc 875\u0026gt;cpp_message_field.cc 885\u0026gt;cpp_primitive_field.cc 895\u0026gt;cpp_service.cc 905\u0026gt;cpp_string_field.cc 915\u0026gt;java_enum.cc 925\u0026gt;java_enum_field.cc 935\u0026gt;java_extension.cc 945\u0026gt;java_field.cc 955\u0026gt;java_file.cc 965\u0026gt;java_generator.cc 975\u0026gt;Generating Code... 985\u0026gt;Compiling... 995\u0026gt;java_helpers.cc 1005\u0026gt;java_message.cc 1015\u0026gt;java_message_field.cc 1025\u0026gt;java_primitive_field.cc 1035\u0026gt;java_service.cc 1045\u0026gt;java_string_field.cc 1055\u0026gt;plugin.cc 1065\u0026gt;plugin.pb.cc 1075\u0026gt;python_generator.cc 1085\u0026gt;subprocess.cc 1095\u0026gt;zip_writer.cc 1105\u0026gt;java_doc_comment.cc 1115\u0026gt;Generating Code... 1125\u0026gt;Creating library... 1135\u0026gt;Build log was saved at \u0026#34;file://c:\\Temp\\protobuf\\src\\vsprojects\\protobuf\\Debug_MT_DLL\\libprotoc\\BuildLog.htm\u0026#34; 1145\u0026gt;libprotoc - 0 error(s), 1 warning(s) 1156\u0026gt;------ Build started: Project: protoc, Configuration: Debug_MT_DLL Win32 ------ 1167\u0026gt;------ Build started: Project: test_plugin, Configuration: Debug_MT_DLL Win32 ------ 1177\u0026gt;test_plugin : warning PRJ0009 : Build log could not be opened for writing. 1187\u0026gt;Make sure that the file is not open by another process and is not write-protected. 1196\u0026gt;Compiling... 1207\u0026gt;Compiling... 1216\u0026gt;cl : Command line warning D9035 : option \u0026#39;Wp64\u0026#39; has been deprecated and will be removed in a future release 1226\u0026gt;main.cc 1237\u0026gt;cl : Command line warning D9035 : option \u0026#39;Wp64\u0026#39; has been deprecated and will be removed in a future release 1247\u0026gt;file.cc 1257\u0026gt;mock_code_generator.cc 1266\u0026gt;Compiling manifest to resources... 1276\u0026gt;Microsoft (R) Windows (R) Resource Compiler Version 6.1.7600.16385 1286\u0026gt;Copyright (C) Microsoft Corporation. All rights reserved. 1296\u0026gt;Linking... 1306\u0026gt;main.obj : warning LNK4099: PDB \u0026#39;vc90.pdb\u0026#39; was not found with \u0026#39;.\\Debug\\main.obj\u0026#39; or at \u0026#39;c:\\Temp\\protobuf\\src\\vsprojects\\Debug\\vc90.pdb\u0026#39;; linking object as if no debug info 1317\u0026gt;test_plugin.cc 1327\u0026gt;Generating Code... 1337\u0026gt;Compiling manifest to resources... 1347\u0026gt;Microsoft (R) Windows (R) Resource Compiler Version 6.1.7600.16385 1357\u0026gt;Copyright (C) Microsoft Corporation. All rights reserved. 1367\u0026gt;Linking... 1376\u0026gt;Embedding manifest... 1386\u0026gt;Microsoft (R) Windows (R) Resource Compiler Version 6.1.7600.16385 1396\u0026gt;Copyright (C) Microsoft Corporation. All rights reserved. 1406\u0026gt;Build log was saved at \u0026#34;file://c:\\Temp\\protobuf\\src\\vsprojects\\Debug\\BuildLog.htm\u0026#34; 1416\u0026gt;protoc - 0 error(s), 2 warning(s) 1427\u0026gt;Embedding manifest... 1438\u0026gt;------ Build started: Project: lite-test, Configuration: Debug_MT_DLL Win32 ------ 1448\u0026gt;Generating unittest_lite.pb.{h,cc}... 1457\u0026gt;Microsoft (R) Windows (R) Resource Compiler Version 6.1.7600.16385 1467\u0026gt;Copyright (C) Microsoft Corporation. All rights reserved. 1477\u0026gt;Build log was saved at \u0026#34;file://c:\\Temp\\protobuf\\src\\vsprojects\\Debug\\BuildLog.htm\u0026#34; 1487\u0026gt;test_plugin - 0 error(s), 2 warning(s) 1498\u0026gt;Generating unittest_import_public_lite.pb.{h,cc}... 1508\u0026gt;Generating unittest_import_lite.pb.{h,cc}... 1518\u0026gt;Compiling... 1528\u0026gt;cl : Command line warning D9035 : option \u0026#39;Wp64\u0026#39; has been deprecated and will be removed in a future release 1538\u0026gt;lite_unittest.cc 1548\u0026gt;test_util_lite.cc 1558\u0026gt;unittest_import_lite.pb.cc 1568\u0026gt;unittest_import_public_lite.pb.cc 1578\u0026gt;unittest_lite.pb.cc 1588\u0026gt;Generating Code... 1598\u0026gt;Compiling manifest to resources... 1608\u0026gt;Microsoft (R) Windows (R) Resource Compiler Version 6.1.7600.16385 1618\u0026gt;Copyright (C) Microsoft Corporation. All rights reserved. 1628\u0026gt;Linking... 1638\u0026gt;Embedding manifest... 1648\u0026gt;Microsoft (R) Windows (R) Resource Compiler Version 6.1.7600.16385 1658\u0026gt;Copyright (C) Microsoft Corporation. All rights reserved. 1668\u0026gt;Build log was saved at \u0026#34;file://c:\\Temp\\protobuf\\src\\vsprojects\\DebugLite\\BuildLog.htm\u0026#34; 1678\u0026gt;lite-test - 0 error(s), 1 warning(s) 1689\u0026gt;------ Build started: Project: tests, Configuration: Debug_MT_DLL Win32 ------ 1699\u0026gt;Generating unittest_import_public.pb.{h,cc}... 1709\u0026gt;Generating unittest_mset.pb.{h,cc}... 1719\u0026gt;Generating unittest.pb.{h,cc}... 1729\u0026gt;Generating unittest_import.pb.{h,cc}... 1739\u0026gt;Generating unittest_optimize_for.pb.{h,cc}... 1749\u0026gt;Generating unittest_no_generic_services.pb.{h,cc}... 1759\u0026gt;Generating unittest_lite_imports_nonlite.pb.{h,cc}... 1769\u0026gt;Generating unittest_embed_optimize_for.pb.{h,cc}... 1779\u0026gt;Generating unittest_custom_options.pb.{h,cc}... 1789\u0026gt;Generating cpp_test_bad_identifiers.pb.{h,cc}... 1799\u0026gt;Compiling... 1809\u0026gt;cl : Command line warning D9035 : option \u0026#39;Wp64\u0026#39; has been deprecated and will be removed in a future release 1819\u0026gt;coded_stream_unittest.cc 1829\u0026gt;command_line_interface_unittest.cc 1839\u0026gt;common_unittest.cc 1849\u0026gt;c:\\temp\\protobuf\\src\\src\\google\\protobuf\\stubs\\common_unittest.cc(75) : warning C4307: \u0026#39;+\u0026#39; : integral constant overflow 1859\u0026gt;c:\\temp\\protobuf\\src\\src\\google\\protobuf\\stubs\\common_unittest.cc(76) : warning C4307: \u0026#39;+\u0026#39; : integral constant overflow 1869\u0026gt;cpp_bootstrap_unittest.cc 1879\u0026gt;cpp_plugin_unittest.cc 1889\u0026gt;cpp_test_bad_identifiers.pb.cc 1899\u0026gt;cpp_unittest.cc 1909\u0026gt;descriptor_database_unittest.cc 1919\u0026gt;descriptor_unittest.cc 1929\u0026gt;dynamic_message_unittest.cc 1939\u0026gt;extension_set_unittest.cc 1949\u0026gt;generated_message_reflection_unittest.cc 1959\u0026gt;googletest.cc 1969\u0026gt;importer_unittest.cc 1979\u0026gt;java_doc_comment_unittest.cc 1989\u0026gt;java_plugin_unittest.cc 1999\u0026gt;message_unittest.cc 2009\u0026gt;once_unittest.cc 2019\u0026gt;parser_unittest.cc 2029\u0026gt;printer_unittest.cc 2039\u0026gt;Generating Code... 2049\u0026gt;Compiling... 2059\u0026gt;python_plugin_unittest.cc 2069\u0026gt;reflection_ops_unittest.cc 2079\u0026gt;repeated_field_reflection_unittest.cc 2089\u0026gt;repeated_field_unittest.cc 2099\u0026gt;stringprintf_unittest.cc 2109\u0026gt;structurally_valid_unittest.cc 2119\u0026gt;strutil_unittest.cc 2129\u0026gt;template_util_unittest.cc 2139\u0026gt;test_util.cc 2149\u0026gt;text_format_unittest.cc 2159\u0026gt;tokenizer_unittest.cc 2169\u0026gt;type_traits_unittest.cc 2179\u0026gt;c:\\temp\\protobuf\\src\\src\\google\\protobuf\\stubs\\type_traits_unittest.cc(295) : warning C4181: qualifier applied to reference type; ignored 2189\u0026gt;c:\\temp\\protobuf\\src\\src\\google\\protobuf\\stubs\\type_traits_unittest.cc(296) : warning C4181: qualifier applied to reference type; ignored 2199\u0026gt;c:\\temp\\protobuf\\src\\src\\google\\protobuf\\stubs\\type_traits_unittest.cc(297) : warning C4181: qualifier applied to reference type; ignored 2209\u0026gt;unittest.pb.cc 2219\u0026gt;unittest_custom_options.pb.cc 2229\u0026gt;unittest_embed_optimize_for.pb.cc 2239\u0026gt;unittest_import.pb.cc 2249\u0026gt;unittest_import_public.pb.cc 2259\u0026gt;unittest_lite_imports_nonlite.pb.cc 2269\u0026gt;unittest_mset.pb.cc 2279\u0026gt;unittest_no_generic_services.pb.cc 2289\u0026gt;Generating Code... 2299\u0026gt;Compiling... 2309\u0026gt;unittest_optimize_for.pb.cc 2319\u0026gt;unknown_field_set_unittest.cc 2329\u0026gt;wire_format_unittest.cc 2339\u0026gt;zero_copy_stream_unittest.cc 2349\u0026gt;Generating Code... 2359\u0026gt;Compiling manifest to resources... 2369\u0026gt;Microsoft (R) Windows (R) Resource Compiler Version 6.1.7600.16385 2379\u0026gt;Copyright (C) Microsoft Corporation. All rights reserved. 2389\u0026gt;Linking... 2399\u0026gt;Embedding manifest... 2409\u0026gt;Microsoft (R) Windows (R) Resource Compiler Version 6.1.7600.16385 2419\u0026gt;Copyright (C) Microsoft Corporation. All rights reserved. 2429\u0026gt;Build log was saved at \u0026#34;file://c:\\Temp\\protobuf\\src\\vsprojects\\Debug\\BuildLog.htm\u0026#34; 2439\u0026gt;tests - 0 error(s), 6 warning(s) 244========== Build: 9 succeeded, 0 failed, 0 up-to-date, 0 skipped ==========  Reordered build log:\n1\u0026gt;------ Build started: Project: libprotobuf, Configuration: Debug_MT_DLL Win32 ------\r1\u0026gt;Compiling...\r1\u0026gt;cl : Command line warning D9035 : option \u0026#39;Wp64\u0026#39; has been deprecated and will be removed in a future release\r1\u0026gt;coded_stream.cc\r1\u0026gt;common.cc\r1\u0026gt;descriptor.cc\r1\u0026gt;descriptor.pb.cc\r1\u0026gt;descriptor_database.cc\r1\u0026gt;dynamic_message.cc\r1\u0026gt;extension_set.cc\r1\u0026gt;extension_set_heavy.cc\r1\u0026gt;generated_message_reflection.cc\r1\u0026gt;generated_message_util.cc\r1\u0026gt;gzip_stream.cc\r1\u0026gt;importer.cc\r1\u0026gt;message.cc\r1\u0026gt;message_lite.cc\r1\u0026gt;once.cc\r1\u0026gt;parser.cc\r1\u0026gt;printer.cc\r1\u0026gt;reflection_ops.cc\r1\u0026gt;repeated_field.cc\r1\u0026gt;service.cc\r1\u0026gt;Generating Code...\r1\u0026gt;Compiling...\r1\u0026gt;stringprintf.cc\r1\u0026gt;structurally_valid.cc\r1\u0026gt;strutil.cc\r1\u0026gt;substitute.cc\r1\u0026gt;text_format.cc\r1\u0026gt;tokenizer.cc\r1\u0026gt;unknown_field_set.cc\r1\u0026gt;wire_format.cc\r1\u0026gt;wire_format_lite.cc\r1\u0026gt;zero_copy_stream.cc\r1\u0026gt;zero_copy_stream_impl.cc\r1\u0026gt;zero_copy_stream_impl_lite.cc\r1\u0026gt;atomicops_internals_x86_msvc.cc\r1\u0026gt;Generating Code...\r1\u0026gt;Creating library...\r1\u0026gt;Build log was saved at \u0026#34;file://c:\\Temp\\protobuf\\src\\vsprojects\\protobuf\\Debug_MT_DLL\\libprotobuf\\BuildLog.htm\u0026#34;\r1\u0026gt;libprotobuf - 0 error(s), 1 warning(s)\r2\u0026gt;------ Build started: Project: gtest, Configuration: Debug_MT_DLL Win32 ------\r2\u0026gt;Compiling...\r2\u0026gt;gtest-all.cc\r2\u0026gt;Creating library...\r2\u0026gt;Build log was saved at \u0026#34;file://c:\\Temp\\protobuf\\src\\gtest\\msvc\\protobuf\\Debug_MT_DLL\\gtest\\BuildLog.htm\u0026#34;\r2\u0026gt;gtest - 0 error(s), 0 warning(s)\r3\u0026gt;------ Build started: Project: libprotobuf-lite, Configuration: Debug_MT_DLL Win32 ------\r3\u0026gt;Compiling...\r3\u0026gt;cl : Command line warning D9035 : option \u0026#39;Wp64\u0026#39; has been deprecated and will be removed in a future release\r3\u0026gt;coded_stream.cc\r3\u0026gt;common.cc\r3\u0026gt;extension_set.cc\r3\u0026gt;generated_message_util.cc\r3\u0026gt;message_lite.cc\r3\u0026gt;once.cc\r3\u0026gt;repeated_field.cc\r3\u0026gt;stringprintf.cc\r3\u0026gt;wire_format_lite.cc\r3\u0026gt;zero_copy_stream.cc\r3\u0026gt;zero_copy_stream_impl_lite.cc\r3\u0026gt;atomicops_internals_x86_msvc.cc\r3\u0026gt;Generating Code...\r3\u0026gt;Creating library...\r3\u0026gt;Build log was saved at \u0026#34;file://c:\\Temp\\protobuf\\src\\vsprojects\\protobuf\\Debug_MT_DLL\\libprotobuf-lite\\BuildLog.htm\u0026#34;\r3\u0026gt;libprotobuf-lite - 0 error(s), 1 warning(s)\r4\u0026gt;------ Build started: Project: gtest_main, Configuration: Debug_MT_DLL Win32 ------\r4\u0026gt;Compiling...\r4\u0026gt;gtest_main.cc\r4\u0026gt;Creating library...\r4\u0026gt;Build log was saved at \u0026#34;file://c:\\Temp\\protobuf\\src\\gtest\\msvc\\protobuf\\Debug_MT_DLL\\gtest_main\\BuildLog.htm\u0026#34;\r4\u0026gt;gtest_main - 0 error(s), 0 warning(s)\r5\u0026gt;------ Build started: Project: libprotoc, Configuration: Debug_MT_DLL Win32 ------\r5\u0026gt;Compiling...\r5\u0026gt;cl : Command line warning D9035 : option \u0026#39;Wp64\u0026#39; has been deprecated and will be removed in a future release\r5\u0026gt;code_generator.cc\r5\u0026gt;command_line_interface.cc\r5\u0026gt;cpp_enum.cc\r5\u0026gt;cpp_enum_field.cc\r5\u0026gt;cpp_extension.cc\r5\u0026gt;cpp_field.cc\r5\u0026gt;cpp_file.cc\r5\u0026gt;cpp_generator.cc\r5\u0026gt;cpp_helpers.cc\r5\u0026gt;cpp_message.cc\r5\u0026gt;cpp_message_field.cc\r5\u0026gt;cpp_primitive_field.cc\r5\u0026gt;cpp_service.cc\r5\u0026gt;cpp_string_field.cc\r5\u0026gt;java_enum.cc\r5\u0026gt;java_enum_field.cc\r5\u0026gt;java_extension.cc\r5\u0026gt;java_field.cc\r5\u0026gt;java_file.cc\r5\u0026gt;java_generator.cc\r5\u0026gt;Generating Code...\r5\u0026gt;Compiling...\r5\u0026gt;java_helpers.cc\r5\u0026gt;java_message.cc\r5\u0026gt;java_message_field.cc\r5\u0026gt;java_primitive_field.cc\r5\u0026gt;java_service.cc\r5\u0026gt;java_string_field.cc\r5\u0026gt;plugin.cc\r5\u0026gt;plugin.pb.cc\r5\u0026gt;python_generator.cc\r5\u0026gt;subprocess.cc\r5\u0026gt;zip_writer.cc\r5\u0026gt;java_doc_comment.cc\r5\u0026gt;Generating Code...\r5\u0026gt;Creating library...\r5\u0026gt;Build log was saved at \u0026#34;file://c:\\Temp\\protobuf\\src\\vsprojects\\protobuf\\Debug_MT_DLL\\libprotoc\\BuildLog.htm\u0026#34;\r5\u0026gt;libprotoc - 0 error(s), 1 warning(s)\r6\u0026gt;------ Build started: Project: protoc, Configuration: Debug_MT_DLL Win32 ------\r6\u0026gt;Compiling...\r6\u0026gt;cl : Command line warning D9035 : option \u0026#39;Wp64\u0026#39; has been deprecated and will be removed in a future release\r6\u0026gt;main.cc\r6\u0026gt;Compiling manifest to resources...\r6\u0026gt;Microsoft (R) Windows (R) Resource Compiler Version 6.1.7600.16385\r6\u0026gt;Copyright (C) Microsoft Corporation. All rights reserved.\r6\u0026gt;Linking...\r6\u0026gt;main.obj : warning LNK4099: PDB \u0026#39;vc90.pdb\u0026#39; was not found with \u0026#39;.\\Debug\\main.obj\u0026#39; or at \u0026#39;c:\\Temp\\protobuf\\src\\vsprojects\\Debug\\vc90.pdb\u0026#39;; linking object as if no debug info\r6\u0026gt;Embedding manifest...\r6\u0026gt;Microsoft (R) Windows (R) Resource Compiler Version 6.1.7600.16385\r6\u0026gt;Copyright (C) Microsoft Corporation. All rights reserved.\r6\u0026gt;Build log was saved at \u0026#34;file://c:\\Temp\\protobuf\\src\\vsprojects\\Debug\\BuildLog.htm\u0026#34;\r6\u0026gt;protoc - 0 error(s), 2 warning(s)\r7\u0026gt;------ Build started: Project: test_plugin, Configuration: Debug_MT_DLL Win32 ------\r7\u0026gt;test_plugin : warning PRJ0009 : Build log could not be opened for writing.\r7\u0026gt;Make sure that the file is not open by another process and is not write-protected.\r7\u0026gt;Compiling...\r7\u0026gt;cl : Command line warning D9035 : option \u0026#39;Wp64\u0026#39; has been deprecated and will be removed in a future release\r7\u0026gt;file.cc\r7\u0026gt;mock_code_generator.cc\r7\u0026gt;test_plugin.cc\r7\u0026gt;Generating Code...\r7\u0026gt;Compiling manifest to resources...\r7\u0026gt;Microsoft (R) Windows (R) Resource Compiler Version 6.1.7600.16385\r7\u0026gt;Copyright (C) Microsoft Corporation. All rights reserved.\r7\u0026gt;Linking...\r7\u0026gt;Embedding manifest...\r7\u0026gt;Microsoft (R) Windows (R) Resource Compiler Version 6.1.7600.16385\r7\u0026gt;Copyright (C) Microsoft Corporation. All rights reserved.\r7\u0026gt;Build log was saved at \u0026#34;file://c:\\Temp\\protobuf\\src\\vsprojects\\Debug\\BuildLog.htm\u0026#34;\r7\u0026gt;test_plugin - 0 error(s), 2 warning(s)\r8\u0026gt;------ Build started: Project: lite-test, Configuration: Debug_MT_DLL Win32 ------\r8\u0026gt;Generating unittest_lite.pb.{h,cc}...\r8\u0026gt;Generating unittest_import_public_lite.pb.{h,cc}...\r8\u0026gt;Generating unittest_import_lite.pb.{h,cc}...\r8\u0026gt;Compiling...\r8\u0026gt;cl : Command line warning D9035 : option \u0026#39;Wp64\u0026#39; has been deprecated and will be removed in a future release\r8\u0026gt;lite_unittest.cc\r8\u0026gt;test_util_lite.cc\r8\u0026gt;unittest_import_lite.pb.cc\r8\u0026gt;unittest_import_public_lite.pb.cc\r8\u0026gt;unittest_lite.pb.cc\r8\u0026gt;Generating Code...\r8\u0026gt;Compiling manifest to resources...\r8\u0026gt;Microsoft (R) Windows (R) Resource Compiler Version 6.1.7600.16385\r8\u0026gt;Copyright (C) Microsoft Corporation. All rights reserved.\r8\u0026gt;Linking...\r8\u0026gt;Embedding manifest...\r8\u0026gt;Microsoft (R) Windows (R) Resource Compiler Version 6.1.7600.16385\r8\u0026gt;Copyright (C) Microsoft Corporation. All rights reserved.\r8\u0026gt;Build log was saved at \u0026#34;file://c:\\Temp\\protobuf\\src\\vsprojects\\DebugLite\\BuildLog.htm\u0026#34;\r8\u0026gt;lite-test - 0 error(s), 1 warning(s)\r9\u0026gt;------ Build started: Project: tests, Configuration: Debug_MT_DLL Win32 ------\r9\u0026gt;Generating unittest_import_public.pb.{h,cc}...\r9\u0026gt;Generating unittest_mset.pb.{h,cc}...\r9\u0026gt;Generating unittest.pb.{h,cc}...\r9\u0026gt;Generating unittest_import.pb.{h,cc}...\r9\u0026gt;Generating unittest_optimize_for.pb.{h,cc}...\r9\u0026gt;Generating unittest_no_generic_services.pb.{h,cc}...\r9\u0026gt;Generating unittest_lite_imports_nonlite.pb.{h,cc}...\r9\u0026gt;Generating unittest_embed_optimize_for.pb.{h,cc}...\r9\u0026gt;Generating unittest_custom_options.pb.{h,cc}...\r9\u0026gt;Generating cpp_test_bad_identifiers.pb.{h,cc}...\r9\u0026gt;Compiling...\r9\u0026gt;cl : Command line warning D9035 : option \u0026#39;Wp64\u0026#39; has been deprecated and will be removed in a future release\r9\u0026gt;coded_stream_unittest.cc\r9\u0026gt;command_line_interface_unittest.cc\r9\u0026gt;common_unittest.cc\r9\u0026gt;c:\\temp\\protobuf\\src\\src\\google\\protobuf\\stubs\\common_unittest.cc(75) : warning C4307: \u0026#39;+\u0026#39; : integral constant overflow\r9\u0026gt;c:\\temp\\protobuf\\src\\src\\google\\protobuf\\stubs\\common_unittest.cc(76) : warning C4307: \u0026#39;+\u0026#39; : integral constant overflow\r9\u0026gt;cpp_bootstrap_unittest.cc\r9\u0026gt;cpp_plugin_unittest.cc\r9\u0026gt;cpp_test_bad_identifiers.pb.cc\r9\u0026gt;cpp_unittest.cc\r9\u0026gt;descriptor_database_unittest.cc\r9\u0026gt;descriptor_unittest.cc\r9\u0026gt;dynamic_message_unittest.cc\r9\u0026gt;extension_set_unittest.cc\r9\u0026gt;generated_message_reflection_unittest.cc\r9\u0026gt;googletest.cc\r9\u0026gt;importer_unittest.cc\r9\u0026gt;java_doc_comment_unittest.cc\r9\u0026gt;java_plugin_unittest.cc\r9\u0026gt;message_unittest.cc\r9\u0026gt;once_unittest.cc\r9\u0026gt;parser_unittest.cc\r9\u0026gt;printer_unittest.cc\r9\u0026gt;Generating Code...\r9\u0026gt;Compiling...\r9\u0026gt;python_plugin_unittest.cc\r9\u0026gt;reflection_ops_unittest.cc\r9\u0026gt;repeated_field_reflection_unittest.cc\r9\u0026gt;repeated_field_unittest.cc\r9\u0026gt;stringprintf_unittest.cc\r9\u0026gt;structurally_valid_unittest.cc\r9\u0026gt;strutil_unittest.cc\r9\u0026gt;template_util_unittest.cc\r9\u0026gt;test_util.cc\r9\u0026gt;text_format_unittest.cc\r9\u0026gt;tokenizer_unittest.cc\r9\u0026gt;type_traits_unittest.cc\r9\u0026gt;c:\\temp\\protobuf\\src\\src\\google\\protobuf\\stubs\\type_traits_unittest.cc(295) : warning C4181: qualifier applied to reference type; ignored\r9\u0026gt;c:\\temp\\protobuf\\src\\src\\google\\protobuf\\stubs\\type_traits_unittest.cc(296) : warning C4181: qualifier applied to reference type; ignored\r9\u0026gt;c:\\temp\\protobuf\\src\\src\\google\\protobuf\\stubs\\type_traits_unittest.cc(297) : warning C4181: qualifier applied to reference type; ignored\r9\u0026gt;unittest.pb.cc\r9\u0026gt;unittest_custom_options.pb.cc\r9\u0026gt;unittest_embed_optimize_for.pb.cc\r9\u0026gt;unittest_import.pb.cc\r9\u0026gt;unittest_import_public.pb.cc\r9\u0026gt;unittest_lite_imports_nonlite.pb.cc\r9\u0026gt;unittest_mset.pb.cc\r9\u0026gt;unittest_no_generic_services.pb.cc\r9\u0026gt;Generating Code...\r9\u0026gt;Compiling...\r9\u0026gt;unittest_optimize_for.pb.cc\r9\u0026gt;unknown_field_set_unittest.cc\r9\u0026gt;wire_format_unittest.cc\r9\u0026gt;zero_copy_stream_unittest.cc\r9\u0026gt;Generating Code...\r9\u0026gt;Compiling manifest to resources...\r9\u0026gt;Microsoft (R) Windows (R) Resource Compiler Version 6.1.7600.16385\r9\u0026gt;Copyright (C) Microsoft Corporation. All rights reserved.\r9\u0026gt;Linking...\r9\u0026gt;Embedding manifest...\r9\u0026gt;Microsoft (R) Windows (R) Resource Compiler Version 6.1.7600.16385\r9\u0026gt;Copyright (C) Microsoft Corporation. All rights reserved.\r9\u0026gt;Build log was saved at \u0026#34;file://c:\\Temp\\protobuf\\src\\vsprojects\\Debug\\BuildLog.htm\u0026#34;\r9\u0026gt;tests - 0 error(s), 6 warning(s)\r========== Build: 9 succeeded, 0 failed, 0 up-to-date, 0 skipped ==========\r Compatible with MSBuildReorder is only available for the Windows platform and has been tested with the following version of Windows:\n Windows XP Windows Vista Windows 7  Minimum system requirements  100% PC compatible Pentium II, 300 mhz 256 Mb RAM 5 Mb free disk space  License MSBuildReorder is being distributed as Freeware for personal, commercial use, non-profit organization, and educational purpose. It may be included with CD-ROM/DVD-ROM distributions. You are NOT allowed to make a charge for distributing this Software (either for profit or merely to recover your media and distribution costs) whether as a stand-alone product, or as part of a compilation or anthology, nor to use it for supporting your business or customers. It may be distributed freely on any website or through any other distribution mechanism, as long as no part of it is changed in any way.\nThe full license is available here.\nHistory of changes Version 1.0 - First public release\n",
    "ref": "/msbuildreorder-how-to-reorder-a-visual-studio-build-log-for-easy-reading/"
  },{
    "title": "OfficeReadOnly: How to open Microsoft Office documents as read-only",
    "date": "",
    "description": "",
    "body": "OfficeReadOnly OfficeReadOnly is a tool that allows a user to open any Office Documents as a Read-Only document directly from the File Explorer.\nIt\u0026rsquo;s main features are:\n Integrates into Windows File Explorer or the with the \u0026ldquo;Send to\u0026rdquo; folder. Supports Documents, Workbooks, Presentations and Diagrams. Supports both Microsoft Office 2003 (.doc) and Microsoft Office 2010 file extensions (.doc, and *.docx). Can be used from the command prompt.  Microsoft Office does not supports opening files as read-only when right-clicking a document from the File Explorer menu and it does not support opening file as read-only from the command prompt.\nOfficeReadOnly was created to solve this issue.\nThe only way to open a document read-only is to first open the appropriate application for the document and then use the \u0026ldquo;File\u0026rdquo; menu and select \u0026ldquo;Open\u0026rdquo;. Then, user has to browse to the actual file and change the opening mode from \u0026ldquo;Open\u0026rdquo; to \u0026ldquo;Open Read-Only\u0026rdquo; and finally click the file. That is a long process for a task that should be simpler.\nOfficeReadOnly makes it easy to open a document as read-only right from the File Explorer. Simply right-click a document and select \u0026ldquo;Open with Office Read-Only\u0026rdquo;.\nOfficeReadOnly also helps developers by keeping the file intact! Since OfficeReadOnly allows a user to open a file directly in read-only, it prevents the application from doing unintentional modifications to the file: every time a user opens an Office Document, the application will modify the document (without your knowledge) to change some meta-data. The meta-data change will happens even if you do not press \u0026ldquo;Save\u0026rdquo;. The only way to prevent this is to open the file as read-only.\n**Usage:\n**OfficeRO [inputfile]\nScreenshots \nOffice Read Only (context menu)\n\nOffice Read Only (send to menu)\n\nOffice Read Only (unsupported file)\nDownload You can download OfficeReadOnly by clicking on the following links:\n Office Read Only v1.2.40 (win32 portable) (132 downloads)  Office Read Only v1.2.40 (win32 Setup) (117 downloads)  Office Read Only v1.2.40 (x64 portable) (137 downloads)  Office Read Only v1.2.40 (x64 Setup) (161 downloads)   Compatible with OfficeReadOnly is only available for the Windows platform and has been tested with the following version of Windows:\n Windows XP Windows Vista Windows 7  Minimum system requirements  100% PC compatible Pentium II, 300 mhz 512 Mb RAM 5 Mb free disk space Administrator rights (for installation)  License OfficeReadOnly is being distributed as Freeware for personal, commercial use, non-profit organization, and educational purpose. It may be included with CD-ROM/DVD-ROM distributions. You are NOT allowed to make a charge for distributing this Software (either for profit or merely to recover your media and distribution costs) whether as a stand-alone product, or as part of a compilation or anthology, nor to use it for supporting your business or customers. It may be distributed freely on any website or through any other distribution mechanism, as long as no part of it is changed in any way.\nThe full license is available here.\nHistory of changes Version 1.2 - First public release\n",
    "ref": "/officereadonly-how-to-open-microsoft-office-documents-as-read-only/"
  },{
    "title": "bin2cpp: The easiest way to embed small files into a C++ executable",
    "date": "",
    "description": "",
    "body": "bin2cpp Please note that bin2cpp source code is now moved to GitHub. Source code can be downloaded from the project\u0026rsquo;s GitHub page.\rbin2cpp is a command line tool for embedding small files (like images, icons or raw data files) into a C++ executable.\nIt\u0026rsquo;s main features are:\n Easily converts small files as C++ source code for embedding into a C++ executable. Content extraction supported by a unique function call for each embedded file. Supports a multiple embedded files at once. Makes it harder for resource hacker to modify or steal the embedded files. No third party libraries required for retrieving the data of the embedded files.  bin2cpp is not implemented using executable resources. Instead, bin2cpp creates multiple function calls for retrieving the data which makes it harder to steal the executable\u0026rsquo;s content. It also makes it even harder to replace an existing resource of the executable.\nIt is designed to be easy to use by developers and to provide easy call functions to get access to the data of the embedded files.\nThe generated functions that reads and extracts the embedded content does not rely on external libraries so you don\u0026rsquo;t need to setup your projects to use any third party library to start using bin2cpp. All your embedded data can be accessed right away.\nUsage:\nbin2cpp [inputfile] [output folder] [header filename] [function identifier] [chunk size] [-override].\n inputfile: Path to the target file to embed in a C++ source code. output folder: Output path to create generated source code. ie: .\\generated_files\\ header filename: File name of the C++ Header file. ie: SplashScreen.h function identifier: Identifier of the function name that is used to get an instance of the file. ie: SplashScreen chunk size (optional): Size of each string segments. Defaults to 200] override (optional): Tells bin2cpp to over write the destination files.  Screenshots \nbin2cpp v1.3 Sample\n\nbin2cpp v1.3 Usage\nDownload You can download bin2cpp by clicking on the following links:\nPlease note that download links are now deprecated. Binary version of bin2cpp can be downloaded directly from the project\u0026rsquo;s GitHub page.\rCode sample Here are some C++ code samples for embedding a Visual Studio 2008 project file generated with the following command line:\nbin2cpp.exe bin2cppTest.vcproj outdir EmbededProjectFile.h Vcproj 250 -override\n1/** 2* This file was generated by 3* bin2cpp v1.3. 4* Copyright (C) 2013-2014 end2endzone.com. All rights reserved. 5* Do not modify this file. 6*/ 7#pragma once 8#include \u0026amp;lt;stddef.h\u0026amp;gt;9namespace bin2cpp 10{ 11 #ifndef BIN2CPP_EMBEDEDFILE_CLASS 12 #define BIN2CPP_EMBEDEDFILE_CLASS 13 class File 14 { 15 public: 16 virtual size_t getSize() = 0; 17 virtual size_t getSegmentSize() = 0; 18 virtual size_t getNumSegments() = 0; 19 virtual const char * getFilename() = 0; 20 virtual const char * getSegment(size_t iIndex, size_t \u0026amp; oLength) = 0; 21 virtual const char * getMd5() = 0; 22 virtual char * newBuffer() = 0; 23 virtual bool save(const char * iFilename) = 0; 24 }; 25 #endif 26 File \u0026amp; getVcprojFile(); 27}; //bin2cpp 1/** 2* This file was generated by 3* bin2cpp v1.3. 4* Copyright (C) 2013-2014 end2endzone.com. All rights reserved. 5* Do not modify this file. 6*/ 7#include \u0026#34;.\\EmbededProjectFile.h\u0026#34;8#include \u0026amp;lt;stdio.h\u0026amp;gt; //for FILE9#include \u0026amp;lt;string\u0026amp;gt; //for memcpy10namespace bin2cpp 11{ 12 class VcprojFile : public virtual bin2cpp::File 13 { 14 public: 15 VcprojFile() {} 16 ~VcprojFile() {} 17 virtual size_t getSize() { return 10314; } 18 virtual size_t getSegmentSize() { return 250; } 19 virtual size_t getNumSegments() { return 42; } 20 virtual const char * getFilename() { return \u0026#34;bin2cppTest.vcproj\u0026#34;; } 21 virtual const char * getSegment(size_t iIndex, size_t \u0026amp; oLength) 22 { 23 oLength = 0; 24 if (iIndex \u0026amp;gt;= getNumSegments()) 25 return NULL; 26 const char * buffer = NULL; 27 size_t index = 0; 28 oLength = getSegmentSize(); 29 buffer = \u0026#34;\u0026amp;lt;?xml version=\\\u0026#34;1.0\\\u0026#34;encoding=\\\u0026#34;Windows-1252\\\u0026#34;?\u0026amp;gt;\\x0d\\012\u0026amp;lt;VisualStudioProject\\x0d\\x0a\\tProjectType=\\\u0026#34;Visual C++\\\u0026#34;\\x0d\\x0a\\tVersion=\\\u0026#34;9,00\\\u0026#34;\\x0d\\x0a\\tName=\\\u0026#34;bin2cppTest\\\u0026#34;\\x0d\\x0a\\tProjectGUID=\\\u0026#34;{0E82011B-BFB8-45C4-97A9-89B46C2E3704}\\\u0026#34;\\x0d\\x0a\\tRootNamespace=\\\u0026#34;bin2cppTest\\\u0026#34;\\x0d\\x0a\\tKeyword=\\\u0026#34;Win32Proj\\\u0026#34;\\x0d\\x0a\\tTargetFr\u0026#34;; if (iIndex == index) return buffer; index++; 30 buffer = \u0026#34;ameworkVersion=\\\u0026#34;196613\\\u0026#34;\\x0d\\x0a\\t\u0026amp;gt;\\x0d\\x0a\\t\u0026amp;lt;Platforms\u0026amp;gt;\\x0d\\x0a\\t\\t\u0026amp;lt;Platform\\x0d\\x0a\\t\\t\\tName=\\\u0026#34;Win32\\\u0026#34;\\x0d\\x0a\\t\\t/\u0026amp;gt;\\x0d\\x0a\\t\\t\u0026amp;lt;Platform\\x0d\\x0a\\t\\t\\tName=\\\u0026#34;x64\\\u0026#34;\\x0d\\x0a\\t\\t/\u0026amp;gt;\\x0d\\x0a\\t\u0026amp;lt;/Platforms\u0026amp;gt;\\x0d\\x0a\\t\u0026amp;lt;ToolFiles\u0026amp;gt;\\x0d\\x0a\\t\u0026amp;lt;/ToolFiles\u0026amp;gt;\\x0d\\x0a\\t\u0026amp;lt;Configurations\u0026amp;gt;\\x0d\\x0a\\t\\t\u0026amp;lt;Configuration\\x0d\\x0a\\t\\t\\tName=\\\u0026#34;Debug|Win32\\\u0026#34;\\x0d\\x0a\\t\\t\\tOutputDirectory=\\\u0026#34;$(SolutionDir\u0026#34;; if (iIndex == index) return buffer; index++; 31 buffer = \u0026#34;)$(PlatformName)\\\\$(ConfigurationName)\\\u0026#34;\\x0d\\x0a\\t\\t\\tIntermediateDirectory=\\\u0026#34;$(PlatformName)\\\\$(ConfigurationName)\\\u0026#34;\\x0d\\x0a\\t\\t\\tConfigurationType=\\\u0026#34;1\\\u0026#34;\\x0d\\x0a\\t\\t\\tCharacterSet=\\\u0026#34;2\\\u0026#34;\\x0d\\x0a\\t\\t\\t\u0026amp;gt;\\x0d\\x0a\\t\\t\\t\u0026amp;lt;Tool\\x0d\\x0a\\t\\t\\t\\tName=\\\u0026#34;VCPreBuildEventTool\\\u0026#34;\\x0d\\x0a\\t\\t\\t\\tCommandLine=\\\u0026#34;call prebuild.bat $(Configuration\u0026#34;; if (iIndex == index) return buffer; index++; 32 buffer = \u0026#34;Name) $(PlatformName)\\\u0026#34;\\x0d\\x0a\\t\\t\\t/\u0026amp;gt;\\x0d\\x0a\\t\\t\\t\u0026amp;lt;Tool\\x0d\\x0a\\t\\t\\t\\tName=\\\u0026#34;VCCustomBuildTool\\\u0026#34;\\x0d\\x0a\\t\\t\\t/\u0026amp;gt;\\x0d\\x0a\\t\\t\\t\u0026amp;lt;Tool\\x0d\\x0a\\t\\t\\t\\tName=\\\u0026#34;VCXMLDataGeneratorTool\\\u0026#34;\\x0d\\x0a\\t\\t\\t/\u0026amp;gt;\\x0d\\x0a\\t\\t\\t\u0026amp;lt;Tool\\x0d\\x0a\\t\\t\\t\\tName=\\\u0026#34;VCWebServiceProxyGeneratorTool\\\u0026#34;\\x0d\\x0a\\t\\t\\t/\u0026amp;gt;\\x0d\\x0a\\t\\t\\t\u0026amp;lt;Tool\\x0d\\x0a\\t\\t\\t\\tName=\\\u0026#34;VCMIDLTool\\\u0026#34;\\x0d\\x0a\\t\\t\\t/\u0026amp;gt;\\x0d\\x0a\\t\\t\\t\u0026amp;lt;Tool\\x0d\\x0a\\t\\t\\t\\tName=\\\u0026#34;\u0026#34;; if (iIndex == index) return buffer; index++; 33 buffer = \u0026#34;VCCLCompilerTool\\\u0026#34;\\x0d\\x0a\\t\\t\\t\\tOptimization=\\\u0026#34;0\\\u0026#34;\\x0d\\x0a\\t\\t\\t\\tAdditionalIncludeDirectories=\\\u0026#34;\u0026#34;$(SolutionDir)libs\\\\gtest\\\\include\u0026#34;;\u0026#34;$(SolutionDir)gtesthelper\u0026#34;\\\u0026#34;\\x0d\\x0a\\t\\t\\t\\tPreprocessorDefinitions=\\\u0026#34;WIN32;_DEBUG;_CONSOLE;_CRT_SECURE_NO_WARNINGS\\\u0026#34;\\x0d\\x0a\\t\\t\\t\\tMinimalRe\u0026#34;; if (iIndex == index) return buffer; index++; 34 buffer = \u0026#34;build=\\\u0026#34;true\\\u0026#34;\\x0d\\x0a\\t\\t\\t\\tBasicRuntimeChecks=\\\u0026#34;3\\\u0026#34;\\x0d\\x0a\\t\\t\\t\\tRuntimeLibrary=\\\u0026#34;3\\\u0026#34;\\x0d\\x0a\\t\\t\\t\\tUsePrecompiledHeader=\\\u0026#34;0\\\u0026#34;\\x0d\\x0a\\t\\t\\t\\tWarningLevel=\\\u0026#34;3\\\u0026#34;\\x0d\\x0a\\t\\t\\t\\tDebugInformationFormat=\\\u0026#34;4\\\u0026#34;\\x0d\\x0a\\t\\t\\t/\u0026amp;gt;\\x0d\\x0a\\t\\t\\t\u0026amp;lt;Tool\\x0d\\x0a\\t\\t\\t\\tName=\\\u0026#34;VCManagedResourceCompilerTool\\\u0026#34;\\x0d\\x0a\\t\\t\\t/\u0026amp;gt;\\x0d\\x0a\\t\\t\\t\u0026amp;lt;Tool\\x0d\\x0a\\t\\t\\t\\tName=\\\u0026#34;VCResourceComp\u0026#34;; if (iIndex == index) return buffer; index++; 35 buffer = \u0026#34;ilerTool\\\u0026#34;\\x0d\\x0a\\t\\t\\t/\u0026amp;gt;\\x0d\\x0a\\t\\t\\t\u0026amp;lt;Tool\\x0d\\x0a\\t\\t\\t\\tName=\\\u0026#34;VCPreLinkEventTool\\\u0026#34;\\x0d\\x0a\\t\\t\\t/\u0026amp;gt;\\x0d\\x0a\\t\\t\\t\u0026amp;lt;Tool\\x0d\\x0a\\t\\t\\t\\tName=\\\u0026#34;VCLinkerTool\\\u0026#34;\\x0d\\x0a\\t\\t\\t\\tAdditionalDependencies=\\\u0026#34;vc90_$(ConfigurationName)_MT_DLL_$(PlatformName)_gtest.lib\\\u0026#34;\\x0d\\x0a\\t\\t\\t\\tLinkIncremental=\\\u0026#34;2\\\u0026#34;\\x0d\\x0a\\t\\t\\t\\tAdditionalLibraryDirectories=\\\u0026#34;\u0026amp;\u0026#34;; if (iIndex == index) return buffer; index++; 36 buffer = \u0026#34;quot;$(SolutionDir)libs\\\\gtest\\\\lib\u0026#34;\\\u0026#34;\\x0d\\x0a\\t\\t\\t\\tGenerateDebugInformation=\\\u0026#34;true\\\u0026#34;\\x0d\\x0a\\t\\t\\t\\tSubSystem=\\\u0026#34;1\\\u0026#34;\\x0d\\x0a\\t\\t\\t\\tTargetMachine=\\\u0026#34;1\\\u0026#34;\\x0d\\x0a\\t\\t\\t/\u0026amp;gt;\\x0d\\x0a\\t\\t\\t\u0026amp;lt;Tool\\x0d\\x0a\\t\\t\\t\\tName=\\\u0026#34;VCALinkTool\\\u0026#34;\\x0d\\x0a\\t\\t\\t/\u0026amp;gt;\\x0d\\x0a\\t\\t\\t\u0026amp;lt;Tool\\x0d\\x0a\\t\\t\\t\\tName=\\\u0026#34;VCManifestTool\\\u0026#34;\\x0d\\x0a\\t\\t\\t/\u0026amp;gt;\\x0d\\x0a\\t\\t\\t\u0026amp;lt;Tool\\x0d\\x0a\\t\\t\\t\\tName=\\\u0026#34;VCXDCMakeTool\\\u0026#34;\\x0d\\x0a\\t\u0026#34;; if (iIndex == index) return buffer; index++; 37 buffer = \u0026#34;\\t\\t/\u0026amp;gt;\\x0d\\x0a\\t\\t\\t\u0026amp;lt;Tool\\x0d\\x0a\\t\\t\\t\\tName=\\\u0026#34;VCBscMakeTool\\\u0026#34;\\x0d\\x0a\\t\\t\\t/\u0026amp;gt;\\x0d\\x0a\\t\\t\\t\u0026amp;lt;Tool\\x0d\\x0a\\t\\t\\t\\tName=\\\u0026#34;VCFxCopTool\\\u0026#34;\\x0d\\x0a\\t\\t\\t/\u0026amp;gt;\\x0d\\x0a\\t\\t\\t\u0026amp;lt;Tool\\x0d\\x0a\\t\\t\\t\\tName=\\\u0026#34;VCAppVerifierTool\\\u0026#34;\\x0d\\x0a\\t\\t\\t/\u0026amp;gt;\\x0d\\x0a\\t\\t\\t\u0026amp;lt;Tool\\x0d\\x0a\\t\\t\\t\\tName=\\\u0026#34;VCPostBuildEventTool\\\u0026#34;\\x0d\\x0a\\t\\t\\t\\tCommandLine=\\\u0026#34;\\\u0026#34;\\x0d\\x0a\\t\\t\\t/\u0026amp;gt;\\x0d\\x0a\\t\\t\u0026amp;lt;/Configuration\u0026amp;gt;\\x0d\\x0a\\t\\t\u0026amp;lt;Configuration\\x0d\\x0a\\t\\t\\tNa\u0026#34;; if (iIndex == index) return buffer; index++; 38 buffer = \u0026#34;me=\\\u0026#34;Debug|x64\\\u0026#34;\\x0d\\x0a\\t\\t\\tOutputDirectory=\\\u0026#34;$(SolutionDir)$(PlatformName)\\\\$(ConfigurationName)\\\u0026#34;\\x0d\\x0a\\t\\t\\tIntermediateDirectory=\\\u0026#34;$(PlatformName)\\\\$(ConfigurationName)\\\u0026#34;\\x0d\\x0a\\t\\t\\tConfigurationType=\\\u0026#34;1\\\u0026#34;\\x0d\\x0a\\t\\t\\tCharacterSet=\\\u0026#34;2\\\u0026#34;\\x0d\\x0a\\t\\t\\t\u0026amp;gt;\\x0d\\x0a\\t\\t\\t\u0026amp;lt;Tool\\x0d\\x0a\\t\\t\\t\\tName=\\\u0026#34;VCPreBuildEventTool\\\u0026#34;\\x0d\\x0a\\t\u0026#34;; if (iIndex == index) return buffer; index++; 39 buffer = \u0026#34;\\t\\t\\tCommandLine=\\\u0026#34;call prebuild.bat $(ConfigurationName) $(PlatformName)\\\u0026#34;\\x0d\\x0a\\t\\t\\t/\u0026amp;gt;\\x0d\\x0a\\t\\t\\t\u0026amp;lt;Tool\\x0d\\x0a\\t\\t\\t\\tName=\\\u0026#34;VCCustomBuildTool\\\u0026#34;\\x0d\\x0a\\t\\t\\t/\u0026amp;gt;\\x0d\\x0a\\t\\t\\t\u0026amp;lt;Tool\\x0d\\x0a\\t\\t\\t\\tName=\\\u0026#34;VCXMLDataGeneratorTool\\\u0026#34;\\x0d\\x0a\\t\\t\\t/\u0026amp;gt;\\x0d\\x0a\\t\\t\\t\u0026amp;lt;Tool\\x0d\\x0a\\t\\t\\t\\tName=\\\u0026#34;VCWebServiceProxyGeneratorTool\\\u0026#34;\\x0d\\x0a\\t\\t\\t/\u0026amp;gt;\\x0d\\x0a\\t\\t\\t\u0026amp;lt;Tool\\x0d\\x0a\\t\u0026#34;; if (iIndex == index) return buffer; index++; 40 buffer = \u0026#34;\\t\\t\\tName=\\\u0026#34;VCMIDLTool\\\u0026#34;\\x0d\\x0a\\t\\t\\t\\tTargetEnvironment=\\\u0026#34;3\\\u0026#34;\\x0d\\x0a\\t\\t\\t/\u0026amp;gt;\\x0d\\x0a\\t\\t\\t\u0026amp;lt;Tool\\x0d\\x0a\\t\\t\\t\\tName=\\\u0026#34;VCCLCompilerTool\\\u0026#34;\\x0d\\x0a\\t\\t\\t\\tOptimization=\\\u0026#34;0\\\u0026#34;\\x0d\\x0a\\t\\t\\t\\tAdditionalIncludeDirectories=\\\u0026#34;\u0026#34;$(SolutionDir)libs\\\\gtest\\\\include\u0026#34;;\u0026#34;$(SolutionDir)gtesthelper\u0026#34;\\\u0026#34;\\x0d\\x0a\\t\\t\\t\\tPreprocess\u0026#34;; if (iIndex == index) return buffer; index++; 41 buffer = \u0026#34;orDefinitions=\\\u0026#34;WIN32;_DEBUG;_CONSOLE;_CRT_SECURE_NO_WARNINGS\\\u0026#34;\\x0d\\x0a\\t\\t\\t\\tMinimalRebuild=\\\u0026#34;true\\\u0026#34;\\x0d\\x0a\\t\\t\\t\\tBasicRuntimeChecks=\\\u0026#34;3\\\u0026#34;\\x0d\\x0a\\t\\t\\t\\tRuntimeLibrary=\\\u0026#34;3\\\u0026#34;\\x0d\\x0a\\t\\t\\t\\tUsePrecompiledHeader=\\\u0026#34;0\\\u0026#34;\\x0d\\x0a\\t\\t\\t\\tWarningLevel=\\\u0026#34;3\\\u0026#34;\\x0d\\x0a\\t\\t\\t\\tDebugInformationFormat=\\\u0026#34;3\\\u0026#34;\\x0d\\x0a\\t\\t\\t/\u0026amp;gt;\\x0d\\x0a\\t\\t\\t\u0026amp;lt;Tool\\x0d\\x0a\\t\\t\\t\\tNam\u0026#34;; if (iIndex == index) return buffer; index++; 42 buffer = \u0026#34;e=\\\u0026#34;VCManagedResourceCompilerTool\\\u0026#34;\\x0d\\x0a\\t\\t\\t/\u0026amp;gt;\\x0d\\x0a\\t\\t\\t\u0026amp;lt;Tool\\x0d\\x0a\\t\\t\\t\\tName=\\\u0026#34;VCResourceCompilerTool\\\u0026#34;\\x0d\\x0a\\t\\t\\t/\u0026amp;gt;\\x0d\\x0a\\t\\t\\t\u0026amp;lt;Tool\\x0d\\x0a\\t\\t\\t\\tName=\\\u0026#34;VCPreLinkEventTool\\\u0026#34;\\x0d\\x0a\\t\\t\\t/\u0026amp;gt;\\x0d\\x0a\\t\\t\\t\u0026amp;lt;Tool\\x0d\\x0a\\t\\t\\t\\tName=\\\u0026#34;VCLinkerTool\\\u0026#34;\\x0d\\x0a\\t\\t\\t\\tAdditionalDependencies=\\\u0026#34;vc90_$(ConfigurationName)_MT_DLL_$(PlatformNa\u0026#34;; if (iIndex == index) return buffer; index++; 43 buffer = \u0026#34;me)_gtest.lib\\\u0026#34;\\x0d\\x0a\\t\\t\\t\\tLinkIncremental=\\\u0026#34;2\\\u0026#34;\\x0d\\x0a\\t\\t\\t\\tAdditionalLibraryDirectories=\\\u0026#34;\u0026#34;$(SolutionDir)libs\\\\gtest\\\\lib\u0026#34;\\\u0026#34;\\x0d\\x0a\\t\\t\\t\\tGenerateDebugInformation=\\\u0026#34;true\\\u0026#34;\\x0d\\x0a\\t\\t\\t\\tSubSystem=\\\u0026#34;1\\\u0026#34;\\x0d\\x0a\\t\\t\\t\\tTargetMachine=\\\u0026#34;17\\\u0026#34;\\x0d\\x0a\\t\\t\\t/\u0026amp;gt;\\x0d\\x0a\\t\\t\\t\u0026amp;lt;Tool\\x0d\\x0a\\t\\t\\t\\tName=\\\u0026#34;VCALinkTool\\\u0026#34;\\x0d\\x0a\\t\\t\\t/\u0026amp;gt;\\x0d\\x0a\\t\\t\\t\u0026amp;lt;\u0026#34;; if (iIndex == index) return buffer; index++; 44 buffer = \u0026#34;Tool\\x0d\\x0a\\t\\t\\t\\tName=\\\u0026#34;VCManifestTool\\\u0026#34;\\x0d\\x0a\\t\\t\\t/\u0026amp;gt;\\x0d\\x0a\\t\\t\\t\u0026amp;lt;Tool\\x0d\\x0a\\t\\t\\t\\tName=\\\u0026#34;VCXDCMakeTool\\\u0026#34;\\x0d\\x0a\\t\\t\\t/\u0026amp;gt;\\x0d\\x0a\\t\\t\\t\u0026amp;lt;Tool\\x0d\\x0a\\t\\t\\t\\tName=\\\u0026#34;VCBscMakeTool\\\u0026#34;\\x0d\\x0a\\t\\t\\t/\u0026amp;gt;\\x0d\\x0a\\t\\t\\t\u0026amp;lt;Tool\\x0d\\x0a\\t\\t\\t\\tName=\\\u0026#34;VCFxCopTool\\\u0026#34;\\x0d\\x0a\\t\\t\\t/\u0026amp;gt;\\x0d\\x0a\\t\\t\\t\u0026amp;lt;Tool\\x0d\\x0a\\t\\t\\t\\tName=\\\u0026#34;VCAppVerifierTool\\\u0026#34;\\x0d\\x0a\\t\\t\\t/\u0026amp;gt;\\x0d\\x0a\\t\\t\\t\u0026amp;lt;Tool\\x0d\\x0a\\t\\t\\t\\tName=\\\u0026#34;VCPostBuildEvent\u0026#34;; if (iIndex == index) return buffer; index++; 45 buffer = \u0026#34;Tool\\\u0026#34;\\x0d\\x0a\\t\\t\\t\\tCommandLine=\\\u0026#34;\\\u0026#34;\\x0d\\x0a\\t\\t\\t/\u0026amp;gt;\\x0d\\x0a\\t\\t\u0026amp;lt;/Configuration\u0026amp;gt;\\x0d\\x0a\\t\\t\u0026amp;lt;Configuration\\x0d\\x0a\\t\\t\\tName=\\\u0026#34;Release|Win32\\\u0026#34;\\x0d\\x0a\\t\\t\\tOutputDirectory=\\\u0026#34;$(SolutionDir)$(PlatformName)\\\\$(ConfigurationName)\\\u0026#34;\\x0d\\x0a\\t\\t\\tIntermediateDirectory=\\\u0026#34;$(PlatformName)\\\\$(ConfigurationName)\\\u0026#34;\\x0d\\x0a\\t\\t\\tConfiguratio\u0026#34;; if (iIndex == index) return buffer; index++; 46 buffer = \u0026#34;nType=\\\u0026#34;1\\\u0026#34;\\x0d\\x0a\\t\\t\\tCharacterSet=\\\u0026#34;2\\\u0026#34;\\x0d\\x0a\\t\\t\\tWholeProgramOptimization=\\\u0026#34;1\\\u0026#34;\\x0d\\x0a\\t\\t\\t\u0026amp;gt;\\x0d\\x0a\\t\\t\\t\u0026amp;lt;Tool\\x0d\\x0a\\t\\t\\t\\tName=\\\u0026#34;VCPreBuildEventTool\\\u0026#34;\\x0d\\x0a\\t\\t\\t\\tCommandLine=\\\u0026#34;call prebuild.bat $(ConfigurationName) $(PlatformName)\\\u0026#34;\\x0d\\x0a\\t\\t\\t/\u0026amp;gt;\\x0d\\x0a\\t\\t\\t\u0026amp;lt;Tool\\x0d\\x0a\\t\\t\\t\\tName=\\\u0026#34;VCCustomBuildTool\\\u0026#34;\\x0d\\x0a\\t\\t\\t/\u0026amp;gt;\\x0d\\x0a\\t\\t\\t\u0026amp;lt;Tool\\x0d\u0026#34;; if (iIndex == index) return buffer; index++; 47 buffer = \u0026#34;\\x0a\\t\\t\\t\\tName=\\\u0026#34;VCXMLDataGeneratorTool\\\u0026#34;\\x0d\\x0a\\t\\t\\t/\u0026amp;gt;\\x0d\\x0a\\t\\t\\t\u0026amp;lt;Tool\\x0d\\x0a\\t\\t\\t\\tName=\\\u0026#34;VCWebServiceProxyGeneratorTool\\\u0026#34;\\x0d\\x0a\\t\\t\\t/\u0026amp;gt;\\x0d\\x0a\\t\\t\\t\u0026amp;lt;Tool\\x0d\\x0a\\t\\t\\t\\tName=\\\u0026#34;VCMIDLTool\\\u0026#34;\\x0d\\x0a\\t\\t\\t/\u0026amp;gt;\\x0d\\x0a\\t\\t\\t\u0026amp;lt;Tool\\x0d\\x0a\\t\\t\\t\\tName=\\\u0026#34;VCCLCompilerTool\\\u0026#34;\\x0d\\x0a\\t\\t\\t\\tOptimization=\\\u0026#34;2\\\u0026#34;\\x0d\\x0a\\t\\t\\t\\tEnableIntrinsicFunctions=\\\u0026#34;true\\\u0026#34;\\x0d\\x0a\\t\\t\\t\\tAddit\u0026#34;; if (iIndex == index) return buffer; index++; 48 buffer = \u0026#34;ionalIncludeDirectories=\\\u0026#34;\u0026#34;$(SolutionDir)libs\\\\gtest\\\\include\u0026#34;;\u0026#34;$(SolutionDir)gtesthelper\u0026#34;\\\u0026#34;\\x0d\\x0a\\t\\t\\t\\tPreprocessorDefinitions=\\\u0026#34;WIN32;NDEBUG;_CONSOLE;_CRT_SECURE_NO_WARNINGS\\\u0026#34;\\x0d\\x0a\\t\\t\\t\\tRuntimeLibrary=\\\u0026#34;2\\\u0026#34;\\x0d\\x0a\\t\\t\\t\\tEnableFunctionLevelLinking=\\\u0026#34;true\\\u0026#34;\\x0d\\x0a\u0026#34;; if (iIndex == index) return buffer; index++; 49 buffer = \u0026#34;\\t\\t\\t\\tUsePrecompiledHeader=\\\u0026#34;0\\\u0026#34;\\x0d\\x0a\\t\\t\\t\\tWarningLevel=\\\u0026#34;3\\\u0026#34;\\x0d\\x0a\\t\\t\\t\\tDebugInformationFormat=\\\u0026#34;3\\\u0026#34;\\x0d\\x0a\\t\\t\\t/\u0026amp;gt;\\x0d\\x0a\\t\\t\\t\u0026amp;lt;Tool\\x0d\\x0a\\t\\t\\t\\tName=\\\u0026#34;VCManagedResourceCompilerTool\\\u0026#34;\\x0d\\x0a\\t\\t\\t/\u0026amp;gt;\\x0d\\x0a\\t\\t\\t\u0026amp;lt;Tool\\x0d\\x0a\\t\\t\\t\\tName=\\\u0026#34;VCResourceCompilerTool\\\u0026#34;\\x0d\\x0a\\t\\t\\t/\u0026amp;gt;\\x0d\\x0a\\t\\t\\t\u0026amp;lt;Tool\\x0d\\x0a\\t\\t\\t\\tName=\\\u0026#34;VCPreLinkEventTool\\\u0026#34;\\x0d\\x0a\\t\\t\\t/\u0026amp;gt;\\x0d\\x0a\u0026#34;; if (iIndex == index) return buffer; index++; 50 buffer = \u0026#34;\\t\\t\\t\u0026amp;lt;Tool\\x0d\\x0a\\t\\t\\t\\tName=\\\u0026#34;VCLinkerTool\\\u0026#34;\\x0d\\x0a\\t\\t\\t\\tAdditionalDependencies=\\\u0026#34;vc90_$(ConfigurationName)_MT_DLL_$(PlatformName)_gtest.lib\\\u0026#34;\\x0d\\x0a\\t\\t\\t\\tLinkIncremental=\\\u0026#34;1\\\u0026#34;\\x0d\\x0a\\t\\t\\t\\tAdditionalLibraryDirectories=\\\u0026#34;\u0026#34;$(SolutionDir)libs\\\\gtest\\\\lib\u0026#34;\\\u0026#34;\\x0d\\x0a\\t\\t\\t\\tGenerateDebugInforma\u0026#34;; if (iIndex == index) return buffer; index++; 51 buffer = \u0026#34;tion=\\\u0026#34;true\\\u0026#34;\\x0d\\x0a\\t\\t\\t\\tSubSystem=\\\u0026#34;1\\\u0026#34;\\x0d\\x0a\\t\\t\\t\\tOptimizeReferences=\\\u0026#34;2\\\u0026#34;\\x0d\\x0a\\t\\t\\t\\tEnableCOMDATFolding=\\\u0026#34;2\\\u0026#34;\\x0d\\x0a\\t\\t\\t\\tTargetMachine=\\\u0026#34;1\\\u0026#34;\\x0d\\x0a\\t\\t\\t/\u0026amp;gt;\\x0d\\x0a\\t\\t\\t\u0026amp;lt;Tool\\x0d\\x0a\\t\\t\\t\\tName=\\\u0026#34;VCALinkTool\\\u0026#34;\\x0d\\x0a\\t\\t\\t/\u0026amp;gt;\\x0d\\x0a\\t\\t\\t\u0026amp;lt;Tool\\x0d\\x0a\\t\\t\\t\\tName=\\\u0026#34;VCManifestTool\\\u0026#34;\\x0d\\x0a\\t\\t\\t/\u0026amp;gt;\\x0d\\x0a\\t\\t\\t\u0026amp;lt;Tool\\x0d\\x0a\\t\\t\\t\\tName=\\\u0026#34;VCXDCMakeTool\\\u0026#34;\\x0d\\x0a\\t\\t\\t/\u0026amp;gt;\\x0d\\x0a\\t\\t\\t\u0026#34;; if (iIndex == index) return buffer; index++; 52 buffer = \u0026#34;\u0026amp;lt;Tool\\x0d\\x0a\\t\\t\\t\\tName=\\\u0026#34;VCBscMakeTool\\\u0026#34;\\x0d\\x0a\\t\\t\\t/\u0026amp;gt;\\x0d\\x0a\\t\\t\\t\u0026amp;lt;Tool\\x0d\\x0a\\t\\t\\t\\tName=\\\u0026#34;VCFxCopTool\\\u0026#34;\\x0d\\x0a\\t\\t\\t/\u0026amp;gt;\\x0d\\x0a\\t\\t\\t\u0026amp;lt;Tool\\x0d\\x0a\\t\\t\\t\\tName=\\\u0026#34;VCAppVerifierTool\\\u0026#34;\\x0d\\x0a\\t\\t\\t/\u0026amp;gt;\\x0d\\x0a\\t\\t\\t\u0026amp;lt;Tool\\x0d\\x0a\\t\\t\\t\\tName=\\\u0026#34;VCPostBuildEventTool\\\u0026#34;\\x0d\\x0a\\t\\t\\t\\tCommandLine=\\\u0026#34;\\\u0026#34;\\x0d\\x0a\\t\\t\\t/\u0026amp;gt;\\x0d\\x0a\\t\\t\u0026amp;lt;/Configuration\u0026amp;gt;\\x0d\\x0a\\t\\t\u0026amp;lt;Configuration\\x0d\\x0a\\t\\t\\tName=\\\u0026#34;Relea\u0026#34;; if (iIndex == index) return buffer; index++; 53 buffer = \u0026#34;se|x64\\\u0026#34;\\x0d\\x0a\\t\\t\\tOutputDirectory=\\\u0026#34;$(SolutionDir)$(PlatformName)\\\\$(ConfigurationName)\\\u0026#34;\\x0d\\x0a\\t\\t\\tIntermediateDirectory=\\\u0026#34;$(PlatformName)\\\\$(ConfigurationName)\\\u0026#34;\\x0d\\x0a\\t\\t\\tConfigurationType=\\\u0026#34;1\\\u0026#34;\\x0d\\x0a\\t\\t\\tCharacterSet=\\\u0026#34;2\\\u0026#34;\\x0d\\x0a\\t\\t\\tWholeProgramOptimization=\\\u0026#34;1\\\u0026#34;\\x0d\\x0a\\t\\t\\t\u0026amp;gt;\\x0d\\x0a\\t\\t\\t\u0026amp;lt;Tool\\x0d\\x0a\\t\\t\\t\\tNam\u0026#34;; if (iIndex == index) return buffer; index++; 54 buffer = \u0026#34;e=\\\u0026#34;VCPreBuildEventTool\\\u0026#34;\\x0d\\x0a\\t\\t\\t\\tCommandLine=\\\u0026#34;call prebuild.bat $(ConfigurationName) $(PlatformName)\\\u0026#34;\\x0d\\x0a\\t\\t\\t/\u0026amp;gt;\\x0d\\x0a\\t\\t\\t\u0026amp;lt;Tool\\x0d\\x0a\\t\\t\\t\\tName=\\\u0026#34;VCCustomBuildTool\\\u0026#34;\\x0d\\x0a\\t\\t\\t/\u0026amp;gt;\\x0d\\x0a\\t\\t\\t\u0026amp;lt;Tool\\x0d\\x0a\\t\\t\\t\\tName=\\\u0026#34;VCXMLDataGeneratorTool\\\u0026#34;\\x0d\\x0a\\t\\t\\t/\u0026amp;gt;\\x0d\\x0a\\t\\t\\t\u0026amp;lt;Tool\\x0d\\x0a\\t\\t\\t\\tName=\\\u0026#34;VCWebServiceProxyGenerato\u0026#34;; if (iIndex == index) return buffer; index++; 55 buffer = \u0026#34;rTool\\\u0026#34;\\x0d\\x0a\\t\\t\\t/\u0026amp;gt;\\x0d\\x0a\\t\\t\\t\u0026amp;lt;Tool\\x0d\\x0a\\t\\t\\t\\tName=\\\u0026#34;VCMIDLTool\\\u0026#34;\\x0d\\x0a\\t\\t\\t\\tTargetEnvironment=\\\u0026#34;3\\\u0026#34;\\x0d\\x0a\\t\\t\\t/\u0026amp;gt;\\x0d\\x0a\\t\\t\\t\u0026amp;lt;Tool\\x0d\\x0a\\t\\t\\t\\tName=\\\u0026#34;VCCLCompilerTool\\\u0026#34;\\x0d\\x0a\\t\\t\\t\\tOptimization=\\\u0026#34;2\\\u0026#34;\\x0d\\x0a\\t\\t\\t\\tEnableIntrinsicFunctions=\\\u0026#34;true\\\u0026#34;\\x0d\\x0a\\t\\t\\t\\tAdditionalIncludeDirectories=\\\u0026#34;\u0026#34;$(SolutionDir)libs\\\\gtest\\\\inclu\u0026#34;; if (iIndex == index) return buffer; index++; 56 buffer = \u0026#34;de\u0026#34;;\u0026#34;$(SolutionDir)gtesthelper\u0026#34;\\\u0026#34;\\x0d\\x0a\\t\\t\\t\\tPreprocessorDefinitions=\\\u0026#34;WIN32;NDEBUG;_CONSOLE;_CRT_SECURE_NO_WARNINGS\\\u0026#34;\\x0d\\x0a\\t\\t\\t\\tRuntimeLibrary=\\\u0026#34;2\\\u0026#34;\\x0d\\x0a\\t\\t\\t\\tEnableFunctionLevelLinking=\\\u0026#34;true\\\u0026#34;\\x0d\\x0a\\t\\t\\t\\tUsePrecompiledHeader=\\\u0026#34;0\\\u0026#34;\\x0d\\x0a\\t\\t\\t\\tWarningLevel=\\\u0026#34;3\\\u0026#34;\\x0d\\x0a\\t\\t\\t\\tDebug\u0026#34;; if (iIndex == index) return buffer; index++; 57 buffer = \u0026#34;InformationFormat=\\\u0026#34;3\\\u0026#34;\\x0d\\x0a\\t\\t\\t/\u0026amp;gt;\\x0d\\x0a\\t\\t\\t\u0026amp;lt;Tool\\x0d\\x0a\\t\\t\\t\\tName=\\\u0026#34;VCManagedResourceCompilerTool\\\u0026#34;\\x0d\\x0a\\t\\t\\t/\u0026amp;gt;\\x0d\\x0a\\t\\t\\t\u0026amp;lt;Tool\\x0d\\x0a\\t\\t\\t\\tName=\\\u0026#34;VCResourceCompilerTool\\\u0026#34;\\x0d\\x0a\\t\\t\\t/\u0026amp;gt;\\x0d\\x0a\\t\\t\\t\u0026amp;lt;Tool\\x0d\\x0a\\t\\t\\t\\tName=\\\u0026#34;VCPreLinkEventTool\\\u0026#34;\\x0d\\x0a\\t\\t\\t/\u0026amp;gt;\\x0d\\x0a\\t\\t\\t\u0026amp;lt;Tool\\x0d\\x0a\\t\\t\\t\\tName=\\\u0026#34;VCLinkerTool\\\u0026#34;\\x0d\\x0a\\t\\t\\t\\tAdditionalDependencies\u0026#34;; if (iIndex == index) return buffer; index++; 58 buffer = \u0026#34;=\\\u0026#34;vc90_$(ConfigurationName)_MT_DLL_$(PlatformName)_gtest.lib\\\u0026#34;\\x0d\\x0a\\t\\t\\t\\tLinkIncremental=\\\u0026#34;1\\\u0026#34;\\x0d\\x0a\\t\\t\\t\\tAdditionalLibraryDirectories=\\\u0026#34;\u0026#34;$(SolutionDir)libs\\\\gtest\\\\lib\u0026#34;\\\u0026#34;\\x0d\\x0a\\t\\t\\t\\tGenerateDebugInformation=\\\u0026#34;true\\\u0026#34;\\x0d\\x0a\\t\\t\\t\\tSubSystem=\\\u0026#34;1\\\u0026#34;\\x0d\\x0a\\t\\t\\t\\tOptimizeReferences=\\\u0026#34;2\\\u0026#34;\\x0d\\x0a\\t\u0026#34;; if (iIndex == index) return buffer; index++; 59 buffer = \u0026#34;\\t\\t\\tEnableCOMDATFolding=\\\u0026#34;2\\\u0026#34;\\x0d\\x0a\\t\\t\\t\\tTargetMachine=\\\u0026#34;17\\\u0026#34;\\x0d\\x0a\\t\\t\\t/\u0026amp;gt;\\x0d\\x0a\\t\\t\\t\u0026amp;lt;Tool\\x0d\\x0a\\t\\t\\t\\tName=\\\u0026#34;VCALinkTool\\\u0026#34;\\x0d\\x0a\\t\\t\\t/\u0026amp;gt;\\x0d\\x0a\\t\\t\\t\u0026amp;lt;Tool\\x0d\\x0a\\t\\t\\t\\tName=\\\u0026#34;VCManifestTool\\\u0026#34;\\x0d\\x0a\\t\\t\\t/\u0026amp;gt;\\x0d\\x0a\\t\\t\\t\u0026amp;lt;Tool\\x0d\\x0a\\t\\t\\t\\tName=\\\u0026#34;VCXDCMakeTool\\\u0026#34;\\x0d\\x0a\\t\\t\\t/\u0026amp;gt;\\x0d\\x0a\\t\\t\\t\u0026amp;lt;Tool\\x0d\\x0a\\t\\t\\t\\tName=\\\u0026#34;VCBscMakeTool\\\u0026#34;\\x0d\\x0a\\t\\t\\t/\u0026amp;gt;\\x0d\\x0a\\t\\t\\t\u0026amp;lt;Tool\\x0d\\x0a\\t\\t\\t\\tName=\\\u0026#34;\u0026#34;; if (iIndex == index) return buffer; index++; 60 buffer = \u0026#34;VCFxCopTool\\\u0026#34;\\x0d\\x0a\\t\\t\\t/\u0026amp;gt;\\x0d\\x0a\\t\\t\\t\u0026amp;lt;Tool\\x0d\\x0a\\t\\t\\t\\tName=\\\u0026#34;VCAppVerifierTool\\\u0026#34;\\x0d\\x0a\\t\\t\\t/\u0026amp;gt;\\x0d\\x0a\\t\\t\\t\u0026amp;lt;Tool\\x0d\\x0a\\t\\t\\t\\tName=\\\u0026#34;VCPostBuildEventTool\\\u0026#34;\\x0d\\x0a\\t\\t\\t\\tCommandLine=\\\u0026#34;\\\u0026#34;\\x0d\\x0a\\t\\t\\t/\u0026amp;gt;\\x0d\\x0a\\t\\t\u0026amp;lt;/Configuration\u0026amp;gt;\\x0d\\x0a\\t\u0026amp;lt;/Configurations\u0026amp;gt;\\x0d\\x0a\\t\u0026amp;lt;References\u0026amp;gt;\\x0d\\x0a\\t\\t\u0026amp;lt;ProjectReference\\x0d\\x0a\\t\\t\\tReferencedProjectIdentifier=\\\u0026#34;{B97\u0026#34;; if (iIndex == index) return buffer; index++; 61 buffer = \u0026#34;26A09-6C1B-4427-AEB0-AF44C317C333}\\\u0026#34;\\x0d\\x0a\\t\\t\\tRelativePathToProject=\\\u0026#34;.\\\\gtesthelper\\\\gtesthelper.vcproj\\\u0026#34;\\x0d\\x0a\\t\\t/\u0026amp;gt;\\x0d\\x0a\\t\\t\u0026amp;lt;ProjectReference\\x0d\\x0a\\t\\t\\tReferencedProjectIdentifier=\\\u0026#34;{C831C897-220B-4A21-8BDB-FC1B9E9BA2DA}\\\u0026#34;\\x0d\\x0a\\t\\t\\tRelativePathToProject=\\\u0026#34;.\\\\bin2cpp\\\\bin2cpp.vcproj\\\u0026#34;\\x0d\u0026#34;; if (iIndex == index) return buffer; index++; 62 buffer = \u0026#34;\\x0a\\t\\t/\u0026amp;gt;\\x0d\\x0a\\t\u0026amp;lt;/References\u0026amp;gt;\\x0d\\x0a\\t\u0026amp;lt;Files\u0026amp;gt;\\x0d\\x0a\\t\\t\u0026amp;lt;Filter\\x0d\\x0a\\t\\t\\tName=\\\u0026#34;Source Files\\\u0026#34;\\x0d\\x0a\\t\\t\\tFilter=\\\u0026#34;cpp;c;cc;cxx;def;odl;idl;hpj;bat;asm;asmx\\\u0026#34;\\x0d\\x0a\\t\\t\\tUniqueIdentifier=\\\u0026#34;{4FC737F1-C7A5-4376-A066-2A32D752A2FF}\\\u0026#34;\\x0d\\x0a\\t\\t\\t\u0026amp;gt;\\x0d\\x0a\\t\\t\\t\u0026amp;lt;File\\x0d\\x0a\\t\\t\\t\\tRelativePath=\\\u0026#34;.\\\\main.cpp\\\u0026#34;\\x0d\\x0a\\t\\t\\t\\t\u0026amp;gt;\\x0d\\x0a\\t\\t\\t\u0026amp;lt;/File\u0026amp;gt;\\x0d\u0026#34;; if (iIndex == index) return buffer; index++; 63 buffer = \u0026#34;\\x0a\\t\\t\u0026amp;lt;/Filter\u0026amp;gt;\\x0d\\x0a\\t\\t\u0026amp;lt;Filter\\x0d\\x0a\\t\\t\\tName=\\\u0026#34;Header Files\\\u0026#34;\\x0d\\x0a\\t\\t\\tFilter=\\\u0026#34;h;hpp;hxx;hm;inl;inc;xsd\\\u0026#34;\\x0d\\x0a\\t\\t\\tUniqueIdentifier=\\\u0026#34;{93995380-89BD-4b04-88EB-625FBE52EBFB}\\\u0026#34;\\x0d\\x0a\\t\\t\\t\u0026amp;gt;\\x0d\\x0a\\t\\t\u0026amp;lt;/Filter\u0026amp;gt;\\x0d\\x0a\\t\\t\u0026amp;lt;Filter\\x0d\\x0a\\t\\t\\tName=\\\u0026#34;Resource Files\\\u0026#34;\\x0d\\x0a\\t\\t\\tFilter=\\\u0026#34;rc;ico;cur;bmp;dlg;rc2;rct;bin;rgs\u0026#34;; if (iIndex == index) return buffer; index++; 64 buffer = \u0026#34;;gif;jpg;jpeg;jpe;resx;tiff;tif;png;wav\\\u0026#34;\\x0d\\x0a\\t\\t\\tUniqueIdentifier=\\\u0026#34;{67DA6AB6-F800-4c08-8B7A-83BB121AAD01}\\\u0026#34;\\x0d\\x0a\\t\\t\\t\u0026amp;gt;\\x0d\\x0a\\t\\t\\t\u0026amp;lt;File\\x0d\\x0a\\t\\t\\t\\tRelativePath=\\\u0026#34;.\\\\prebuild.bat\\\u0026#34;\\x0d\\x0a\\t\\t\\t\\t\u0026amp;gt;\\x0d\\x0a\\t\\t\\t\u0026amp;lt;/File\u0026amp;gt;\\x0d\\x0a\\t\\t\u0026amp;lt;/Filter\u0026amp;gt;\\x0d\\x0a\\t\\t\u0026amp;lt;Filter\\x0d\\x0a\\t\\t\\tName=\\\u0026#34;Embeded Files\\\u0026#34;\\x0d\\x0a\\t\\t\\t\u0026amp;gt;\\x0d\\x0a\\t\\t\\t\u0026amp;lt;File\\x0d\\x0a\\t\\t\\t\\tRelativ\u0026#34;; if (iIndex == index) return buffer; index++; 65 buffer = \u0026#34;ePath=\\\u0026#34;.\\\\EmbededProjectFile.cpp\\\u0026#34;\\x0d\\x0a\\t\\t\\t\\t\u0026amp;gt;\\x0d\\x0a\\t\\t\\t\u0026amp;lt;/File\u0026amp;gt;\\x0d\\x0a\\t\\t\\t\u0026amp;lt;File\\x0d\\x0a\\t\\t\\t\\tRelativePath=\\\u0026#34;.\\\\EmbededProjectFile.h\\\u0026#34;\\x0d\\x0a\\t\\t\\t\\t\u0026amp;gt;\\x0d\\x0a\\t\\t\\t\u0026amp;lt;/File\u0026amp;gt;\\x0d\\x0a\\t\\t\\t\u0026amp;lt;File\\x0d\\x0a\\t\\t\\t\\tRelativePath=\\\u0026#34;.\\\\EmbededSplashScreen.cpp\\\u0026#34;\\x0d\\x0a\\t\\t\\t\\t\u0026amp;gt;\\x0d\\x0a\\t\\t\\t\u0026amp;lt;/File\u0026amp;gt;\\x0d\\x0a\\t\\t\\t\u0026amp;lt;File\\x0d\\x0a\\t\\t\\t\\tRelativePath=\\\u0026#34;.\\\\EmbededSplashScreen.\u0026#34;; if (iIndex == index) return buffer; index++; 66 buffer = \u0026#34;h\\\u0026#34;\\x0d\\x0a\\t\\t\\t\\t\u0026amp;gt;\\x0d\\x0a\\t\\t\\t\u0026amp;lt;/File\u0026amp;gt;\\x0d\\x0a\\t\\t\u0026amp;lt;/Filter\u0026amp;gt;\\x0d\\x0a\\t\\t\u0026amp;lt;Filter\\x0d\\x0a\\t\\t\\tName=\\\u0026#34;Tests\\\u0026#34;\\x0d\\x0a\\t\\t\\t\u0026amp;gt;\\x0d\\x0a\\t\\t\\t\u0026amp;lt;File\\x0d\\x0a\\t\\t\\t\\tRelativePath=\\\u0026#34;.\\\\TestExtraction.cpp\\\u0026#34;\\x0d\\x0a\\t\\t\\t\\t\u0026amp;gt;\\x0d\\x0a\\t\\t\\t\u0026amp;lt;/File\u0026amp;gt;\\x0d\\x0a\\t\\t\\t\u0026amp;lt;File\\x0d\\x0a\\t\\t\\t\\tRelativePath=\\\u0026#34;.\\\\TestExtraction.h\\\u0026#34;\\x0d\\x0a\\t\\t\\t\\t\u0026amp;gt;\\x0d\\x0a\\t\\t\\t\u0026amp;lt;/File\u0026amp;gt;\\x0d\\x0a\\t\\t\u0026amp;lt;/Filter\u0026amp;gt;\\x0d\\x0a\\t\\t\u0026amp;lt;Filter\\x0d\\x0a\\t\\t\\tName=\\\u0026#34;Test File\u0026#34;; if (iIndex == index) return buffer; index++; 67 buffer = \u0026#34;s\\\u0026#34;\\x0d\\x0a\\t\\t\\t\u0026amp;gt;\\x0d\\x0a\\t\\t\\t\u0026amp;lt;File\\x0d\\x0a\\t\\t\\t\\tRelativePath=\\\u0026#34;.\\\\splashscreen.png\\\u0026#34;\\x0d\\x0a\\t\\t\\t\\t\u0026amp;gt;\\x0d\\x0a\\t\\t\\t\u0026amp;lt;/File\u0026amp;gt;\\x0d\\x0a\\t\\t\u0026amp;lt;/Filter\u0026amp;gt;\\x0d\\x0a\\t\\t\u0026amp;lt;Filter\\x0d\\x0a\\t\\t\\tName=\\\u0026#34;Generated Files\\\u0026#34;\\x0d\\x0a\\t\\t\\t\u0026amp;gt;\\x0d\\x0a\\t\\t\\t\u0026amp;lt;Filter\\x0d\\x0a\\t\\t\\t\\tName=\\\u0026#34;Test Results\\\u0026#34;\\x0d\\x0a\\t\\t\\t\\t\u0026amp;gt;\\x0d\\x0a\\t\\t\\t\\t\u0026amp;lt;File\\x0d\\x0a\\t\\t\\t\\t\\tRelativePath=\\\u0026#34;.\\\\bin2cppTest.x64.debug.xml\\\u0026#34;\\x0d\\x0a\\t\\t\\t\\t\\t\u0026amp;gt;\\x0d\\x0a\\t\\t\\t\u0026#34;; if (iIndex == index) return buffer; index++; 68 buffer = \u0026#34;\\t\u0026amp;lt;/File\u0026amp;gt;\\x0d\\x0a\\t\\t\\t\\t\u0026amp;lt;File\\x0d\\x0a\\t\\t\\t\\t\\tRelativePath=\\\u0026#34;.\\\\bin2cppTest.x64.release.xml\\\u0026#34;\\x0d\\x0a\\t\\t\\t\\t\\t\u0026amp;gt;\\x0d\\x0a\\t\\t\\t\\t\u0026amp;lt;/File\u0026amp;gt;\\x0d\\x0a\\t\\t\\t\\t\u0026amp;lt;File\\x0d\\x0a\\t\\t\\t\\t\\tRelativePath=\\\u0026#34;.\\\\bin2cppTest.x86.debug.xml\\\u0026#34;\\x0d\\x0a\\t\\t\\t\\t\\t\u0026amp;gt;\\x0d\\x0a\\t\\t\\t\\t\u0026amp;lt;/File\u0026amp;gt;\\x0d\\x0a\\t\\t\\t\\t\u0026amp;lt;File\\x0d\\x0a\\t\\t\\t\\t\\tRelativePath=\\\u0026#34;.\\\\bin2cppTest.x86.release.xml\\\u0026#34;\\x0d\\x0a\\t\\t\\t\\t\\t\u0026amp;gt;\\x0d\\x0a\\t\\t\\t\\t\u0026amp;lt;/\u0026#34;; if (iIndex == index) return buffer; index++; 69 buffer = \u0026#34;File\u0026amp;gt;\\x0d\\x0a\\t\\t\\t\u0026amp;lt;/Filter\u0026amp;gt;\\x0d\\x0a\\t\\t\\t\u0026amp;lt;Filter\\x0d\\x0a\\t\\t\\t\\tName=\\\u0026#34;Test Files\\\u0026#34;\\x0d\\x0a\\t\\t\\t\\t\u0026amp;gt;\\x0d\\x0a\\t\\t\\t\\t\u0026amp;lt;File\\x0d\\x0a\\t\\t\\t\\t\\tRelativePath=\\\u0026#34;.\\\\bin2cppTest.vcproj.output.txt\\\u0026#34;\\x0d\\x0a\\t\\t\\t\\t\\t\u0026amp;gt;\\x0d\\x0a\\t\\t\\t\\t\u0026amp;lt;/File\u0026amp;gt;\\x0d\\x0a\\t\\t\\t\\t\u0026amp;lt;File\\x0d\\x0a\\t\\t\\t\\t\\tRelativePath=\\\u0026#34;.\\\\splashscreen.output.png\\\u0026#34;\\x0d\\x0a\\t\\t\\t\\t\\t\u0026amp;gt;\\x0d\\x0a\\t\\t\\t\\t\u0026amp;lt;/File\u0026amp;gt;\\x0d\\x0a\\t\\t\\t\u0026amp;lt;/Filter\u0026amp;gt;\\x0d\\x0a\\t\\t\u0026amp;lt;/Filte\u0026#34;; if (iIndex == index) return buffer; index++; 70 oLength = 64; 71 buffer = \u0026#34;r\u0026amp;gt;\\x0d\\x0a\\t\u0026amp;lt;/Files\u0026amp;gt;\\x0d\\x0a\\t\u0026amp;lt;Globals\u0026amp;gt;\\x0d\\x0a\\t\u0026amp;lt;/Globals\u0026amp;gt;\\x0d\\012\u0026amp;lt;/VisualStudioProject\u0026amp;gt;\\x0d\\x0a\u0026#34;; if (iIndex == index) return buffer; index++; 72 oLength = 0; 73 return NULL; 74 } 75 virtual const char * getMd5() { return \u0026#34;e9c559c6446954ced242de3c84e09454\u0026#34;; } 76 virtual char * newBuffer() 77 { 78 size_t size = getSize(); 79 char * buffer = new char[size]; 80 if (buffer == NULL) 81 return NULL; 82 size_t numSegments = getNumSegments(); 83 size_t segmentLength = 0; 84 size_t index = 0; 85 for(size_t i=0; i\u0026amp;lt;numSegments; i++) 86 { 87 const char * segmentBuffer = getSegment(i, segmentLength); 88 memcpy(\u0026amp;buffer[index], segmentBuffer, segmentLength); 89 index += segmentLength; 90 } 91 return buffer; 92 } 93 virtual bool save(const char * iFilename) 94 { 95 FILE * f = fopen(iFilename, \u0026#34;wb\u0026#34;); 96 if (!f) return false; 97 size_t numSegments = getNumSegments(); 98 size_t segmentLength = 0; 99 const char * buffer = NULL; 100 for(size_t i=0; i\u0026amp;lt;numSegments; i++) 101 { 102 buffer = getSegment(i, segmentLength); 103 fwrite(buffer, 1, segmentLength, f); 104 } 105 fclose(f); 106 return true; 107 } 108 }; 109 File \u0026amp; getVcprojFile() { static VcprojFile _instance; return _instance; } 110}; //bin2cpp Compatible with bin2cpp is only available for the Windows platform and has been tested with the following version of Windows:\n Windows XP Windows Vista Windows 7  Minimum system requirements  100% PC compatible Pentium II, 300 mhz 256 Mb RAM 1 Mb free disk space Administrator rights (for installation)  License bin2cpp is being distributed as Freeware for personal, commercial use, non-profit organization, and educational purpose. It may be included with CD-ROM/DVD-ROM distributions. You are NOT allowed to make a charge for distributing this Software (either for profit or merely to recover your media and distribution costs) whether as a stand-alone product, or as part of a compilation or anthology, nor to use it for supporting your business or customers. It may be distributed freely on any website or through any other distribution mechanism, as long as no part of it is changed in any way.\nThe full license is available here.\nHistory of changes Version 1.3 - First public release\n",
    "ref": "/bin2cpp-the-easiest-way-to-embed-small-files-into-a-c-executable/"
  },{
    "title": "How to photograph fireworks with a DSLR camera",
    "date": "",
    "description": "",
    "body": "Introduction Do you plan to take photographs of fireworks during the next few weeks? If so you might take a look at this article that explains how to properly shoot fireworks with a DSLR camera.\nGetting a nice firework picture is it not as simple as going outside, finding a firework display and starting to shoot bits of lights in the sky. There are things you can do to increase your chances of success or fine tune the end result.\nOf course, it is also temping to take picture of the fireworks with a decent phone or point \u0026amp; shoot camera if you have a \u0026ldquo;firework\u0026rdquo; option, but those kind of picture often comes out as grainy/noisy or worst blurry.\nIn this article, I will guide you to make the most stunning photography of fireworks with your DSLR camera.\nThat kind of event do not occurs pretty often. Roughly 1 or 2 times a year during summer depending where you live. That is why I have written this guide: so that next time you get outside hunting a firework display, you will be well documented and prepared for most situations.\nIn Québec, we have 2 holidays that are good opportunities to shoot fireworks which are Canada Day (Memorial Day), and St. Jean Baptiste Day. If you live near Montreal, you have access to the L\u0026rsquo;international des feux Loto-Québec (http://www.laronde.com/larondeen/linternational-des-feux/overview, previously http://internationaldesfeuxloto-quebec.com/en/) festival which is prefect for making spectacular photos.\nKeep up reading and be ready.\nNote If you simply want to see my photos, seek to the bottom of the article by clicking here.\rPrepare you gears Before ever start looking for the perfect holiday to go outside on a hunt, you need to get the minimum mandatory gears if you want to enjoy your experience or get decent results. Here is the list of the gears that you must have in your bag before leaving your house\u0026hellip;\nMandatory gears Tripod Manfrotto 190XPROB Tripod\nA tripod. This is the most important gear of all. Photographing fireworks usually requires pretty long exposure time. A nice shoot could take as long as 4 seconds. To get a crystal clear picture, you need to be steady as a rock.\nOn every perfect firework picture, you can see the light trail of the flare going away from the explosion and slowly falling down. Even the smallest change in the camera angle or the smallest movement would ruin the picture and leave you with bad trails.\nRemote shutter release Canon Remote Switch RS-60E3\nA remote trigger is also mandatory. You must have a remote trigger and there is no acceptable alternative. You can\u0026rsquo;t simply use the \u0026ldquo;delay\u0026rdquo; option on your camera. For most other photography project (like shooting waterfalls), using the \u0026ldquo;delay\u0026rdquo; option on your camera is often a good choice as an alternative to a remote trigger.\nHowever, when you are shooting fireworks, it is pretty hard to know when the burst will explode which mean you won\u0026rsquo;t be able to accurately predict when you have to start the delay. The length of each burst is also unpredictable which means that you can\u0026rsquo;t use \u0026ldquo;Shutter speed priority\u0026rdquo; to automatically close the shutter. You will have to physically press/release a button to close the shutter.\nIf you do not own a remote trigger, you could make one yourself. Here is a simple guide that I have written that could help you making your own remote trigger: DIY Remote trigger shutter release cable for your Canon DSLR camera\nA remote trigger is the only way to open the shutter on time (just before a firework pops) and close the shutter before another firework burst.\nUseful stuff Flashlight 9 LED Mini Flashlight\nIt is going to get dark pretty quickly. It is a good idea to bring with yourself a flashlight to be able to see your controls, levels or equipment in the dark. Today, most people have a decent flashlight on their phone but a dollar store flashlight is as good as any other.\nMasking tape Scotch Greener Masking Tape Basic Painting\nMasking tape is optional but having some can be useful. You can also use it to tape the focus ring to prevent accidental focus change to make sure it stays where it was set.\nTools you won\u0026rsquo;t need\n Filters Hoya 58.0mm PL-CIR filter\nEven if the fireworks are really bright, there is no need to bring filters. Simply use a narrower aperture (higher f number) to get the right exposition.\nPolarized filters are also not required. There is no need to filter out a specific angle of the light coming through your camera. I also do not know of any record of polarized fireworks burst or that looking at fireworks through a polarized filter would change its appearance.\nFlash Canon Speedlite Flash (600EX-RT)\nA flash is also not really required. There is no object close enough that would reflect the light of the flash back to the camera. Unless you plan on capturing people or the crowd while you are framing your shot, there is really no need for a flash.\nExpensive lenses Canon EF 70-200mm f2.8L USM Standard Lens\nYou do not require any professional lenses for shooting firework. The fireworks are bright enough in the sky so you do not need a specialized wide aperture lens (read below/wider than f3.5). If you are positioned with the crowd, there is few chance that you need a zoom lens unless you want to frame a specific area of the sky. I got my first firework shots with a standard 18-55mm lens and never had to zoom higher than 55mm. You can leave your 70-200mm at home.\nYou might want to bring a wide angle lens to capture the whole ending scene but that would be only required if you are really too close the show.\nGet on location early\n That might be the best advice I could give. The sooner you get on side the better.\nFireworks are really big social events. If you get there too late, the best view point might be already taken by viewers. There will be much people in the crowd and moving from one location to another for a better spot might be dangerous for your equipment 🙂\nIf you get there early, you might even find other photographers that would be willing to share their spot and even some helpful advice.\nYou need to get on site before it is too dark. If you get on site too late, you may miss important details like power lines that may not be noticeable in your viewfinder once the sun has sets.\nIt will also give you time you need to search the area for the best position.\nFind the best view point and keep it Find a location that offers a clean view. Watch out for trees, branches and power lines that could get in your frame if you adjust your view point once the show has started.\nThe best view point is not on the front line. Do not get too close to the show. Firework needs to be in front of you, not above you.\nThink about how the wind will affect your photos. You do not want the wind to blow in your direction. The smoke trails will quickly move between you and your subject and you will have to change position. Make sure you position yourself with the wind coming from your back.\nFind a location that could protect your equipment/setup. During this photoshoot, I was scared that people walking around my equipment would trip over and break my stuff. Make a perimeter around yourself to prevent people walking around your setup. You could also leave a sheet or blanket on the ground to identify your working zone. You could also use pool noodles on your tripod legs to mark anchor points. For theses shots, I positioned myself behind 3 recycle bins. This way I had only 2 sides of the perimeter to watch out for.\nAvoid light sources like street lights or the hot dog stand. Since you are taking long exposure pictures, these lights could overexpose your pictures or create flares.\nSetup you camera Focus to infinity Focus on infinity\nIf your lens has auto-focus, turn it off. It is best to use manual focus in this situation. The fireworks are far enough to set your lens to infinity.\nAs a personal suggestion, you should not trust the infinity symbol/mark on your lenses. The focus ring can sometimes moves \u0026ldquo;beyond infinity\u0026rdquo; which would make picture as bad as out of focus ones. This is because the infinity point can move depending on the ambient temperature which means that the infinity symbol position is set somewhere between the lens operating temperature range. It may not always be accurate for your situation.\nThe best method for adjusting your focus is still to search for a far away object and focus on it.\nSet camera in manual mode Canon SL1 Mode Dial to Manual\nThe only mode that can be used for photographing fireworks is the manual mode. Aperture priority cannot help in this situation for obvious reasons. Shutter priority mode is also not helpful. As explained before, there is no way to know how long a firework will last. Setting an average shutter speed of 3-4 seconds will either not completely capture the light trail or will capture part of the next one.\nLow ISO Canon SL1 ISO Selection\nSince you are capturing images over a perfect black background, noise can quickly become an issue. It will also be really perceptible. It will be easy to distinguish noise on dark areas so it is best to use a low ISO setting to reduce noise as much as possible.\nISO 100 is the recommended value to use.\nIn case your picture are underexposed, do not increase ISO to 200 but instead uses a wider aperture.\nUse a small aperture Canon SL1 aperture selection\nThe fireworks are bright enough in the sky to let you use a narrow aperture (higher f number). During your shooting session you will need to set the aperture in the range of f8 to f16. You can safely set your aperture to f11 at the beginning of the show and adjust as needed.\nSet camera to Bulb mode Canon SL1 Bulb Selection\nMost cameras now have a BULB mode. Bulb mode is a perfect candidate for this task. It allows you to have a variable shutter speed for each shots. In bulb mode, pressing the shutter button will open the shutter to start capturing light and will leave the shutter open as long as you press the shutter button. This is pretty convenient when you are trying to capture an event that you don\u0026rsquo;t know how long it will last.\nCanon SL1 Bulb Dial Selection\nThis mode is usually found at the end of your shutter speed range (slowest shutter speed). You can activate it by increasing the shutter speed higher/longer than 30 seconds. On many DSLR camera, the knob controls the shutter speed in manual mode so rolling it will increase the shutter speed and will usually get you to activate bulb mode.\nTurn off Image stabilization  (IS)\nImage Stabilizer Turned off\nSince you are using a tripod, turn off Image Stabilization (IS, Vibration Reduction on Nikon). Tripod and IS is always bad combination and you don\u0026rsquo;t need it. Leaving it on probably does more harm than good. IS mechanism works by feeling the vibration the lens from your hands and creates a counter \u0026ldquo;vibration\u0026rdquo; to reduce the effect on the final image. It is better to switch off IS to prevent your lens stabilization mechanism from trying to stabilize a stabilized image which would result in image vibration (camera shake).\nSome lens can successfully detect the use of a tripod and prevent adding more vibration to the equation but in doubt, just leave it off.\nOn Canon lens, the IS switch is usually located on the lens itself.\nSet your camera to RAW mode RAW image quality\nSince you will have to adapt to the situation, you may end up with a shot perfectly composed and aligned but which is underexposed or overexposed. To help you correct the situation, it is better to capture your images in RAW mode. Making corrections on RAW images does much less harm to the picture quality than it does in JPG because of the image\u0026rsquo;s compression.\nIf you do not have access to a RAW image editor, set your camera to shoot in RAW+JPG. You might only be able to make corrections on the JPG image but years later, when RAW image format will be mainstream, you may be proud to have the uncompressed RAW data to make the perfect corrections to get a better final result.\nSetup vivid color saturation Setting this mode is optional as it is only used during JPG image capture. If you are only shooting RAW, it does not have any impact on final result.\nHowever, if you are lucky and get the perfect ISO-aperture-shutter-speed combination, you would like to maximize the vivid color saturation effect of your fireworks.\nWait until the show begins Kaïn célèbre la Fête nationale à Saint-Jérôme\nFor some people, that\u0026rsquo;s the hardest part 🙂\nAdapt to the situation Obviously, all these hints are given a suggestions and starting point. You will have to adapt to the situation since every firework burst and show are different. Here\u0026rsquo;s a list of what to look out for during your shooting session\u0026hellip;\nDouble-check with firsts bursts Fireworks usually last at least 10 minutes but most can be as long as 30 minutes. You will have plenty of time to get the perfect picture during the second half of the show so use the first half of the show as practice and learning how to adjust yourself.\nCheck that lens is still focused During the few burst at the beginning of the show, take the time to verify if you are correctly focused on the infinity (if you are correctly focused on the firework).\nCheck on preview window for appropriate exposure During the firework show, the intensity or size of the fireworks will probably change. You might have to struggle finding the best exposure on demand (live). You will have to adapt to the situation to correct the exposure.\nLeave the ISO setting to 100.\nQuick Aperture Exposure compensation button With Main Dial\nConcentrate on the aperture to make corrections and adjust your exposure. If the image is too bright, reduce the aperture (increase the f number) and do not hesitate to go as low as f16 if it is required.\nCheck your histogram and your preview window for identifying overexposed areas. Most camera will show a black and white blinking area when part of a image is overexposed.\nFraming your shots and composition Take your time to check if you are correctly framed.\nIf you are a beginner, you should not really try to frame your shots or play with composition. You should just try to observe the sky. You will probably be busy enough trying to zoom in/out, focusing and finding the correct exposure. Simply try to capture the whole scene from the burst to the end of the explosion and that should be a good start. If the fireworks appears too small in your preview window, don\u0026rsquo;t worry, you can always crop your images later.\nIf you are a little more advanced, you can try to photograph the surrounding environment in your picture. Images look more dramatic if you can see the crowd, a river or a lake nearby in the field of view. A nice view of the city is always a winning bet but it can also increase the difficulty of finding the correct exposure because of multiple light source. Concentrate on your first goal which is capturing firework with a proper exposition and just have fun doing it.\nSave for the finale Checking the Battery Level\nThe show is almost going to its end. The finale is coming and it is going to be short. Are you prepared ? It is the best part of the show and the one that will require the most attention for capturing great firework images.\nMake sure you have enough\n Free space on your memory card. Battery power left.  How many stills you can shoot? You do not want to have to change your memory card and swap batteries during the finale. There is a good chance that changing your battery also means that you will loose your settings which is a bad thing during the finale. You might also have to disconnect the camera from the tripod which means that I will have to zoom and set focus again.\nOther considerations ? Take your time.\nFinal results Here are the final results of my firework images:\nEnjoy!\n                         ",
    "ref": "/how-to-photograph-fireworks-with-a-dslr-camera/"
  },{
    "title": "DIY Remote trigger shutter release cable for your Canon DSLR camera",
    "date": "",
    "description": "",
    "body": "Introduction I have been working on multiple projects since I bought my camera. Most of them are related to super telephoto shots, macrophotography. Other requires a very long exposures or even a bulb exposure modes.\nFor all these kind of photography, camera shake is your greatest enemy. You really need to reduce the shaking to a minimum. The first element I bought to reduce camera shake was a tripod but that wasn\u0026rsquo;t enough. When pressing the shutter button, a light shake was induced by my fingers and that would sometime ruin the image.\nFor solving this issue, most camera allows the user to set a delay for taking a picture. That is perfect alternative for situation where the scene you are photographing does not change a lot or is predictable like macrophotography or long exposures scenarios. However, it is not suitable for wild life super telephoto shots or when you need the bulb mode since you have to hold and release the shutter for the whole exposure.\nCanon sells a Remote Switch RS-60E3 which acts exactly like your shutter button, enabling halfway or complete pressing for adjusting auto-focus or activating the shutter to capture an image. It sells for 34$ (at the time of this writing) but it is only 2-ft long.\nSince the Canon version is not exactly what I needed, I though why not create one instead of buying it. In this article, I will show you how I built a DIY version of Canon\u0026rsquo;s remote shutter release cable for my Canon DSLR camera.\nOn most Canon cameras, you can make a DIY remote trigger version by connecting a simple 2.5mm stereo plug into your camera and shorting the longest pin with one of the shortest pin.\nMaking one of these is a simple task. I decided to use the DIY way because I get the opportunity to build the device with more flexibility than the original with a longer cable. At the same time, it is much more satisfying since the build cost will be smaller than buying the real device which is normally the opposite.\nProject data Equipment The material for this project is as follows:\n 2 momentary switches. At least 5 ft of 3-wire cable. A small project box A 2.5 mm male stereo audio plug  Switches \nBlack and red momentary switches\nSwitches can be any type you want as long as its a momentary switch (normally opened, push to close). I do recommend to have different colors for assigning auto-focus and shutter buttons to a wire color. I used these switches from eBay. They are cheap and are ready for mounting to a hard surface.\nCable \n20 feet telephone extension cord\nYou can use any type of cable as long as it have at least 3 colored wires. you basically have to extend the connections of the 2.5 mm plug. I decided to go with a 20 feet phone cable because it is cheap and easily available. Make sure the cable is not too rough and can bent without too much force because you do not want to move your camera while you are pulling or raising your trigger.\nProject box \nCrazy glue box\nThe project box is used for the switches. It can be anything as long as you can drill holes big enough for mounting the switches on. It also has to be small enough to be held in one hand. I decided to use a super glue container which is the perfect size for fitting in my hands.\nOther material         768x576\n960x720\n960x720   768x576\n960x720\n960x720   768x432\n1024x576\n1280x720\n1280x720   768x576\n960x720\n960x720   768x576\n960x720\n960x720   768x576\n960x720\n960x720    Total cost of the project This project is really cheap and can be completed with less than 10$.\nHere is the detailed price of each items:\n 4.00$ - Switches 1.25$ - Cable 1.00$ - Project box 2.00$ - Audio plug  Total cost: $8.25\n The cost of usual items such as screws and glue is not included in the cost of the project.  Preparation time The whole project can be completed in 3 hours.\nThe preparation time is simple. It requires you to evaluate the feasibility of the project by testing the functionality of the remote trigger on your camera. You want to know the behavior of your camera before beginning everything else!\nThis project also requires you to have soldering skills so your mileage may vary. The duration of this project may change depending on how much you are comfortable with a soldering iron.\nBuilding steps Construction steps are very simple. Screw, wire everything up, solder and enjoy.\nTesting the remote trigger on your camera This is the first step and allows you to verify if your camera will properly react to the auto-focus and shutter commands.\nUse the audio plug and take off the protective cover of the 2.5 mm stereo plug leaving the connectors naked and connect it into your camera. Use a small wire or a metal object and short-circuit (connect) the longest pin with one of the shortest pin for half a second. If you are afraid of breaking something, you can use the multimeter set to \u0026ldquo;Continuity\u0026rdquo; and connect the probes to each pins. One pin should activate the auto-focus feature and let you ear the easily recognizable beeping sound. The other should activate the shutter and trigger the camera to take a photo.\nSoldering the audio plug I do recommend that you start with soldering of the audio plug to the cable. This is the easiest part and can be completed quickly.\nTake off the protective cap of the audio plug leaving the pins exposed. Pass the cable through the protective cap so that once finished, you can put the cap back on the audio plug.\nCut 3 pieces of 1/8 inch (each) from the heat shrink tubing. Insert a piece of tubing over each wire that we are about to solder: black, red and green.\nLocate the black wire of the cable. This is the ground wire. Skin a small amount of the cable (1/8 inch) and solder to the ground connector of the audio plug which is the longest pin.\nLocate the red wire. This cable will trigger the shutter. Solder the wire to the left pin of the plug.\nSolder the green wire (last) to the right pin of the plug. This will trigger the auto-focus of your camera.\nCut the yellow wire. You won\u0026rsquo;t need it.\nPut the heat shrink tubing over each soldered section to protect the circuit.\nIf you have issues finding which pin are what, refer to the following image:\n\nAudio plug 2.5 mm pins usage\nDrilling Next you have to drill two holes in the project box to insert the switches. Take your time to look for the best location for inserting your switches. I made my holes at a 90 degrees angle so that I could activate auto-focus with my index and activate the shutter with my thumb.\nA third hole is also required at the bottom of the box to insert the cable.\nIf you project box is too fragile, you may have to drill many times the same hole using bigger and bigger drill bits. Another option is to use your soldering iron to melt holes in the plastic.\nWiring Take your phone cable and insert the other end into the project box and tie a knot to prevent the wire from pulling on the switches solder joints. You can also put a small amount of hot glue on the knot inside the box for the same purpose.\nSoldering the switches\n\nRemote trigger auto-focus button\n\nRemote trigger shutter button\nIn this section, you will solder the wires to the switches. The next set of instructions will assume that you want the red switch to trigger the shutter.\nThe ground wire (black) must be shared between the two switches. Take a short wire (preferably black) and solder one end to the black wire to make a Y shape. Solder each endings to a pin of each switch. The pins of the switch does not have a polarity which means that any pins can be used.\nTake the red wire and solder the wire to the remaining pins of the red switch (shutter button). Do the same with the green wire and solder to the last pin of the black button (auto-focus button).\nPlease note that in the pictures above, I had to use a red wire to make the Y shape since I didn\u0026rsquo;t had any black wire.\rMounting That should be obvious\u0026hellip;\nFinal Result\nHere is the final result:\n\nDIY Remote trigger shutter release cable for your Canon DSLR camera\nMade anything differently? I do not think that I would make anything differently. Everything is pretty much like the way I wanted.\nNotes none\n",
    "ref": "/diy-remote-trigger-shutter-release-cable-for-your-canon-dslr-camera/"
  },{
    "title": "Recommended modifications to the Avistar Elite .46 ARF by Great Planes",
    "date": "",
    "description": "",
    "body": "Introduction I recently bought an Avistar Elite .46 ARF by Great Planes for flying with a flight instructor at my local hobby club. Before we went to the club and start flying, he and I (mostly he) made some adjustments to the plane for getting the perfect trainer for me. Basically, I changed some settings to get better results from the stock options.\nHere are all the modifications that I did to make this trainer the perfect plane.\nModifications Small battery pack \nAvistar Elite battery socket replacement\nThe plane is equipped with a 4x AA battery pack for powering the receiver and the servos. The provided alkaline batteries are also no-name. That combination is in my opinion a little risky knowing that some receiver like the Spektrum can cut completely if the total voltage drops too low (I think its 4.8v but not quite sure). At full speed and during aerobatics, all the servos are stimulated and they can draw more than 1A of power during a small amount of time. I have tested the batteries at 1A and the voltage drop dangerously low.\nThe solution to this issue was to change the battery pack for a bigger one. I used a 6x AA pack equipped with 5 NiMH batteries (total of 6 volts). I\u0026rsquo;ve tested the setup at 1A and the voltage is steady like a rock.\nBattery holder \nAvistar Elite with battery pack installed\nThe stock battery is held in place at the bottom of the plane with a velcro strap. It is not easy to access and remove the batteries with my big hands is harder than it should be.\nSince I changed the battery pack, the space at the bottom was now too narrow to store the new battery pack and I had to improvise a new way for holding the pack in place. I decided to squeeze the battery pack in a piece of foam hold in place with a wooden plate. That method revealed to be a quick and easy way to install or take off the pack for charging.\nHere is a picture of the foam holder without the battery pack:\n\nAvistar Elite without battery pack installed\nFuel tank \nAvistar Elite fuel tank\nIn my opinion, the fuel tank is too much loose in the fuel compartment to be left as-is. Since the plane is a trainer, it must support hard landings, or quick maneuvers that could move the fuel tank and considerably change the center of gravity.\nThere is a reasonable explanation to this: the plane can be converted to an electric plane easily (the instructions are also available on the official web site of the Avistar Elite. The fuselage must than be big enough to hold a fuel tank (which is higher but shorter) or the recommended 3350mAh electric battery (which is thinner but longer).\nTo solve the issue, I glued a small piece of balsa wood behind the fuel tank as a lock mechanism. It is not restrictive and I am still able to reach or remove the fuel tank from the fuselage.\nPropeller \nAvistar Elite default properller\nThe stock propeller is a 12x5 black piece of plastic. It is so thin that it can be bent with my fingers. I doubt it can survive a hard landing and it will break as soon as it hits the ground instead of resisting to the impact and stopping the motor.\nSince the club I joined does not have an paved runway, I do have to take off and land on a grass surface which is not always perfectly flat. The best option for this is to try to clear as much space as possible between the propeller and the ground.\nFor these reasons, I decided to change the propeller for a 11x7 which is shorter and thicker but roughly gives the same performance. It is a lot stronger and it survived all of my hard landing (except one\u0026hellip; I\u0026rsquo;m not perfect!)\nThis type of props is cheap (low price) but made with high quality plastic. Each one can be bought for only 3-4$.\nFront wheel \nAvistar Elite replacement wheel\nThe same thing applies with the front wheel. The stock 2¼\u0026quot; wheel is not bad and does its job. However, since I wanted to clear as much space as possible with the ground, I decided to go for a bigger front wheel and installed a 2¾\u0026quot; wheel.\nElevator Tail \nAvistar Elite tail view\nThe assembly of the elevator tail and the rudder is a good idea but lacks rigidity. When assembled with the suggested method, the elevation tail can move left and right and that is something I cannot trust.\nIf you follow the assembly guide, it is actually really easy to assemble the elevator tail and the rudder to the fuselage: You slide the horizontal tail through the fuselage and align the horizontal tail\u0026rsquo;s groove with the fuselage. Then you slide the rudder down the fuselage, through the elevator tail groove, back trough the fuselage and you secure everything with 2 bolts.\nThis method secures all the tail parts with each other but it does not prevent the tail from moving. To solve this problem, I simply glued the horizontal tail with the fuselage using epoxy. Here is a close up of the result:\n\nAvistar Elite Tail close up view\nThis choice is preventing me from dissembling the tail after a crash to make repairs to the push rods or another kind of modifications but I prefer it that way.\nWings \nAvistar Elite black wing stripes\nI am a beginner pilot. The bottom side of the wings are completely white and the top side of the wings are mostly white with both front tips covered with red Monokote. I find them really hard to see in the sky. I had much difficulties trying to distinguish if the plane was rolling left or right when looking at them from below.\nI modified the appearance of the bottom side of the wings and added two black Monokote stripes to each ends of the wing. The stripes are 9 inches long which makes the plane less attractive but now the rolls are far more easy to distinguish in the sky.\nSilicone exhaust deflector \nAvistar Elite Silicone exhaust deflector\nThe plane does not comes pre-equiped with a silicon exhaust deflector. Flying without a deflector is a mess because the side of the fuselage ends up full of oil. Simply add a deflector helps the plane stay clean and last longer. At the same time, the rubber extension is prefect for putting a cap to prevent any fuel leaks while the plane is stored.\nFinal note These are all the modifications I have done to this plane to make it the perfect motorized trainer. Over time, I didn\u0026rsquo;t had to change anything to this setup and I am quite pleased to see the results. This plane fly smoothly and I enjoy flying it.\nI am not a professional and I all these modifications are done as a suggestion only. Feel free to comment on changes I should make or things that you would go on a different route because I am always happy to see what bright ideas others could come up with.\n",
    "ref": "/recommended-modifications-to-the-avistar-elite-46-arf-by-great-planes/"
  },{
    "title": "Review of the Avistar Elite .46 ARF by Great Planes – The perfect motorized trainer for beginners",
    "date": "",
    "description": "",
    "body": "Introduction At the beginning of the 2014 season, I decided to join a local RC club to get to know good experienced people that would give me advices on the best practices for flying. I also decided to find a flight instructor that would assist me and help me with all the technical details that I am still lacking. When we met, he strongly suggested that I leave the Hobby Zone Super Cub behind and get to a wooden motorized trainer plane like the Avistar Elite .46 ARF by Great Planes, which I did.\nI have flown the Avistar Elite .46 for the whole season and I would like to say that my flight instructor was right. It is a wonderful plane for beginners.\nHere are some pros and cons about this plane.\nPros Almost ready to fly The Avistar Elite comes mostly pre-assembled and only some minor assembly is required (linking both section of the wings together, screwing the horizontal tail and the vertical tail together). The assembly is glue-free: nothing is required for holding the wings together and all control surfaces are pre-hinged.\nBigger and Stronger The plane look and feels big and strong. The body is made of plywood and covered with Monokote. The total weights of the plane is 6.5 lb and it has a total wingspan of 62.5 in and a total length of 55 in.\nMotorized options - Glow or electric The Avistar Elite is powered by a an O.S. 46AX II glow engine. This engine is quite powerful for the plane and has a pretty good climb rate. The engine operating cost is around 60-75$ per season to fly.\nI prefer glow engines to electric ones because the flight time is improved compared to electric flights. Also, there is no need to bring multiple lipo batteries and charge one while you fly with another. With a glow engine, you simply have to refuel and you are good to go again!\n(I do like electric engine but only when I am flying a glider. It is another story when used with a glider since most of the time, the engine is not running. A wooden glider would also be way too much heavy! hehe)\nIf you do however prefer electric engines, the Avistar Elite provides the motor mount for mounting an electric motor.\nBig wings The wings area has a total of 672 in² which is more than enough for the weight of the plane. The size of the wings make the plane really hard to stall which is perfect for learning/practicing take off and landings. The plane is also stable during windy flights.\nGood starting point for aerobatics The Avistar is equipped with a semi-symmetrical wing which allows high stability that only a trainer can provide and the ability to perform basic aerobatics that a flat-wing plane cannot perform.\nOptional flaps The factory wings come pre-equipped with optional flaps that are already pre-hinged to the wings and hold by a little wooden stem. Clevises and control horns for the flaps are already included in the package. You only have to provide 2 servos and install them in each wing to be ready for full-flaps landing.\nQuick removable gears The rear gears locks into place when fully inserted into the body. They can be easily removed by applying pressure on the lock mechanism. You don\u0026rsquo;t need any tool to install or remove the gears from the plane. I think this is a nice feature since I do have to remove the rear gears for easier transportation and every time I store the plane on its stand.\nCons Price The plane is a little bit expansive when compared to the price that I was comfortable to pay for a first trainer. I paid 407$ (tax in) for the whole kit. That is about twice as expensive as my Super Cub LP RTF, mainly because this one is a motorized plane made of wood instead of a brushed motor made of foam. Still, it is not that much considering all the features and the extensibility it offers.\nSize does matter The plane is much more bigger than the Super Cub I used to transport in the trunk of my car. As I said earlier, the plane has a total wingspan of 62.5 in and a total length of 55 in which is considerably long. For instance, it might not fit in the trunk of a sedan car (it does not in mine). It might also hardly fit in the trunk of an hatch back (never tried).\nFor transportation, I need to set the plane and the wings on the front passenger seat of my car and lie down the seat to get as much space as I can. This sacrifices the back passenger seat so it can be hard to bring the family for a flight session during the afternoon.\nEven if the wings can be split in 2 sections, I do not wish to do that since I am afraid that they might get loose or something. It is also much more practical to bring a huge piece of wing than 2 smaller sections. This decision has its own consequences too.\nNeeds some minor modifications The plane is build with a good quality material. However, it is still a low cost plane compared to multiple other plane (mostly non-trainers) so the quality of the plane could still be improved a bit. I did had to make minor modifications to the factory settings to get it as I see fit for my needs.\nThose modifications would be too heavy for this article so I decided to document all of them in a dedicated post.\nEdit: All modifications are covered here.\nFinally Overall, I think the Avistar Elite is a really nice beginner plane. It fits my needs perfectly and is expandable for a longer life time. I have no doubts that I will be flying this plane for at least 2 years (or even 3 years) without having to buy another one.\nI you want deeper analysis, here are two good reviews that cover much more than I did:\n Great Planes Avistar Elite GP .46 ARF - RC Groups Great Planes Avistar Elite .46 RTF - RC Universe  Great Planes have made quite a good trainer for beginners. Get yours and see you flying in a private club north of Montreal!\n",
    "ref": "/review-of-the-avistar-elite-46-arf-by-great-planes-the-perfect-motorized-trainer-for-beginners/"
  },{
    "title": "Final flight of a Super Cub LP",
    "date": "",
    "description": "",
    "body": "The Good After 1½ month of flying the plane, I was feeling a little more confident and I trusted enough myself for doing loops. So at the end of the 2013 season, I went flying with a friend with my Super Cub LP. I wasn\u0026rsquo;t expecting any disaster\u0026hellip;\nIt was a little cloudy \u0026amp; windy but I went flying anyway because I was too much confident that nothing could happen since I had 6-7 flights of experience!\nThe Bad I had a good overall flight but I had an small accident with some trees at the right side of the flying area. After investigating the plane, I realized that nothing was broken so I went for another flight. I made all the required checkups and verified that all control surfaces were working as expected before taking off. That\u0026rsquo;s what I tough\u0026hellip;\nThe Ugly After a minute of flying, the elevator stopped responding and violently crashed the plane on the ground. Nothing more to say here. Just a painfully hard crash on the ground\u0026hellip;\nHere is the video of the crash:\nThe explanation During my encounter with the trees, one of the servo got loose in its socket and the glue (silicon) that was holding the servo to the fuselage was not holding anything anymore! During the flight, the servo pushed itself out of its socket instead of pushing on the elevator rod resulting in a hard crash.\nThe damage As I said earlier in The Hobby Zone Super Cub LP RTF. A good beginner’s RC plane, the plane can be repaired easily. As long as your electronics are still working, it is hard to damage the plane beyond repair.\nHere the description of the damage:\n The wings broke in half near the middle. The nose broke into pieces. The firewall got smashed. The engine and motor gears went through the firewall and almost reached the inside of the fuselage. The fuselage bent near the second window.  Here is some pictures of the wreckage:\n\nSuper Cub LP Crash (wings)\n\nSuper Cub LP Crash (nose smashed)\n\nSuper Cub LP Crash (engine smashed)\nFinal note This adventure stopped me from flying during the 2013 season. I wasn\u0026rsquo;t mad that it happened. This event made me realize that repairing your model is also part of the hobby. In a future post, I will show you how I repaired everything to get the Super Cub LP back into the air.\n",
    "ref": "/final-flight-of-a-super-cub-lp/"
  },{
    "title": "The Hobby Zone Super Cub LP RTF. A good beginner’s RC plane",
    "date": "",
    "description": "",
    "body": "During summer 2013, I have found myself with a high interest in flying an RC plane. I didn’t know what to expect from this but I wanted to get a new toy to play with. Like everyone, I thought that flying a plane was not that hard and that I could easily manage to fly any kind of plane. I was wrong. During my search for the best plane, I learned about the Hobby Zone Super Cub LP RTF which I think is a really good plane for a beginner.\nI already knew that flying RC planes can be a hobby. Because of that, it can be easy to sink huge amount of cash in this before you realize that you went too far. As a hobby, you can also find good experienced people for advices and easily find a flight instructor that will assist you with the technical aspect to reduce your learning time. However, this process is time consuming and I didn’t wanted to spend too much in this new thing before I knew that I would like and enjoy flying an RC plane.\nSo I bought a Hobby Zone Super Cub LP RTF.\nHere are the reasons why I think this plane is a great beginner’s RC plane:\nPros Everything is included The plane is available as a RTF model. RTF stands for “Ready To Fly” which means that everything is included and already assembled in the package to get outside and have fun immediately. Even the batteries are included in the package which technically means that you need to charge them before you can get out and fly.\nSmall factor The plane is small enough for most usage. It can fit nicely into the trunk of a car for easy traveling. The plane is only 32.5” in length and the wings are 48” in length. The fuselage and the wings are detachable so you do not have to travel with the plane assembled and risking breaking something.\nCheap This plane is relatively cheap. I got mine for around $200 CA.\nEasy to repair The Super Cub is a trainer for learning to fly. You will eventually crash and will need to repair your plane. This one is made of foam which is super easy to repair. When you get a dent because you crashed into a tree, you can sometimes just soak the foam in hot water and it will retake its original shape. If something breaks because of a crash (ie your wings!), you can easily repair them with wooden skewer sticks. Other basic repairs to the fuselage can be made with hot glue or epoxy while the electronics can be glued back with silicone.\nIn case you breaks something that is not made of foam, you can get many replacement part for a relatively low price so things such as the motor, gears, gear box, firewall, nose and spinner can be replaced at a local hobby shop of by ordering the pieces only.\nLight Landing is the hardest task to do for a beginner. Since this plane is made of foam, it is really light. The total weight of the flying plane is 26 oz (715 g) which is really low. Because of that, you don’t need to know how to land the plane. In my experience, the best way to land the plane (besides actually landing the plane on its wheels) is to look for a grass field. My first flight was in a grass field and some places had grass that was 1 foot high which is more than enough to gently slow down the plane when trying to land.\nExpendable This plane is really popular. Eventually, if you decide to go into this hobby, you will change for a more challenging plane for flying since this plane is not made for aerobatic flights. If you search the internet, you will find tons of documentation that explains how to modify the plane to get a second life you your plane. Some of the best mods are “Adding ailerons” to your wings or “Replacing the motor for a brushless motor”.\nYou can also order multiple add-ons for the plane to enjoy a little more of the Super Cub. You can order online (or from your local hobby shop) for a relatively cheap price the following add-ons:\n Snow skis to fly the plane during winter. Float set for takeoff and landing on a lake. Drop module.  Cons No ailerons This is the most annoying feature of the Super Cub. Since it does not have ailerons, it cannot do barrel rolls. Turning left or right is a combination of the rudder and the elevator which makes turning with this plane a little difficult.\nAt the same time, it might be preferable for a beginner. A bad move with ailerons could easily make the plane dive pretty quick. The transmitter has 4 channels and the receiver has 4 channels too but its the plane that simply does not have ailerons\nAnti-crash technology (ATC) is a mess I never trusted this technology. It is based on a light sensor on top and bottom of the plane which detect which side is the lightest and which is the darkest and assumes that dark side is the ground. If the system detect that light side is “under” your plane, it will try to recover by taking the ownership of the commands. This means that flying the plane on a cloudy day or over a light ground area can be disastrous.\nThe system can be turned off by flipping a switch on your controller but I would tend to forget to check these before a flight. Don’t even think to make a loop with this system turned on because that would be bad.\nI don’t know about you, but if I crash my plane, I has to be my fault and not the one of a faulty system that made a wrong decision. Aside of that, you *may* (and this is the key word) find some examples on the net were this technology saved their plane from a potential crash.\nGood news is this technology can be permanently disabled by unplugging both sensors.\nFinal decision I bought this plane and had a great time with it. I do recommend this plane for learning the basics of flying an RC plane and leaning that repairing is also part of the hobby J I sincerely hope that this plane will help you make a final decision to jump into this hobby.\nI have since move away from electric planes and I am now flying with an instructor. I still fly the Super Cub occasionally but I manage to extend its possibilities by adding ailerons to the kit.\nSee you in flight!\nNote If you feel confident that you will enjoy this hobby and can spend a little more to get a better plane, I do recommend to get the Apprentice 15e RTF with DX5e Radioby E-flite which is a bit more expensive but has ailerons and is equipped with a brushless motor. That would be my second recommendation!\n",
    "ref": "/the-hobby-zone-super-cub-lp-rtf-a-good-beginners-rc-plane/"
  },{
    "title": "DIY Bedroom under the bed led lighting",
    "date": "",
    "description": "",
    "body": "Introduction\nHow many times did you wake up your partner in bed because you had to turn on a lamp to see something? Did you ever wanted to have a bedside lamp/table lamp that do not take too much space on the bedside table? How about being able to turn off a lamp that\u0026rsquo;s been turned on by your partner without leaving your bed?\nIn this article, I will explain how I created a bedroom under the bed LED lighting solution that can replace your existing bedside lamp.\nAfter completing my DIY Kitchen under cabinet LED lighting project, I managed to get a few spare parts lying around. I realized that I had all the equipment required to implement something similar for the bedroom.\nThe reason I started this project was that I wanted a low brightness light to be turned on during the night so that I can see where I go. At the same time, I did not always went to bed at the same time that my partner. Having a light that can be left on while she is going to sleep would have been an amazing feature.\nThe electrical circuit is almost identical to the Kitchen under cabinet LED lighting. However, this design uses 2 switches instead of a single one. This is required so that each partner has control on the lights from his/her bed side.\nInstalling lights under your bed is really different than having a bedside/table lamp. This setup provide the following benefits in a bedroom:\n It does not create light that is too bright. The dimmer make this easy on the eyes at night. The LEDs can be turned on without blinding you. It allows to see were you are walking. Be able to see the walkway between the bedroom and the bathroom is pretty interesting. Can be turned on without disturbing the sleep of the other partner. Give a nice ambient light for bed activities\u0026hellip;  In this post, I will explain how I installed in my bedroom a custom under the bed LED lighting solution.\nNote:\nHandling wall electricity can be dangerous. If you do not have basic electricity skills, I strongly recommend that you do not complete this project. Proceed at your own risk.\nProject data Equipment The material for this project is as follows:\n A 5 meters LED strip. 2 pin Connector Wire Cable For 3528 Single Color LED Strips (5 times) A 36 Watts (12 volts, 3 amps) power supply. A 3 pins wall outlet power cord. A LED dimmer module. Two 3-way switch. 5 meters of colored (red \u0026amp; black) wire. Male and Female RCA connectors. A multimeter (for testing connections and power output) Screws A Phillips screwdriver Flexible measuring tape  Usual equipment As I have explained before, the equipment is almost identical to the one for my DIY Kitchen under cabinet LED lighting. I wont go into details of how to connect everything together or why choosing which type of LED are better. Please consult the other post for details\n3-way switch The only piece of equipment that is different is the type of switches used in the project. There is two switches, one for each partner. The type of switches is also different and requires 3-way switches. This type of switch allows controls of the lights on both side of the bed: one partner can turn on lights and the other can turn them off.\nRCA connector The RCA connectors used in the circuit are use for disconnecting the LED strip from the rest of the circuit. The headboard and the base of my bed are not attached together. The base is sometime moved away from the head for cleaning or changing the sheets. Since the LEDs are stick below the base and the main circuit is attached behind the headboard, I needed a way to disconnect the two for maintenance. I used an RCA connector for this purpose because they are mostly available in any electronic store or they can be salvaged from many sources. If you don\u0026rsquo;t have some, any type of connector would be fine.\nTotal cost of the project Like the kitchen project, this project can be completed at a pretty cheap price. The total cost of the project is less than 35$.\nHere is the detailed price of each items:\n $8.13 - LED strips from ebay. See screenshot here. $2.29 - 2 pin Connector Wire Cable For 3528 Single Color LED Strips from ebay. See screenshot here. $7.15 - 36 Watts power supply from ebay. See screenshot here. $0.00 - Power cord. (I have many lying around) $6.02 - LED dimmer from ebay. See screenshot here. $3.98 - 3-way power switch from the hardware store. $4.00 - Colored wire (I used gauge 18awg) from dollar store $0.00 - Male and Female RCA connectors (I have many lying around)  Total cost: $31.57\n The cost of usual items such as screws and glue is not included in the cost of the project.  Preparation time The preparation time is simple, it requires to test all the circuit before fixing the strip to the bed. The circuit takes about half an hour to complete and verifies that all components are working as expected. No soldering is required for this step. The circuit is pretty basic. Refer to the next section for details of the circuit.\nBuilding steps Construction steps are very simple. Screw, wire everything up and enjoy. Here is a picture of the circuit that you need to assemble:\n\nTesting everything together The first thing you need to focus on is to test everything together before mounting it behind the headboard of the bed. The last ting you want is to wire everything up and finding out that a wire is bad or the dimmer or switches (which are glued) are dead.\nAs mentioned before, all questions regarding how to connect the power cord to the power supply or how to connect the dimmer, can be answered in the following post: DIY Kitchen under cabinet LED lighting.\nDeciding where to put your stuff This section defines the basic reasons that lead to the final design.\nOrientation of the LEDs \nThe location of the LEDs is obvious. However, I didn\u0026rsquo;t know if I had to stick the LEDs facing down or facing out of the base. If you stick the LEDs facing out, all the lower section of the room get illuminated but the light does not go as high as if the LEDs were facing down.\nTurns out that best method for me was to stick them facing down. Choose the option that is best for you.\nNote:\nBoth options do not illuminate the people sleeping and should not disturb your lover\u0026rsquo;s sleep.\nSwitches \nI had a hard time figuring out where I would put the switches and the dimmer. They had to be freely available and I wanted to be able to find the switches with my hands only, without having to take a look first. You will turn them on in the middle of the night when not fully awake!\nMy first idea was to install the switch through the headboard by drilling small holes the size of the switch and use switch plates to cover everything. That was not accepted as a viable solution because we though that it will be too intrusive. It would also be hard finding the switch in almost total darkness.\nI opted to position the circuit of the switches at the same level than the bed\u0026rsquo;s headboard. The moving part of the switch is raised a little bit above the headboard. This option is perfect because it is really easy to turn on the lights even when lying on the bed. You simply have to slide your hand on the top of the headboard from left to right (or right to left).\nDimmer \nThe dimmer is not always used in this setup. Most of the time, you want the light to be set at the minimum brightness level. In some scenarios, you will want to get more light and you will have to turn the knob of the dimmer.\nFor this reason, I decided to position the dimmer behind the headboard. It cannot be reached when lying on the bed but it can still be reached when sitting/standing face to the headboard.\nLED strip installation Cutting \nI had to cut 3 slices of strip, one for each side of the base. The strip can be cut safely at every 3 LEDs. Each cut point is identified by the contact points in copper. Simply cut in the middle of the contact points to leave enough copper for the 2-pins connectors.\nUse a measuring tape to calculate the length of each side of the base. If the length of the base does not match a cut point, do not hesitate to get a smaller length since 3 missing LEDs wont make a difference.\nSticking \nNow is the time to stick the LEDs to the base of the bed. The opposite side of the LEDs is sticky and can be used to stick the LED to a surface. Make sure that the mounting surface is dry and clean since you won\u0026rsquo;t have multiple tries before the surface loose the ability to stick to the wall. If the strip does not exactly match the length of the base, make sure that you center the strip for appropriate lighting.\nI used decided to use hot glue for securing the beginning of the strip to the base of the bed. This is a good idea in case I forget to disconnect the strip from the main circuit when moving the base away from the headboard. The glue will hold the strip in place and prevent any damage.\nConnecting Use the connectors to link each strip together. The connectors are specifically designed for connecting LED strip together. You just have to open a door, slide the strip in place and close the door which will hold the strip in place. When linking the strip together, make sure that you align the positive (red) and negative (black) leads of the strip with the appropriate color code of the connector.\nI also used hot glue for holding the connector on the base and prevent any loose or hanging wires. We do have 2 cats living with us and that is a good idea to make sure this does not look like a cat toy 🙂\nFinal Result Here is the final result:\n\nDIY Bedroom under the bed led lighting\nMade anything differently? This is my second project dealing with LED lighting strips. I do not think that I would make anything differently. Everything is pretty much like the way I wanted. I may eventually add a motion sensor as shown here to detect when I get up at night for a bathroom walk so the walkway may get illuminated automatically but that may be too extreme. I only have to raise my hand and slide it before getting up.\nNotes none\n",
    "ref": "/diy-bedroom-under-the-bed-led-lighting/"
  },{
    "title": "How to shoot a waterfall with a DSLR camera",
    "date": "",
    "description": "",
    "body": "Introduction Shooting a waterfall with a DSLR camera is not that hard. As usual in photography, you need a lot a patience. The perfect picture is all about managing a long exposure of the waterfall. This will get you a nice look as if the waterfall would be a silk river. In this guide, I will explain how I managed to get this picture of the \u0026ldquo;Chute du Diable\u0026rdquo;.\nContext During summer 2014, I went camping with my family to Mont-Tremblant and as always, I have brought my camera with me. I was lucky enough to bring all my camera gears since I was not expecting that I would have to use almost all of them to get a nice picture of a waterfall.\nThe \u0026ldquo;Chute du Diable\u0026rdquo; is located in Canada, Québec, Mont-Tremblant which is around 2 hours North of Montreal. If you still don\u0026rsquo;t know where it is, here is the precise location where I got this shot:\nLatitude: 46.3828892\nLongitude: -74.4716262\nRequired gears As I said, getting a nice picture of a waterfall is not that hard. However, you must be prepared because you will need to have the right filters and you must be able to navigate your way in your camera menus to detect overexposed areas.\nHere is the equipment that I had to bring with me for taking a good picture of a waterfall:\nTripod and remote trigger Since we will take long exposure pictures, we need to be properly stabilized and a way to release the shutter without moving the camera. A wireless remote trigger would be perfect but I managed to get a nice picture with a wired remote trigger.\nFilters The most important (mandatory) of all piece of equipment for shooting a waterfall is ND filters. Without these filters, you will not be able to take a long exposure shot without overexposing the final image.\nOptionally, you can use a CPL filter to minimize reflections and bright spots in your image.\nLens cleanup cloth You are actually trying to shoot water falling from a high point. There will be a constant water mist in the air! Your lens may get wet while you are preparing yourself so you need to have a cloth for cleaning it up before taking your shot.\nHow to shoot a waterfall with a DSLR camera Find your best point of view Take your time to \u0026ldquo;read\u0026rdquo; the area. Is it better from a high point of view or a lower point of view ?\nConsider the fact that there might be time that are too windy (which would result in blurred leaves in trees) so you might need to find a spot where you do not see too much leaves or at least find a spot where they are not too close to the camera.\nFind a point of view that do not show too much water or too much rocks since you may have difficulties finding the correct exposure dealing with the dark rocks and bright foamy water.\nOnce you have found your perfect spot, secure your camera on your tripod and head to the next step.\nSetup manual mode Switch your camera in manual mode and set the ISO to 100 to reduce the noise on the sensor. You will have plenty of light coming through your lens!\nNote: You may also want to set your camera to shoot in RAW mode to adjust your final pictures. On sunny days, there is sometimes too much light to properly see the result picture on the preview screen. You might think that your exposure is correct when it\u0026rsquo;s not. Shooting in RAW mode would allow you to correct this issue without scarifying too much of image quality.\rFor your shot, you want to get the maximum area of the picture to be in focus. The static part of the picture (Trees, plants and flowers around the waterfall) has to be in focus to get a good contrast from the movement of the water. An aperture of f16 or higher would be a good start to get a nice depth of field. To get this thumbnail picture, I have set the aperture to f22.\nThe perfect silk waterfall effect is achieved with a long exposure of 1 to 3 seconds depending on how fast the water is moving. Set your shutter speed to 1.5 seconds to get an average look.\nAdd required filters Do not waste your time taking a shot right now since all you will get is an overexposed image. You need to add filters! This process is simple, add filter until you get the a picture that don\u0026rsquo;t have overexposed areas.\nA good start is to use an ND8 filter. To get this shot, I first installed an ND4 filter on my lens but that wasn\u0026rsquo;t enough. I had many areas in the picture that were overexposed. I then added an ND2 filter. I know, I could have used an ND8 which is identical to ND2+ND4 and I agree that it would have been better. However, since I was with my family, I didn\u0026rsquo;t had much time to try multiple combinations. I also wasn\u0026rsquo;t expecting to have to go as high as ND8.\nThe last filter you can add is a CPL filter. This one is optional but I used one to get the picture above. You install this filter on top of all other filters. No other filters or camera mount must be over a CPL filter because it is a rotating filter so you do not want to change your setup by screwing another filter on top! Look through your viewfinder and rotate the filter until you get the appropriate effect.\nTake your shot Now is the time to take your shot. Adjust the shutter speed to get the water effect you want to achieve and finally adjust the aperture to get the right exposure. Do not hesitate to get multiple shots at multiple shutter speed. Sometime the smallest change in exposure time can create a different water pattern.\nMost important of all, do not forget to enjoy what you are doing!\nPost processing Correcting underexposed trees and rocks\n\rAfter the capturing process, you may find your pictures are correctly exposed for the waterfall but all the vegetation and rocks around it might be underexposed. To correct this issue, you need to make a manual exposition correction in order to darken highly exposed areas while lightening underexposed areas. This is why it is important to shoot in RAW. The correction can be done with Lightroom easily.\nIf you do not have access to a copy of Lightroom, you can do the same effect (almost) with free tools. The same effect can be achieved by applying a \u0026ldquo;Contrast Mask\u0026rdquo; on the image using the free image editor Gimp. The process is described here: \u0026ldquo;GIMP - Creating a Contrast Mask\u0026rdquo;.\nEDIT: See below for a Lightroom corrected image.\nFinal image: This is the best picture I got using this technique. Here is the full scale image. Feel free to comment below!\n\nChute du Diable\nEDIT: And here is a Lightroom corrected version I made:\n\nChute du Diable\nIn contrast, here is a static image of the same waterfall with motion freeze on automatic settings.\n\nWhat I would change for next time ? Find the perfect time of the day Went I shot this waterfall, I had to get there at noon. During this time of the day, the light is too bright and the water is reflecting too much light compared to the vegetation and trees around the waterfall. With this setup, you must use ND filters and you may need to correct the contrast between the vegetation and the waterfall in post processing as explained earlier.\nThe perfect time of the day to get a nice shot is to go soon after sunrise or a little before sunset. These are the best time because the light is even for both the waterfall and the surrounding. You may also realize that you may not need ND filters and be able to correct the exposure just by managing a narrower aperture.\nAnother good time of the day would be during \u0026ldquo;Grey days\u0026rdquo;. When there is enough clouds in the sky to create a constant diffuse light. That kind of lighting would be better than bright sunny days at noon!\nBetter composition When I was on site, I was overwhelmed by the waterfall and all the noise and the mist it was making. I completely forgot to manage to properly frame the waterfall in it\u0026rsquo;s context. I picture with more vegetation and showing the trees around it would have better showed the waterfall in it\u0026rsquo;s context and would have made a better picture.\n",
    "ref": "/how-to-shoot-a-waterfall-with-a-dslr-camera/"
  },{
    "title": "DIY Kitchen under cabinet led lighting",
    "date": "",
    "description": "",
    "body": "Introduction There is something missing in most kitchens I have seen in my life and it is not a huge free space or a smart refrigerator. It is much simpler than that. I am talking about good lighting. All kitchen that I have used had decent lighting when used during a bright shiny day but was lacking appropriate lighting during a rainy days or nights. Most of then were also missing under cabinet lighting.\nIt has been a long time since I wanted to get more light available under the kitchen cabinets. However, I never felt ready to install some lights by myself for many reasons. One of them was that I was missing the proper tools and knowledge. I also didn\u0026rsquo;t like the idea of drilling holes in the cabinet or through the kitchen counter to get the electricity and finally, when I was looking at a kitchen with under cabinet lights, the lights that were used was producing too much heat that I could almost burn myself. This project was \u0026ldquo;on hold\u0026rdquo; until a super easy to install solution came to my mind: LED strips.\nLED strips are an alternative to fluorescent, halogen or xenon lights. LED are becoming more and more popular and are super easy to install and adapt to many situations. Some LED strips can be used outside too but that is for another post! They provide the following benefits in a kitchen:\n Cheap! Give a proper lighting. Can be dimmed to low levels. Available in multiple colors like warm white or cold/cool white. Do not produce any heat (almost). Do not burn or has a much longer life time than normal lights. Operates at 12 volts. No need for wall AC current which could lead to accidents. Use less electricity (much fewer current than alternative lighting options).  In this post, I will explain how I installed in my kitchen a custom under cabinet LED lighting solution.\nNote: Handling wall electricity can be dangerous. If you do not have basic electricity skills, I strongly recommend that you do not complete this project. Proceed at your own risk.\rProject data Equipment The material for this project is as follows:\n A 5 meters LED strip. 2 pin Connector Wire Cable For 3528 Single Color LED Strips (5 times) A 36 Watts (12 volts, 3 amps) power supply. A 3 pins wall outlet power cord. A LED dimmer module. A wall switch. 2-3 meters of colored (red \u0026amp; black) wire. Double sided tape Sticker gum A multimeter (for testing connections and power output) Screws A Phillips screwdriver Flexible measuring tape  Power supply Theoretically, only a 24 Watts power supply is required for powering the whole LED strip. However, I usually feel more comfortable when I get more power than I will need. It is also better for the power supply to not always power the LED strip at maximum current during longer period of time.\nDimmer module The dimmer module is optional but I strongly recommend to use one. Without the dimmer module, the LED strip is too bright for many situations. Full brightness is only required for cutting vegetables. For all other scenarios, you will need to reduce the intensity of the light if you want to create ambient lighting during the night or if you need a low-light in the morning. Even a warm white (compared to a cool/cold white) strip is too bright when I get out of the bed. Anyway, for the price of the module, it should be a no brainer.\nPlease note that a \u0026ldquo;normal\u0026rdquo; wall dimmer cannot be used to power the LED strip since LED can only be dimmed with a PWM module and not by a variable resistance in the circuit.\rSMD 3528 or SMD 5050 LED strip ? I used SMD 3528 LED chips instead of SMD 5050 LED chips. Basically, the code for the LEDs is the dimension in millimeters of each LED. SMD 5050 are brighter but uses more electricity. Since I didn\u0026rsquo;t need the brightness of the 5050 LEDs and I wanted to use less electricity as possible, the SMD 3528 LEDs were the best choice. Make sure that you buy 600 LEDs per reel strips instead of 300 LEDs per reel because 300 LEDs per reel may not be sufficient.\nHere is a good article about the differences between them: Comparison between 3528 LEDs and 5050 LEDs.\nConnectors You only need 3 LED connectors for this project. You need 2 connectors for linking the 3 cabinets together and a 3rd one for connecting the strip to the dimmer\u0026rsquo;s output connectors. However, I actually bought 5 of them since buying in bulk is actually cheaper than buying 3 single connectors.\nTotal cost of the project As I said before, this project can be completed at a pretty cheap price. The total cost of the project is less than 30$. I had to say that I bought all major items (strips, dimmer and power supply) from ebay for a ridiculous amount of money. Don\u0026rsquo;t make the mistake and buy this stuff at an electrical or lighting store because you could easily double or triple the cost of the project!\nHere is the detailed price of each items:\n $8.13 - LED strips from ebay. See screenshot here. $2.29 - 2 pin Connector Wire Cable For 3528 Single Color LED Strips from ebay. See screenshot here. $7.15 - 36 Watts power supply from ebay. See screenshot here. $0.00 - Power cord. (I had one lying around. I usually salvage all of them when recycling old appliance. $6.02 - LED dimmer from ebay. See screenshot here. $1.25 - Power switch from the hardware store. $2.00 - Colored wire (I used gauge 18awg) from dollar store $1.00 - Double sided tape  Total cost: $27.84\n The cost of usual items such as screws and glue is not included in the cost of the project.  Preparation time The preparation time is simple, it requires to test all the circuit before fixing the strip to the cabinets. You don\u0026rsquo;t want to start drilling holes in your cabinet before finding out that a component does not work! The circuit takes about half an hour to complete and verifies that all components are working as expected. No soldering is required for this step. The circuit is pretty basic. Refer to the next section for details of the circuit.\nBuilding steps Construction steps are very simple. Screw, wire everything up and enjoy. Here is a picture of the circuit that you need to assemble:\nThe dimmer has 2 input connections and 2 output connections. The input connections are labeled as \u0026ldquo;Input V- and Input V+\u0026rdquo; and output connections are labelled as \u0026ldquo;Output V+ and Output V-\u0026rdquo;. I think this is pretty obvious and does not requires any explanations.\nTesting everything together This section defines how to connect all the components together.\nConnect the power cord with the power supply. Screw the wires on the power supply as described above. Do not connect the power cord until the complete circuit is assembled.\nConnect the positive output of the power supply to one side of the switch. Screw another wire from the other side of the switch to the \u0026ldquo;IN V+\u0026rdquo; connector of the dimmer. Get another wire from the dimmer\u0026rsquo;s \u0026ldquo;IN V-\u0026rdquo; back to the power supply negative output.\nConnect the dimmer\u0026rsquo;s \u0026ldquo;OUT V+ to the positive lead of the LED strip and connect the negative lead of the strip back to the dimmer\u0026rsquo;s \u0026ldquo;OUT V-\u0026rdquo;.\nPlug the power cord into the wall, turn on the switch and your LED should turn on. Turn the knob of the dimmer to test the intensity.\nDeciding where to put your stuff \r[![DSC04072](http://www.end2endzone.com/wp-content/uploads/2014/08/DSC04072.jpg)](http://www.end2endzone.com/wp-content/uploads/2014/08/DSC04072.jpg) [![DSC04068](http://www.end2endzone.com/wp-content/uploads/2014/08/DSC04068.jpg)](http://www.end2endzone.com/wp-content/uploads/2014/08/DSC04068.jpg)\n[![DSC04060](http://www.end2endzone.com/wp-content/uploads/2014/08/DSC04060.jpg)](http://www.end2endzone.com/wp-content/uploads/2014/08/DSC04060.jpg) [![DSC04062](http://www.end2endzone.com/wp-content/uploads/2014/08/DSC04062.jpg)](http://www.end2endzone.com/wp-content/uploads/2014/08/DSC04062.jpg)\r\rI wanted to position the switch at a location where is can be reached easily with your fingers but I also wanted the switch to be invisible to the eye. I decided to install the switch below the cabinets but hidden behind the front panel under the cabinets. For the same reasons, the dimmer is located at the same location. I used double sided tape to stick the dimmer and the power switch in place. The tape is strong enough to keep the switch in place even when someone is turning the lights on or off.\nI also decided to position the power supply below the cabinet, at the back. This location is close to the switch and the dimmer and is also well ventilated. The power supply has two holes for screwing the case to a wood surface. I used small length screws to screw the power to the cabinet\u0026rsquo;s wood panel.\nHere is a view from below the cabinet:\nSince I have 3 kitchen cabinets, I had to cut 3 slices of strip. The strip can be cut safely at every 3 LEDs. Each cut point is identified by the contact points in copper.Simply cut in the middle of the contact points to leave enough copper for the 2-pins connectors.\nUse a flexible measuring tape to calculate the length of each cabinet and cut a section of the strip for each cabinet sections. If the length of the cabinet does not match a cut point, do not hesitate to get a smaller length since 3 missing LEDs wont make a difference. You just have to center the strip into the cabinet for proper lighting.\nDrilling \r[![DSC04085](http://www.end2endzone.com/wp-content/uploads/2014/08/DSC04085.jpg)](http://www.end2endzone.com/wp-content/uploads/2014/08/DSC04085.jpg) [![DSC04086](http://www.end2endzone.com/wp-content/uploads/2014/08/DSC04086.jpg)](http://www.end2endzone.com/wp-content/uploads/2014/08/DSC04086.jpg)\r\rIn order to get electricity from one cabinet to another, I had to drill holes in the bottom of the cabinet. This is the only intrusive change that I had to do for this project. I had to drill holes to get the wires above the kitchen hood and above the sink.\nSticking \nMade anything differently? I do not think that I would make anything differently. Everything is pretty much like the way I wanted. I took my time for preparing this project. I may paint the wires in white sometimes to make them invisible but since I do not see them when I open the cabinet doors, I may leave them as is.\nNotes none\n",
    "ref": "/diy-kitchen-under-cabinet-led-lighting/"
  },{
    "title": "Mes attentes et toutes ces choses que je veux photographier",
    "date": "",
    "description": "",
    "body": "Ce que j\u0026rsquo;attends de la photographie? Je ne sais pas vraiment. C\u0026rsquo;est un passe-temps après tout, mais au fil du temps, j\u0026rsquo;ai réussi à réfléchir à des choses agréable à photographier. La plupart d\u0026rsquo;entre elles sont des défis techniques, mais certains d\u0026rsquo;entre elles ont un niveau de difficulté géographique. D\u0026rsquo;autres ne sont possibles que pendant une période spécifique de l\u0026rsquo;année.\nVoici ma liste de ce que je voudrais réussir à capturer avec ma caméra:\nNote: Je vais essayer de mettre à jour ce post le plus souvent possible et surtout lorsque j\u0026rsquo;aurai réussi à trouver la possibilité de photographier un de ceux mentionné plus bas. Revenez plus tard pour voir quelles nouvelles idées j\u0026rsquo;ai ajouté ou ce que j\u0026rsquo;ai fait.\nPortrait Je ne veux pas faire des portrait d\u0026rsquo;une manière professionnelle, mais c\u0026rsquo;est seulement que je n\u0026rsquo;ai pas encore les équipements appropriés. Je n\u0026rsquo;ai pas d\u0026rsquo;objectif avec une grande ouverture suffisante pour obtenir une faible profondeur de champ pour faire un jolie portrait avec un arrière-plan flou. Je dois encore attendre un peu et avant d\u0026rsquo;acheter tout plein de chose mais ce temps pourrait venir plus tôt que prévu.\nCoucher du soleil / levé de soleil Je ne sais pas encore si je vais jamais avoir le courage de sortir de chez moi avant le lever du soleil et me préparer pour obtenir une belle image du soleil sortant des nuages ​​ou une autre se déplacent au dessus de l\u0026rsquo;horizon. Je pense que je serais ravi de me rendre à un endroit où vous pouvez voir le lever du soleil au-dessus de l\u0026rsquo;océan avec une belle réflexion sur l\u0026rsquo;eau.\nLa lune Je ne sais pas encore ce que j\u0026rsquo;aurais besoin ou à faire pour obtenir une belle photo de la lune (en plus d\u0026rsquo;un temps parfait). Je pourrais avoir besoin d\u0026rsquo;un adaptateur pour fixer la caméra sur un télescope. Je ne sais pas. Je sais seulement que je voudrais expérimenter avec l\u0026rsquo;aspect technique de la prise de vue de la lune.\nLe soleil? Je ne sais même pas si c\u0026rsquo;est possible mais ça pourrait être possible avec les filtres appropriés (un genre d\u0026rsquo;équipement inestimable). Je suis sûr que je ne vais pas finir avec des images de la de qualité de la NASA mais bon 🙂\nLes étoiles Il y a deux choses que je voudrais essayer lorsque l\u0026rsquo;on photographie des étoiles:\nLa première est évidente: c\u0026rsquo;est d\u0026rsquo;expérimenter avec une vitesse d\u0026rsquo;obturation très longue. Je m\u0026rsquo;attends aussi à des difficultés à cause de la rotation de la terre qui pourraient créer des traînées ou taches floues au lieu d\u0026rsquo;étoiles brillantes. J\u0026rsquo;ai déja aussi entendu parler qu\u0026rsquo;il existe des équipements qui peuvent contrer la rotation de la terre pour garder un point fixe dans le ciel. Ca pourrait devenir utile un jour.\nLa deuxième chose que je voudrais photographier est ce qu\u0026rsquo;on appelle des «traînées d\u0026rsquo;étoiles» ( http://en.wikipedia.org/wiki/Star_trail ). Il y a une étoile dans le ciel qui a un point fixe dans le ciel et ne change pas de position durant toute la nuit. C\u0026rsquo;est l\u0026rsquo;étoile Polaire (aussi appelée l\u0026rsquo;étoile du Nord). L\u0026rsquo;objectif est de prendre plusieurs photos à répétition, puis utiliser un logiciel informatique (je ne sais pas lequel!) pour «fusionner» toute les photos ensembles. Le résultat est une étoile fixe et une multitude de cercles autour d\u0026rsquo;elle (le résultat de l\u0026rsquo;orbite de chaque étoile dans le champ de vision).\nChute d\u0026rsquo;eau Photographier une chute avec une caméra normale donne toujours le même effet: essayer de geler le mouvement de l\u0026rsquo;eau. Les photos capturés ainsi ne montre jamais toute la force de la cascade. Une prise d\u0026rsquo;une chute avec un appareil photo professionnel sur une longue exposition a pour effet de lisser le mouvement de l\u0026rsquo;eau comme si c\u0026rsquo;était une rivière de soie. Cet effet est pour moi magnifique. Vous pouvez voir un exemple de cet effet sur le thème de Windows 7 (Thème Paysages ou celui Nature). Vous pouvez aussi voir le même effet sur une rivière avec des roches sur le fond s\u0026rsquo;il y a du mouvement de l\u0026rsquo;eau qui crée des bulles. Par contre, le meilleur effet est, à mon avis, de l\u0026rsquo;eau qui tombe.\nFeu d\u0026rsquo;artifice J\u0026rsquo;ai vu tellement de gens qui essaient de prendre des feux d\u0026rsquo;artifice avec leur téléphone. Cela donne toujours des résultats terribles. D\u0026rsquo;abord parce que tenir un téléphone avec les mains donne des images floues, mais aussi parce que je ne suis pas convaincu de la capacité d\u0026rsquo;un téléphone à prendre une bonne d\u0026rsquo;image d\u0026rsquo;un feu d\u0026rsquo;artifice. Cependant, je souhaite que je pourrais réussir à obtenir un image de l\u0026rsquo;éclatement d\u0026rsquo;un feu d\u0026rsquo;artifice à deux couleurs qui serait aussi bon qu\u0026rsquo;un professionnel (le genre de photo que vous voyez sur le contenu promotionnel)\nJ\u0026rsquo;ai lu sur le sujet et je sais un peu comment me préparer et à quoi m\u0026rsquo;attendre.\nCependant, la difficulté avec ce genre de prise de vue est d\u0026rsquo;attendre un événement qui se termine par des feux d\u0026rsquo;artifice à la fin! Là où je vis, cela ne se produit une fois par an, le 24 Juin lors de la Fête Nationale.\nMacro Je n\u0026rsquo;ai pas eu le temps de débuté avec la photographie macro, mais je pense que ce sera le genre de chose que je vais apprécier grandement. Il se pourrait bien que je devienne accro à ce sujet. Je vais aimer prendre des photos en prise de vue rapprochée d\u0026rsquo;objets que les gens ne s\u0026rsquo;attendent pas à voir d\u0026rsquo;aussi près. Je suis assez sûr que la photographie macro est l\u0026rsquo;une des premières choses que les débutants apprennent car il ça ne nécessite pas trop de défi technique. Je crains avoir besoin d\u0026rsquo;acheter un autre objectif pour de bonnes prises de vue macro.\nC\u0026rsquo;est quelque chose que je voudrais d\u0026rsquo;abord essayer pour briser la glace avec mon appareil. Je pourrais aussi faire quelques sujet cliché comme les fleurs et les insectes! haha\nGouttelette d’eau C\u0026rsquo;est quelque chose qui m\u0026rsquo;interpelle beaucoup! Je pense que je pourrais être intéressé par le défi technique derrière tout cela. Pour obtenir de joli gouttes d\u0026rsquo;eau, vous devez synchroniser le temps où vous libérer une goutte d\u0026rsquo;eau, déclencher l\u0026rsquo;obturateur de caméra et puis finalement déclencher le flash de l\u0026rsquo;appareil photo de façon adéquate pour obtenir l\u0026rsquo;image que vous voulez. Je pourrais aussi envisager de faire une plateforme de test avec un Raspberry Pi ou simplement naviguer sur le Web pour obtenir un contrôleur existant et travailler à partir de là. Le problème que je pourrais avoir est d\u0026rsquo;essayer devenir vraiment artistique avec la photographie de gouttelette d\u0026rsquo;eau parce que je n\u0026rsquo;ai vraiment pas beaucoup d\u0026rsquo;imagination (je veux dire l\u0026rsquo;imagination artistique)\nTime lapse La photographie \u0026ldquo;Time lapse\u0026rdquo; est quelque chose que j\u0026rsquo;ai essayé avant (il y a longtemps) mais je suis jamais arrivé jusqu\u0026rsquo;à un produit final tout simplement parce que je me suis fatigué de travaillé sur le même projet. Quand vous regardez le vidéo final, cela semble facile, mais j\u0026rsquo;ai tendance à oublier la quantité de temps nécessaire pour obtenir le produit final. Pour être en mesure d\u0026rsquo;obtenir quelque chose de viable, vous devez vous préparer adéquatement avant de prendre des photos parce que si vous ne le faites pas, vous aurez du mal à fusionner toutes les photos ensemble.\nCependant, je j\u0026rsquo;aime bien la photographie \u0026ldquo;time lapse\u0026rdquo; parce que vous pouvez prendre d\u0026rsquo;un événement anodin (ou presque ennuyeux) et le rendre beaucoup plus dramatique. Par exemple, je voudrais photographier ma maison (ou tout autre sujet) pendant un laps de temps de 24 heures (pour obtenir le lever et le coucher du soleil dans la même vidéo) juste pour voir à quoi cela ressemblerait.\nAvant que je puisse réussir à obtenir une belle vidéo, j\u0026rsquo;ai besoin d\u0026rsquo;obtenir plus d\u0026rsquo;expérience avec le \u0026ldquo;time lapse\u0026rdquo; si je ne veux pas trop être en colère avec plein d\u0026rsquo;images mal réglées! Je pourrais essayer d\u0026rsquo;abord à l\u0026rsquo;intérieur, comme la création de vidéo où je déballe une boîte que j\u0026rsquo;ai acheté ou me prendre en train de laver ma voiture juste pour apprendre à connaître le processus au complet et être prêt quand j\u0026rsquo;en aurai vraiment besoin.\nTracé de lumière (Light trails) Il y a en fait deux choses que je voudrais prendre en photos avec des tracés de lumière. La première est évidement des lumières de voiture le soir avec un arrière plan de ville où l\u0026rsquo;on peut voir le \u0026ldquo;night life\u0026rdquo; de la ville. Cet idée a été visité par d\u0026rsquo;autres photographes de nombreuses fois et je ne pense pas que d\u0026rsquo;autre explications soit nécessaire. Je pourrais commencer par un endroit ennuyeux pas trop loin de la maison pour faire des tests et voir quel genre de résultats que je peux m\u0026rsquo;attendre.\nLa prochaine chose que je veux essayer est de crée mes propres tracés de lumière avec un pointeur laser pointé sur le sol. En déplaçant le pointeur sur le sol, vous pouvez littéralement \u0026ldquo;écrire\u0026rdquo; quelque chose avec une exposition suffisante à long. On peut aussi le faire avec plusieurs lasers de couleur différente (rouge, bleu et vert) pour créer des effets plus dramatiques.\nTilt shift Le \u0026ldquo;tilt shift\u0026rdquo; donne un effet vraiment unique à vos photos. Ce traitement produit un effet d\u0026rsquo;optique qui semble tout réduire vos sujets à l\u0026rsquo;état de miniatures. Une image d\u0026rsquo;un stationnement remplis de voiture ressemblerait à des jouets pour un petit garçon. Cependant, je crois que les lentilles pour créer cet effet sont très dispendieuses. Je m\u0026rsquo;attend aussi à une courbe d\u0026rsquo;apprentissage énorme pour obtenir de bons résultats. C\u0026rsquo;est probablement la dernière chose que je vais essayer avec la photographie. hehe\nPanoramique (Panning) Le panoramique est une autre façon de capturer le mouvement dans une image. L\u0026rsquo;image que vous obtenez est un sujet partiellement net sur un arrière-plan flou étiré à l\u0026rsquo;horizontale. L\u0026rsquo;effet peut être réaliser en photographiant un sujet en mouvement tout en effectuant un déplacement horizontale de l\u0026rsquo;appareil photo pour suivre le sujet . Une vitesse d\u0026rsquo;obturation relativement longue (1/40-1/20 de seconde) est nécessaire pour créer le flou de l\u0026rsquo;arrière plan. Si vous êtes assez bon, vous obtenez une image claire du sujet avec des parties floues en raison du mouvement. Par exemple, lorsque vous prenez un cycliste en panoramique (panning), vous aurez la tête, le corps et les bras clairs, mais un arrière-plan flou et les jambes floues.\nHDR HDR veut dire \u0026ldquo;High dynamic range\u0026rdquo; c-a-d que les photos prisent avec se mode comportent beaucoup de détails dans les zones claires et sombres. Il s\u0026rsquo;agit d\u0026rsquo;une technique de post-traitement qui donne des images vraiment spectaculaires impossible à avoir avec une seule prise (exposition). Le processus nécessite de prendre 3 photos de la même scène: la première sous-exposée, l\u0026rsquo;autre avec une bonne exposition et une finale qui est surexposé. Ensuite on fusionne toutes les images ensemble pour obtenir une bonne exposition des zones sombres et claires. Par exemple, prendre une photo d\u0026rsquo;une voiture avec le soleil en arrière-plan obtient habituellement une voiture sombre avec un bon ciel. Avec HDR, vous obtenez une bonne exposition pour les deux.\nChronophotographie La chronophotographie est une autre façon de capturer le mouvement que je voudrais explorer. Cette technique consiste à prendre plusieurs photos d\u0026rsquo;un objet en mouvement à partir du même point de vue. Il s\u0026rsquo;agit encore une fois d\u0026rsquo;un post-traitement. Il s\u0026rsquo;agit de de fusionner les séquences d\u0026rsquo;images du sujet tout en conservant le même arrière-plan. Vous pouvez obtenir un bon effet de chronographie avec la prise de plusieurs photos d\u0026rsquo;une personne en train de courir sur une plage ou en train de sauter d\u0026rsquo;un tremplin.\nFoudre Prendre en photo des éclairs est assez simple, mais difficile en même temps. Vous avez seulement besoin d\u0026rsquo;un appareil photo qui peut laisser son obturateur ouvert pendant une longue période (bulb mode). Je suis assez sûr que des photos de la foudre est un moyen facile d\u0026rsquo;impressionner vos amis sans trop de tracas. 🙂\nMétéore Je ne sait pas si ce serait possible ou non, mais j\u0026rsquo;aimerais bien être capable de photographier Les Perséides ou la comète Hale-Bopp.\nAutres trucs génériques  Un panorama: Prendre une photo simple mais impressionnante d\u0026rsquo;un beau panorama. Des objets se déplaçant rapidement, comme les voitures de course ou des avions. De la fumée Prenez une photo de la maison pendant toutes les saisons du même point de vue Attacher un appareil photo sur un ballon ou un cerf-volant et prendre une photo de moi depuis le haut des airs. Faire un vidéo \u0026ldquo;step motion\u0026rdquo;. Prenez plusieurs photos de moi sur un joli fond où je saute avec mes genoux pliés et me déplace en gardant toujours les deux genoux pliés. ",
    "ref": "/mes-attentes-et-toutes-ces-choses-que-je-veux-photographier/"
  },{
    "title": "La photographie – Comment tout a commencé",
    "date": "",
    "description": "",
    "body": "Salut tout le monde. Ceci est mon premier post concernant la photographie. J\u0026rsquo;ai récemment débuté ce passe-temps, mais j\u0026rsquo;ai toujours eu un intérêt pour la photographie depuis longtemps, mais jamais poussé plus loin ce passe-temps parce que j\u0026rsquo;ai toujours cru que de devenir bon en photographie n\u0026rsquo;était pas de mon ressort ou simplement parce que vous avez besoin de beaucoup trop d\u0026rsquo;équipement coûteux pour arriver à faire quelque chose de bon. Heureusement, j\u0026rsquo;ai changé d\u0026rsquo;avis et redécouvert la photographie.\nLes idées fausses J\u0026rsquo;ai toujours eu de grandes attentes sur ce qu\u0026rsquo;un bon appareil photo doit être capable de faire et l\u0026rsquo;une d\u0026rsquo;elle était la prise de vue rapide en mode continu (c-a-d 10-15 image par seconde). Cette fonctionnalité est pratique lorsque vous photographiez des objets en mouvement ou quand vous allez à un parc aquatique car il vous permet de figer l\u0026rsquo;action. (Je croyais qu\u0026rsquo;une haute fréquence de capture d\u0026rsquo;image en mode continu signifie une vitesse d\u0026rsquo;obturation plus élevée)\nJ\u0026rsquo;ai dépensé des centaines de dollars sur des caméras inutiles qui ne prenaient pas toujours des photos de haute qualité, mais qui avaient la possibilité de prendre plusieurs photos par secondes! J\u0026rsquo;étais dans l\u0026rsquo;erreur! J\u0026rsquo;ai essayé de comprendre pourquoi je n\u0026rsquo;arrivais pas à obtenir les résultats que je m\u0026rsquo;attendais et j\u0026rsquo;ai commencé à comprendre l\u0026rsquo;aspect technique de la photographie.\nLe temps d\u0026rsquo;un changement J\u0026rsquo;ai compris que j\u0026rsquo;avais besoin d\u0026rsquo;un appareil photo professionnel et que je devais sortir du confort du \u0026ldquo;mode automatique\u0026rdquo; pour commencer à utiliser le mode manuel disponible avec un appareil photo reflex numérique. J\u0026rsquo;ai eu à faire des économies et j\u0026rsquo;ai finalement acheté un appareil Canon EOS Rebel SL1.\nRapidement, j\u0026rsquo;ai commencé à aimer l\u0026rsquo;aspect artistique de la photographie et je suis devenu très curieux sur l\u0026rsquo;aspect technique de chaque photo sur laquelle je suis tombé.\nMon équipement Voici un ensemble des équipements que je possède actuellement:\n Canon EOS Rebel SL1 Canon EF-S 18-55 mm f / 3,5-5,6 IS STM Trépied Manfrotto 190XPROB avec tête 3D 804RC2 Tubes d\u0026rsquo;extension macro: 13mm, 21mm et 31mm De nombreux filtres: ND2, ND4, ND8, UV, CPL, et FDL Adaptateur AC Canon EOS avec coupleur DR-E15 Un intervallomètre TC-80N3 sans nom pour Canon  N\u0026rsquo;hésitez pas à regarder ce que j\u0026rsquo;ai réussi à photographier et n\u0026rsquo;hésiter pas à donner des commentaires positifs.\n",
    "ref": "/la-photographie-comment-tout-a-commence/"
  },{
    "title": "My expectations and things I would like to shoot",
    "date": "",
    "description": "",
    "body": "What I expect from photography? I don\u0026rsquo;t really know. It\u0026rsquo;s a hobby after all but over time I managed to think about cool things I would like to shoot. Most of them are technical challenges but some of them have a geographical difficulty level. Others are only possible during a specific period of the year.\nHere is my list of what I would hunt for a good shoot:\nNote: I will try to update this post as I managed to find the opportunity to shoot one of those. Come back later to see what new ideas I added or what I\u0026rsquo;ve done (strike trough).\nPortrait I don\u0026rsquo;t mean in a professional way of shooting portrait but it\u0026rsquo;s only that I am still missing the proper gears. I don\u0026rsquo;t have any lens with a sufficient wide aperture to get a small depth of field for shooting nice portrait with a blurry background. I should buy one sometime and that time might come sooner than expected.\nSun sets and sun rises I still don\u0026rsquo;t know if I will ever get the courage to go out before the sun rise and prepare myself to get a nice picture of the sun coming out of the clouds of moving over the horizon. I think I would love to get to a place where you can see the sun rise above the ocean with a nice reflection over the water.\nThe moon I don\u0026rsquo;t know yet what I would need to get a nice shot of the moon (besides a perfect weather). I might need an adapter to attach the camera to a telescope. I don\u0026rsquo;t know. I only know that I would like to experiment with the technical aspect of shooting the moon.\nThe sun? I don\u0026rsquo;t even know if that is possible but it might be possible with the proper filters (read priceless equipment). I am pretty sure I won\u0026rsquo;t end up with NASA-grade pictures 🙂\nThe stars There is two things I would like to try when shooting the stars.\nThe first one is obvious: it\u0026rsquo;s experimenting with a super long shutter speed. I am also expecting difficulties from the earth rotation that might create trails or blurry spots instead or bright stars. I also remember seeing gears that can counter the rotation of the earth to get a fixed point of view on a region of the sky. That might come handy sometime.\nThe second thing I would like to shoot is what\u0026rsquo;s called \u0026ldquo;star trails\u0026rdquo; (http://en.wikipedia.org/wiki/Star_trail). There is a star in the sky that has a fixed point over time in the sky. That star is Polaris (also called the North Star). The objective is to take time lapse pictures of this area and then use a computer software (don\u0026rsquo;t know which one!) to \u0026ldquo;merge\u0026rdquo; all the picture together. The results is a fixed star and a multitude of circles around it (the results of the orbit of each star in the field of view).\nA waterfall Shooting a waterfall with a normal camera always tries to freeze the motion of the water. This always freeze the amount of force that is creates. Shooting with a professional camera over a long exposure has the effect of smoothing the motion of the water like if it was a river of silk instead of water. This effect is stunning me. You can see a sample picture of this effect on Windows 7 themes (think its Landscapes or Nature). You can also have this effect on a river with rocks on the bottom as long as there is movement of the water that creates bubbles but the best effect in my opinion is with falling water.\nFireworks I have seen so many people trying to shoot fireworks with their phone. This always give terrible results. First because holding a phone with your hands gives blurry images but I am not sure about the capacity of a phone to shoot good quality picture of a firework. However, I wish I could get out and manage to get a nice shoot of a color-changing firework popping that would be as good as a professional one (the kind of picture you see on promotional content)\nI have read on the subject and know a little bit how to prepare myself and what to expect. I hope everything will be nice.\nHowever, the difficulty with this kind of shooting is to wait for an event that includes fireworks at the end! Where I live, this only happens once a year on June 24th during the Fête Nationale.\nMacro I didn\u0026rsquo;t had the time to start with macro photography but I think that will be the kind of thing I will like to shoot. I am also expecting that I will get hooked to this. Shooting close-up picture of objects that people are not expecting to see that close. I am pretty sure that macro photography is one of the first things that beginners learn because it does not require too much technical challenge. I may need to buy another lens for good macro shots.\nThis might be something I would try first to get my hands dirty. I could also shoot some cliché subject like flowers and insects! haha\nWater drops This is something that is calling me like a lot! I think I might be interested by the technical challenge behind this. To get nice shot of water drops you need to time when releasing a water drop, camera shutter and the camera flash all together to get the picture you want. I might also consider making a test bench on the Raspberry Pi to get everything working together. Or I could just hunt the web to get an already working bench and start from there. The issue I might have are to get really artistic about this since I do not have a lot of imagination (I mean artistic imagination)\nTime lapse Time lapse photography is something that I tried before (a long time ago) but never got to the point of a final product simply because I got tired of it. It seems to easy when you look at the final video but I tend to forget the amount of time required to get the final product. To be able to get something viable you need to prepare yourself before taking the shots because if you don\u0026rsquo;t, you will have a hard time merging it all together.\nHowever, I do like time lapse photography because you can make a plain (or almost boring) event and make it so much more dramatic. For instance, I would like to shoot my house (or any other subject) during a 24h time lapse (to get the sun rise and set in the same video) just to see what it feels like.\nBefore I could manage to get a nice video I need to get more shooting experience with time lapse if I don\u0026rsquo;t want to get too angry about a bad picture set! I might try indoor first like creating a time lapse video of me unboxing something I bought or washing my car just to get to know the complete life cycle and be ready when I will really need a time lapse video\nLight trails There is actually 2 things I would like to shoot using light trails. The first obvious one is car light trails in a scene where the background seems alive like the night life of a city. This have been visited by other photographers many times and I don\u0026rsquo;t think you need explanation on what I would like to achieve. I might need to start with a boring spot not too far from home to make tests and see what kind of results I can expect.\nThe next thing I want to try is creating my own light trails with a laser pointing on the ground. You can actually \u0026ldquo;write\u0026rdquo; something nice with a long enough exposure. Do it with multiple color lasers (red, blue and green) to create more dramatic effects.\nTilt shift Tilt shifting gives a really unique effect to your picture. I makes all you subject you shoot as if they were tiny. A picture of a parking lot would look like car toys for a little boy. However, you need really expensive gears to create this effect. I am also expecting a huge learning curve to get good results so that may be my last thing I will try in photography.\nPanning Panning is another cool way to capture movement in a picture. The picture you get is a sharp enough subject on a blurred background. The effect can be achieve shooting a moving subject while panning the camera to follow the subject using a relatively long shutter speed (1/40 to 1/20 of a second). If you are good enough, you get a clear (sharp) subject that may have some part blurred because of the movement. When you shoot a cyclist in panning, you will get a clear head, body \u0026amp; arms but a blurry background and blurry legs.\nHDR HDR stands for High dynamic range. This is a post-processing technique that gets really dramatic pictures not possible with a single shot. The process requires taking 3 pictures of the same scene: the first one under exposed, the second one with a good exposition and a final that is overexposed and then merging the picture together to get a good exposition a all dark and light areas. For instance, taking a picture of a car with the sun in background usually gets a darker car with a good sky. With HDR, you get a good exposition with both.\nChronophotography Chronophotography is another way to capture movement that I would like to explore. This technique involves taking multiple shots of a moving object from the same point of view. During post-processing, you can merge the pictures keeping the same background and adding multiple frames of the subject. You can get a nice effect of chronophotography by taking multiple pictures of someone running on a beach or jumping of a springboard.\nLightning Shooting lightning is pretty simple but hard at the same time. You only need a camera that can leave its shutter open for a long time (bulb mode). I am pretty sure that lightning is an easy way to impress your friends without too much hassle. 🙂\nMeteor I don\u0026rsquo;t even know if that would be possible or not but I would like to shoot the Perseid meteor shower or the Hale-Bopp comet.\nFun generic stuff  A panorama: Shoot a simple but great panorama picture. Fast moving objects like racing cars or planes. Smoke art Take a picture of the house during all seasons from the same point of view Mount a camera on a balloon or kite and take a picture of myself from high above Step motion video. Take multiple pictures of myself over a nice background where I jump with my knees folded and move while always keeping my knees folded. ",
    "ref": "/my-expectations-and-things-i-would-like-to-shoot/"
  },{
    "title": "How photography all started",
    "date": "",
    "description": "",
    "body": "Hi everyone. This is my first post regarding photography. I recently started this hobby but I had an interest in photography since a long time but never pursued this hobby because I always tough that good photography skills were not achievable or simply because you need a lot of gears that are expensive. Unfortunately, I changed my mind and rediscovered photography.\nMisconceptions\r\rI always had high expectations about what a good camera should do and one of them was quick shooting in continuous mode (read 10-15fps). That feature was handy when you shoot moving objects or when you go to a water park because it allows you to freeze the action. (I tough high fps in continuous mode means a higher shutter speed)\nI have spent hundreds of dollars on useless cameras that did not always shoot high quality photos but was shooting pretty quick! Man I was wrong! I started to try to understand why I didn\u0026rsquo;t get the results I was expecting and started leaning about the technical aspect of photography.\nTime for a change I understood that I needed a professional camera and that I had to move away from the \u0026ldquo;automatic mode\u0026rdquo; to the manual modes available with a DSLR camera. I had to make some savings and finally bough a Canon EOS Rebel SL1.\nSooner I started to like the artistic aspect of photography and get curious about the technical aspect of every picture I came across.\nMy gears Here are the gears I currently own and use:\n Canon EOS Rebel SL1 Canon EF-S 18-55mm f/3.5-5.6 STM IS Manfrotto 190XPROB Tripod with 3D Head 804RC2 Macro extension tubes: 13mm, 21mm, 31mm Many filters: ND2, ND4, ND8, UV, CPL, and FDL Canon EOS AC Adaptor with DC Coupler DR-E15 A no-name Canon TC-80N3 intervalometer  Feel free to look at what I managed to shoot and don\u0026rsquo;t hesitate to give positive comments.\n",
    "ref": "/how-photography-all-started/"
  },{
    "title": "DIY Custom baby gate",
    "date": "",
    "description": "",
    "body": "**Introduction ** Following the birth of a child and after the celebration is all the stuff you have to buy to protect the house of \u0026ldquo;potential dangers\u0026rdquo;. Quickly, you realize that you need to buy a baby gate.\nI looked at several models and I have not found a model that can suit my needs and my situation. I needed a baby gate that can:\n Cover a length of at least 52 inches.  Operate at an angle of 41.9 degrees. Attachable to a wall and a stair railing. Non-intrusive (it should not leave any mark on the ramp once removed). Strong enough to withstand a child jumping on it.    Unfortunately, the area to be protected is very large and I have not managed to find a gate that is long enough and solid to block the access to the stairs. This is how I started this project: ​​build my own baby gate.\nProject data Equipment The material for this project is as follows:\n 5 strips 2x2x8' for the posts. 2 strips of 1x5½x8' for up and down rows. 1 strips of 2x4x40″ for attachment to the boom. Dyeing Hinges Latch  Total cost of the project The total cost of the project is about 80$ which is quite high for this type of project. The total cost includes a lot of wasted wood.\nPreparation time The whole thing took about 10-15 hours to complete (I do not have the exact time) not counting the drying time for dyeing. This includes the time to buy wood and all stages of construction.\nBuilding steps Construction steps are very simple. Just cut and assemble.\nCutting and Sanding The easiest to begin with is to start with the posts. A total of 11 posts are needed. One of them will be use to attach the gate to the wall and a second one that ends flush with the gate to lock with the ramp. You need to cut 11 bars of 2x2 each one with a length of 35¾ inches.\nThe first post of the gate is special. It should be cut in an angle of 45 degrees but too much to make a triangle, but rather to 5 sides figure. Both pieces must of the same length: the 45 degrees one and the wall mount. The purpose is to facilitate the attachment step in the wall assembly. The following picture explains it better:\n\nSand all parts before assembly.\nAssembly There is nothing special to say to assemble the posts. Each one is screwed to the top and bottom rails. Each one is spaced by 4 inches which is a regular space for a stair railing.\nFixing the ramp The innovation of this baby gate is related to the means used for fixing to the rail. This solution is not intrusive and does not leave a mark on the ramp when the barrier will no longer be necessary. No attachments or adhesive is required and the whole is as strong as the ramp.\nThe ramp is composed of two vertical bars on each side of the horizontal rail.\n\n Dying Once assembly is complete, you only have to dye the wood to the right color.\nWhen you apply a dye, you must be careful not to judge the appearance of the dye when it is dry. A dye like the photos has a brown-purple appearance when applied on wood and wet.\nInstallation Wall mounting For mounting on the wall, I used one of the bars that will be screwed into the wall through the plaster using two plaster screws. I have installed two hinges on the bar to be attached to the first rung of the fence (the one with a cut at 45 degrees).\nFinal Result Here is the final result:\n**\nMade anything differently? Take your time and do not skip step I was not convinced of the feasibility of the barrier when I started this project and so I did not do things in the right order. I was also too hurry to see the final product so I didn\u0026rsquo;t dye the wood before assembling it.\nIt would have been normal to dye the wood before assembly to avoid areas that are not accessible or impossible to dye.\nDying the wood each piece at a time would have been more uniform and would have avoided drops everywhere. However, these details are not visible to more than 3 meters from the barrier.\nSearch for a finished product I should have used a better wood quality. I have not taken the time to find the right wood to work with. I used the cheapest wood I could find at Home Depot but also wood for outdoor use instead of one with a more finished appearance for indoor use.\nNotes none\n",
    "ref": "/diy-custom-baby-gate/"
  },{
    "title": "DIY Barrière pour bébé personnalisée",
    "date": "",
    "description": "",
    "body": "Introduction Ce qui suit la naissance d\u0026rsquo;un enfant après les réjouissances c\u0026rsquo;est tous les trucs qu\u0026rsquo;il faut acheter pour protéger la maison des \u0026ldquo;dangers potentiels\u0026rdquo;. Rapidement, on doit acheter une barrière pour bébé.\nJ\u0026rsquo;ai regardé plusieurs modèles et je n\u0026rsquo;ai pas trouvé un modèle qui puisse convenir à mes besoins et à ma situation soit:\n Couvrir une longueur d\u0026rsquo;au moins 52 pouces.  Fonctionnant à un angle de 41.9 degrés. Pouvant se fixer à un mur et à une rampe d\u0026rsquo;escalier. Non-intrusive (elle ne doit pas laisser de marque sur la rampe une fois enlevée). Suffisamment solide pour résister à un enfant qui saute dessus.    Malheureusement, l\u0026rsquo;espace à protéger est très grand et je n\u0026rsquo;ai pas réussi à trouver une barrière qui soit suffisamment longue et à la fois solide pour bloquer le passage. Ce projet a donc pris naissance et je me suis lancé avec l\u0026rsquo;idée de faire ma propre barrière.\nDonnées du projet Matériel Le matériel pour ce projet est le suivant:\n 5 baguettes de 2x2x8' pour les poteaux. 2 planches de 1x5½x8' pour les rangées du haut et bas. 1 planche de 2x4x40 pour la fixation à la rampe. Teinture Pentures Loquet  Coût total Le coût total du projet est d\u0026rsquo;environ 80$ ce qui est assez élevé pour ce genre de projet. Le coût total inclus beaucoup de perte de bois.\nTemps de préparation Le tout a prit environ 10 à 15 heures à compléter (je n\u0026rsquo;ai pas le temps précis) mise à part le temps de séchage pour la teinture. Cela comprend le temps pour aller acheter le bois et toutes les étapes de construction.\nÉtapes Les étapes de construction sont très simple. Il suffit de couper et assembler.\nCoupe et sablage Le plus facile est de commencer par les poteaux. Au total, 11 poteaux sont nécessaires. dont 1 pour la fixation au mur et un second pour l\u0026rsquo;attache à la barrière. Il s\u0026rsquo;agit de couper 11 barreaux de 2 par 2 d\u0026rsquo;une longueur de 35¾ pouces.\nLe premier barreau de la barrière est particulier. Il doit être coupé dans un angle de 45 degrés mais pas de façon à faire un triangle mais plutôt une figure à 5 cotés. Le côté à 45 degrés doit avoir la même longueur que la penture. Le but est de faciliter la fixation au mur dans l\u0026rsquo;étape d\u0026rsquo;assemblage. La photo suivante l\u0026rsquo;explique plus facilement:\nIl aurait été normal de teindre le bois avant de l\u0026rsquo;assembler afin d\u0026rsquo;éviter d\u0026rsquo;avoir des zones inaccessibles et impossible à teindre.\nDe plus cela aurait permis d\u0026rsquo;avoir une teinture uniforme et évité d\u0026rsquo;avoir des coulisses un peu partout. Ces détails ne sont plus visibles à plus de 3 mètres de la barrière.\nRechercher d\u0026rsquo;avantage un produit fini Utiliser du bois de meilleur qualité. Je n\u0026rsquo;ai pas pris le temps de bien rechercher le bon bois pour travailler. J\u0026rsquo;ai utilisé le bois le moins cher que j\u0026rsquo;ai pu trouver chez Home Dépôt mais aussi du bois pour usage extérieur au lieu de celui avec une apparence plus fini pour usage intérieur.\nNotes aucune.\n",
    "ref": "/diy-barriere-pour-bebe-personnalisee/"
  },{
    "title": "Contact",
    "date": "",
    "description": "",
    "body": "Feel free to contact me about your DIY projects!\n",
    "ref": "/contact/"
  },{
    "title": "About me",
    "date": "",
    "description": "",
    "body": "Allow me to introduce myself My name is Antoine Beauchamp. I am a 40-ish years old software developer living north of Montreal, Canada. I love documenting and publishing projects that I do so that others may benefit from it. If you have similar projects that you worked on or simply wants to share yours, please get in touch!\nMy story I always liked to build and assemble things together. Doing this using nothing but my own hands. Unfortunately my hands never had the same point of view and I\u0026rsquo;ve never really been successful with manual tasks.\nOne day, my father bought myself an electronic lab kit which I loved playing with (this one!). It felt amazing to connect simple components together using only wires and end up with something interactive! However, I soon lost interest but can\u0026rsquo;t really remember why.\nThen I started reading a book about using how to program a computer. Quickly jumping to the end of the book, I understood that I could make awesome things like my own game!\nThis is why I felt in love with computer science. It was easy for me to create from nothing. Like many I started coding really simple stuff (read pong game or snakes!) in Basic when you had to assign numbers to each line of code. Since then the technology has evolved and so did I.\nMy education I first connected with software development in college. Thing were easy in college and time went pretty fast. I graduated from Cégep de St-Jérôme in 2002.\nOnce done, I started university. Things were really different and it finally felt like a challenge! I graduated from ÉTS (École de technologie supérieure) university in 2006 and started working for a small company in Montreal. I was developing a management software in a very specific domain and I felt I was not at my place. I was missing the creative and dynamic aspect of the job. I started looking for a new job and found a perfect match.\nMy job I currently work for a world leader company in modeling, simulation and training. Most of my work is in C++ but from time to time, I have to use C# and Java. Since 2008, I managed to develop quite a good set of skills (mostly in software development but also in how software interact with the outside world/hardware).\n(Note to self, add a list of technologies I know)\nThings I love I love the DIY way. If I have to buy something, I usually ask myself if I could make it first. Over time, I have been perfecting my skills in electronics and even wood working.\nIn my free time you can usually find me hanging out with my girlfriend, playing with my kids, in front of a big screen watching a movie or working on one of many projects like theses.\n",
    "ref": "/about/"
  }]
